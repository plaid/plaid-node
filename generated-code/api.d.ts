/**
 * The Plaid API
 * The Plaid REST API. Please see https://plaid.com/docs/api for more details.
 *
 * The version of the OpenAPI document: 2020-09-14_1.0.1
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import { Configuration } from './configuration';
import { AxiosPromise, AxiosInstance } from 'axios';
import { RequestArgs, BaseAPI } from './base';
/**
 * Information about the APR on the account.
 * @export
 * @interface APR
 */
export interface APR {
    /**
     * Annual Percentage Rate applied.
     * @type {number}
     * @memberof APR
     */
    apr_percentage?: number;
    /**
     * Possible values: `\"balance_transfer_apr\"`, `\"cash_apr\"`, `\"purchase_apr\"`, or `\"special\"`.
     * @type {string}
     * @memberof APR
     */
    apr_type?: string;
    /**
     * Amount of money that is subjected to the APR if a balance was carried beyond payment due date. How it is calculated can vary by card issuer. It is often calculated as an average daily balance.
     * @type {number}
     * @memberof APR
     */
    balance_subject_to_apr?: number | null;
    /**
     * Amount of money charged due to interest from last statement.
     * @type {number}
     * @memberof APR
     */
    interest_charge_amount?: number | null;
}
/**
 * A single account at a financial institution.
 * @export
 * @interface Account
 */
export interface Account {
    /**
     * Plaidâ€™s unique identifier for the account. This value will not change unless Plaid can\'t reconcile the account with the data returned by the financial institution. This may occur, for example, when the name of the account changes. If this happens a new `account_id` will be assigned to the account.   The `account_id` can also change if the `access_token` is deleted and the same credentials that were used to generate that `access_token` are used to generate a new `access_token` on a later date. In that case, the new `account_id` will be different from the old `account_id`.  Like all Plaid identifiers, the `account_id` is case sensitive.
     * @type {string}
     * @memberof Account
     */
    account_id: string;
    /**
     *
     * @type {AccountBalance}
     * @memberof Account
     */
    balances: AccountBalance;
    /**
     * The last 2-4 alphanumeric characters of an account\'s official account number. Note that the mask may be non-unique between an Item\'s accounts, and it may also not match the mask that the bank displays to the user.
     * @type {string}
     * @memberof Account
     */
    mask?: string | null;
    /**
     * The name of the account, either assigned by the user or by the financial institution itself
     * @type {string}
     * @memberof Account
     */
    name: string;
    /**
     * The official name of the account as given by the financial institution
     * @type {string}
     * @memberof Account
     */
    official_name?: string | null;
    /**
     *
     * @type {AccountType}
     * @memberof Account
     */
    type: AccountType;
    /**
     *
     * @type {AccountSubtype}
     * @memberof Account
     */
    subtype: AccountSubtype;
    /**
     * The current verification status of an Auth Item initiated through Automated or Manual micro-deposits.  Returned for Auth Items only. Possible values are:  `pending_automatic_verification`: The Item is pending automatic verification  `pending_manual_verification`: The Item is pending manual micro-deposit verification. Items remain in this state until the user successfully verifies the two amounts.  `automatically_verified`: The Item has successfully been automatically verified   `manually_verified`: The Item has successfully been manually verified  `verification_expired`: Plaid was unable to automatically verify the deposit within 7 calendar days and will no longer attempt to validate the Item. Users may retry by submitting their information again through Link.  `verification_failed`: The Item failed manual microdeposit verification because the user exhausted all 3 verification attempts. Users may retry by submitting their information again through Link.
     * @type {string}
     * @memberof Account
     */
    verification_status?: string | null;
    /**
     * Calculated data about the historical balances on the account. Only returned by Assets endpoints.
     * @type {Array<HistoricalBalance>}
     * @memberof Account
     */
    historical_balances?: Array<HistoricalBalance> | null;
    /**
     * Data returned by the financial institution about the account owner or owners. Only returned by Identity or Assets endpoints. Multiple owners on a single account will be represented in the same `owner` object, not in multiple owner objects within the array.
     * @type {Array<Owner>}
     * @memberof Account
     */
    owners?: Array<Owner> | null;
    /**
     * The duration of transaction history available for this Item, typically defined as the time since the date of the earliest transaction in that account. Only returned by Assets endpoints.
     * @type {number}
     * @memberof Account
     */
    days_available?: number | null;
    /**
     * Transaction history associated with the account. Only returned by Assets endpoints. Transaction history returned by endpoints such as `/transactions/get` or `/investments/transactions/get` will be returned in the top-level `transactions` field instead.
     * @type {Array<Transaction>}
     * @memberof Account
     */
    transactions?: Array<Transaction> | null;
}
/**
 * A set of fields describing the balance for an account. Available and current balance information may be cached and is not guaranteed to be up-to-date in realtime unless the balance object was returned by `/account/balance/get`.
 * @export
 * @interface AccountBalance
 */
export interface AccountBalance {
    /**
     * The amount of funds available to be withdrawn from the account, as determined by the financial institution.  For `credit`-type accounts, the `available` balance typically equals the `limit` less the `current` balance, less any pending outflows plus any pending inflows.  For `depository`-type accounts, the `available` balance typically equals the `current` balance less any pending outflows plus any pending inflows. For `depository`-type accounts, the `available` balance does not include the overdraft limit.  For `investment`-type accounts, the `available` balance is the total cash available to withdraw as presented by the institution.  Note that not all institutions calculate the ` available`  balance. In the event that `available` balance is unavailable, Plaid will return an `available` balance value of `null`.  Available balance may be cached and is not guaranteed to be up-to-date in realtime unless the value was returned by `/account/balance/get`.
     * @type {number}
     * @memberof AccountBalance
     */
    available?: number | null;
    /**
     * The total amount of funds in or owed by the account.  For `credit`-type accounts, a positive balance indicates the amount owed; a negative amount indicates the lender owing the account holder.  For `loan`-type accounts, the current balance is the principal remaining on the loan.  For `investment`-type accounts, the current balance is the total value of assets as presented by the institution.  Current balance may be cached and is not guaranteed to be up-to-date in realtime unless the value was returned by `/account/balance/get`.
     * @type {number}
     * @memberof AccountBalance
     */
    current?: number;
    /**
     * For `credit`-type accounts, this represents the credit limit.   For `depository`-type accounts, this represents the pre-arranged overdraft limit, which is common for current (checking) accounts in Europe.   In North America, this field is typically only available for `credit`-type accounts.
     * @type {number}
     * @memberof AccountBalance
     */
    limit?: number | null;
    /**
     * The ISO-4217 currency code of the balance. Always null if `unofficial_currency_code` is non-null.
     * @type {string}
     * @memberof AccountBalance
     */
    iso_currency_code?: string | null;
    /**
     * The unofficial currency code associated with the balance. Always null if `iso_currency_code` is non-null. Unofficial currency codes are used for currencies that do not have official ISO currency codes, such as cryptocurrencies and the currencies of certain countries.  See the [currency code schema](/docs-beta/api/accounts#currency-code-schema) for a full listing of supported `unofficial_currency_code`s.
     * @type {string}
     * @memberof AccountBalance
     */
    unofficial_currency_code?: string | null;
}
/**
 * See the [Account type schema](/docs-beta/api/accounts/#account-type-schema) for a full listing of account types and corresponding subtypes.
 * @export
 * @enum {string}
 */
export declare enum AccountSubtype {
    _401a = "401a",
    _401k = "401k",
    _403B = "403B",
    _457b = "457b",
    _529 = "529",
    Brokerage = "brokerage",
    CashIsa = "cash isa",
    EducationSavingsAccount = "education savings account",
    Gic = "gic",
    HealthReimbursementArrangement = "health reimbursement arrangement",
    Hsa = "hsa",
    Isa = "isa",
    Ira = "ira",
    Lif = "lif",
    Lira = "lira",
    Lrif = "lrif",
    Lrsp = "lrsp",
    NonTaxableBrokerageAccount = "non-taxable brokerage account",
    Other = "other",
    Prif = "prif",
    Rdsp = "rdsp",
    Resp = "resp",
    Rlif = "rlif",
    Rrif = "rrif",
    Pension = "pension",
    ProfitSharingPlan = "profit sharing plan",
    Retirement = "retirement",
    Roth = "roth",
    Roth401k = "roth 401k",
    Rrsp = "rrsp",
    SepIra = "sep ira",
    SimpleIra = "simple ira",
    Sipp = "sipp",
    StockPlan = "stock plan",
    ThriftSavingsPlan = "thrift savings plan",
    Tfsa = "tfsa",
    Trust = "trust",
    Ugma = "ugma",
    Utma = "utma",
    VariableAnnuity = "variable annuity",
    CreditCard = "credit card",
    Paypal = "paypal",
    Cd = "cd",
    Checking = "checking",
    Savings = "savings",
    MoneyMarket = "money market",
    Prepaid = "prepaid",
    Auto = "auto",
    Commercial = "commercial",
    Construction = "construction",
    Consumer = "consumer",
    Home = "home",
    HomeEquity = "home equity",
    Loan = "loan",
    Mortgage = "mortgage",
    Overdraft = "overdraft",
    LineOfCredit = "line of credit",
    Student = "student",
    CashManagement = "cash management",
    Keogh = "keogh",
    MutualFund = "mutual fund",
    Recurring = "recurring",
    Rewards = "rewards",
    SafeDeposit = "safe deposit",
    Sarsep = "sarsep"
}
/**
 * `brokerage:` Brokerage account `investment:` Investment account `credit:` Credit card `depository:` Depository account `loan:` Loan account `other:` Non-specified account type  See the [Account type schema](/docs-beta/api/accounts#account-type-schema) for a full listing of account types and corresponding subtypes.
 * @export
 * @enum {string}
 */
export declare enum AccountType {
    Brokerage = "brokerage",
    Investment = "investment",
    Credit = "credit",
    Depository = "depository",
    Loan = "loan",
    Other = "other"
}
/**
 *
 * @export
 * @interface AccountsGetRequest
 */
export interface AccountsGetRequest {
    /**
     * Your Plaid API `client_id`.
     * @type {string}
     * @memberof AccountsGetRequest
     */
    client_id: string;
    /**
     * Your Plaid API `secret`.
     * @type {string}
     * @memberof AccountsGetRequest
     */
    secret: string;
    /**
     * The access token associated with the Item data is being requested for.
     * @type {string}
     * @memberof AccountsGetRequest
     */
    access_token: string;
    /**
     *
     * @type {AccountsGetRequestOptions}
     * @memberof AccountsGetRequest
     */
    options?: AccountsGetRequestOptions | null;
}
/**
 *
 * @export
 * @interface AccountsGetRequestOptions
 */
export interface AccountsGetRequestOptions {
    /**
     * An array of `account_ids` to retrieve for the Account.
     * @type {Array<string>}
     * @memberof AccountsGetRequestOptions
     */
    account_ids?: Array<string>;
}
/**
 *
 * @export
 * @interface AccountsGetResponse
 */
export interface AccountsGetResponse {
    /**
     * An array of financial institution accounts associated with the Item.
     * @type {Array<Account>}
     * @memberof AccountsGetResponse
     */
    accounts?: Array<Account>;
    /**
     *
     * @type {Item}
     * @memberof AccountsGetResponse
     */
    item?: Item;
    /**
     * A unique identifier for the request, which can be used for troubleshooting. This identifier, like all Plaid identifiers, is case sensitive.
     * @type {string}
     * @memberof AccountsGetResponse
     */
    request_id?: string;
}
/**
 * A physical mailing address.
 * @export
 * @interface Address
 */
export interface Address {
    /**
     *
     * @type {AddressData}
     * @memberof Address
     */
    data?: AddressData;
    /**
     * When `true`, identifies the address as the primary address on an account.
     * @type {boolean}
     * @memberof Address
     */
    primary?: boolean | null;
}
/**
 * Data about the components comprising an address.
 * @export
 * @interface AddressData
 */
export interface AddressData {
    /**
     * The full city name
     * @type {string}
     * @memberof AddressData
     */
    city?: string;
    /**
     * The region or state Example: `\"NC\"`
     * @type {string}
     * @memberof AddressData
     */
    region?: string | null;
    /**
     * The full street address Example: `\"564 Main Street, APT 15\"`
     * @type {string}
     * @memberof AddressData
     */
    street?: string;
    /**
     * The postal code
     * @type {string}
     * @memberof AddressData
     */
    postal_code?: string | null;
    /**
     * The ISO 3166-1 alpha-2 country code
     * @type {string}
     * @memberof AddressData
     */
    country?: string;
}
/**
 * A payment amount.
 * @export
 * @interface Amount
 */
export interface Amount {
    /**
     * The ISO-4217 currency code of the payment. Currently supported currencies are `\"EUR\"` or `\"GBP\"`. For standing orders, `\"GBP\"` must be used.
     * @type {string}
     * @memberof Amount
     */
    currency: string;
    /**
     * The amount of the payment.
     * @type {number}
     * @memberof Amount
     */
    value?: number;
}
/**
 * An object representing an Asset Report
 * @export
 * @interface AssetReport
 */
export interface AssetReport {
    /**
     * A unique ID identifying an Asset Report. Like all Plaid identifiers, this ID is case sensitive.
     * @type {string}
     * @memberof AssetReport
     */
    asset_report_id?: string;
    /**
     * An identifier you determine and submit for the Asset Report.
     * @type {string}
     * @memberof AssetReport
     */
    client_report_id?: string;
    /**
     * The date and time when the Asset Report was created, in ISO 8601 format (e.g. \"2018-04-12T03:32:11Z\").
     * @type {string}
     * @memberof AssetReport
     */
    date_generated?: string;
    /**
     * The duration of transaction history you requested
     * @type {number}
     * @memberof AssetReport
     */
    days_requested?: number;
    /**
     *
     * @type {AssetReportUser}
     * @memberof AssetReport
     */
    user?: AssetReportUser;
    /**
     * Data returned by Plaid about each of the Items included in the Asset Report.
     * @type {Array<AssetReportItem>}
     * @memberof AssetReport
     */
    items?: Array<AssetReportItem>;
}
/**
 *
 * @export
 * @interface AssetReportAuditCopyCreateRequest
 */
export interface AssetReportAuditCopyCreateRequest {
    /**
     * Your Plaid API `client_id`.
     * @type {string}
     * @memberof AssetReportAuditCopyCreateRequest
     */
    client_id: string;
    /**
     * Your Plaid API `secret`.
     * @type {string}
     * @memberof AssetReportAuditCopyCreateRequest
     */
    secret: string;
    /**
     * A token that can be provided to endpoints such as `/asset_report/get` or `/asset_report/pdf_get` to fetch or update an Asset Report.
     * @type {string}
     * @memberof AssetReportAuditCopyCreateRequest
     */
    asset_report_token: string;
    /**
     * The `auditor_id` of the third party with whom you would like to share the Asset Report.
     * @type {string}
     * @memberof AssetReportAuditCopyCreateRequest
     */
    auditor_id: string;
}
/**
 *
 * @export
 * @interface AssetReportAuditCopyCreateResponse
 */
export interface AssetReportAuditCopyCreateResponse {
    /**
     * A token that can be shared with a third party auditor to allow them to obtain access to the Asset Report. This token should be stored securely.
     * @type {string}
     * @memberof AssetReportAuditCopyCreateResponse
     */
    audit_copy_token?: string;
    /**
     * A unique identifier for the request, which can be used for troubleshooting. This identifier, like all Plaid identifiers, is case sensitive.
     * @type {string}
     * @memberof AssetReportAuditCopyCreateResponse
     */
    request_id?: string;
}
/**
 *
 * @export
 * @interface AssetReportAuditCopyGetRequest
 */
export interface AssetReportAuditCopyGetRequest {
    /**
     * Your Plaid API `client_id`.
     * @type {string}
     * @memberof AssetReportAuditCopyGetRequest
     */
    client_id: string;
    /**
     * Your Plaid API `secret`.
     * @type {string}
     * @memberof AssetReportAuditCopyGetRequest
     */
    secret: string;
    /**
     * The `audit_copy_token` granting access to the Audit Copy you would like to get.
     * @type {string}
     * @memberof AssetReportAuditCopyGetRequest
     */
    audit_copy_token: string;
}
/**
 *
 * @export
 * @interface AssetReportAuditCopyRemoveRequest
 */
export interface AssetReportAuditCopyRemoveRequest {
    /**
     * Your Plaid API `client_id`.
     * @type {string}
     * @memberof AssetReportAuditCopyRemoveRequest
     */
    client_id: string;
    /**
     * Your Plaid API `secret`.
     * @type {string}
     * @memberof AssetReportAuditCopyRemoveRequest
     */
    secret: string;
    /**
     * The `audit_copy_token` granting access to the Audit Copy you would like to revoke.
     * @type {string}
     * @memberof AssetReportAuditCopyRemoveRequest
     */
    audit_copy_token: string;
}
/**
 *
 * @export
 * @interface AssetReportAuditCopyRemoveResponse
 */
export interface AssetReportAuditCopyRemoveResponse {
    /**
     * `true` if the Audit Copy was successfully removed.
     * @type {boolean}
     * @memberof AssetReportAuditCopyRemoveResponse
     */
    removed?: boolean;
    /**
     * A unique identifier for the request, which can be used for troubleshooting. This identifier, like all Plaid identifiers, is case sensitive.
     * @type {string}
     * @memberof AssetReportAuditCopyRemoveResponse
     */
    request_id?: string;
}
/**
 *
 * @export
 * @interface AssetReportCreateRequest
 */
export interface AssetReportCreateRequest {
    /**
     * Your Plaid API `client_id`.
     * @type {string}
     * @memberof AssetReportCreateRequest
     */
    client_id: string;
    /**
     * Your Plaid API `secret`.
     * @type {string}
     * @memberof AssetReportCreateRequest
     */
    secret: string;
    /**
     * An array of access tokens corresponding to the Items that will be included in the report. The `assets` product must have been initialized for the Items during link; the Assets product cannot be added after initialization.
     * @type {Array<string>}
     * @memberof AssetReportCreateRequest
     */
    access_tokens: Array<string>;
    /**
     * The maximum number of days of history to include in the Asset Report. Must be an integer, with a minimum value of 0 and a maximum value of 730. If using Fannie Mae Day 1 Certainty, `days_requested` must be at least 61 for new originations or at least 31 for refinancings.
     * @type {number}
     * @memberof AssetReportCreateRequest
     */
    days_requested: number;
    /**
     *
     * @type {AssetReportCreateRequestOptions}
     * @memberof AssetReportCreateRequest
     */
    options?: AssetReportCreateRequestOptions;
}
/**
 * If provided, must be non-`null`. The optional `user` object is required for the report to be eligible for Fannie Mae\'s Day 1 Certainty program.
 * @export
 * @interface AssetReportCreateRequestOptions
 */
export interface AssetReportCreateRequestOptions {
    /**
     * Client-generated identifier, which can be used by lenders to track loan applications.
     * @type {string}
     * @memberof AssetReportCreateRequestOptions
     */
    client_report_id?: string;
    /**
     * URL to which Plaid will send Assets webhooks, for example when the requested Asset Report is ready.
     * @type {string}
     * @memberof AssetReportCreateRequestOptions
     */
    webhook?: string;
    /**
     *
     * @type {AssetReportUser}
     * @memberof AssetReportCreateRequestOptions
     */
    user?: AssetReportUser;
}
/**
 *
 * @export
 * @interface AssetReportCreateResponse
 */
export interface AssetReportCreateResponse {
    /**
     * A token that can be provided to endpoints such as `/asset_report/get` or `/asset_report/pdf_get` to fetch or update an Asset Report.
     * @type {string}
     * @memberof AssetReportCreateResponse
     */
    asset_report_token?: string;
    /**
     * A unique ID identifying an Asset Report. Like all Plaid identifiers, this ID is case sensitive.
     * @type {string}
     * @memberof AssetReportCreateResponse
     */
    asset_report_id?: string;
    /**
     * A unique identifier for the request, which can be used for troubleshooting. This identifier, like all Plaid identifiers, is case sensitive.
     * @type {string}
     * @memberof AssetReportCreateResponse
     */
    request_id?: string;
}
/**
 *
 * @export
 * @interface AssetReportFilterRequest
 */
export interface AssetReportFilterRequest {
    /**
     * Your Plaid API `client_id`.
     * @type {string}
     * @memberof AssetReportFilterRequest
     */
    client_id: string;
    /**
     * Your Plaid API `secret`.
     * @type {string}
     * @memberof AssetReportFilterRequest
     */
    secret: string;
    /**
     * A token that can be provided to endpoints such as `/asset_report/get` or `/asset_report/pdf_get` to fetch or update an Asset Report.
     * @type {string}
     * @memberof AssetReportFilterRequest
     */
    asset_report_token: string;
    /**
     * The accounts to exclude from the Asset Report, identified by `account_id`.
     * @type {Array<string>}
     * @memberof AssetReportFilterRequest
     */
    account_ids_to_exclude: Array<string>;
}
/**
 *
 * @export
 * @interface AssetReportFilterResponse
 */
export interface AssetReportFilterResponse {
    /**
     * A token that can be provided to endpoints such as `/asset_report/get` or `/asset_report/pdf_get` to fetch or update an Asset Report.
     * @type {string}
     * @memberof AssetReportFilterResponse
     */
    asset_report_token?: string;
    /**
     * A unique ID identifying an Asset Report. Like all Plaid identifiers, this ID is case sensitive.
     * @type {string}
     * @memberof AssetReportFilterResponse
     */
    asset_report_id?: string;
    /**
     * A unique identifier for the request, which can be used for troubleshooting. This identifier, like all Plaid identifiers, is case sensitive.
     * @type {string}
     * @memberof AssetReportFilterResponse
     */
    request_id?: string;
}
/**
 *
 * @export
 * @interface AssetReportGetRequest
 */
export interface AssetReportGetRequest {
    /**
     * Your Plaid API `client_id`.
     * @type {string}
     * @memberof AssetReportGetRequest
     */
    client_id: string;
    /**
     * Your Plaid API `secret`.
     * @type {string}
     * @memberof AssetReportGetRequest
     */
    secret: string;
    /**
     * A token that can be provided to endpoints such as `/asset_report/get` or `/asset_report/pdf_get` to fetch or update an Asset Report.
     * @type {string}
     * @memberof AssetReportGetRequest
     */
    asset_report_token: string;
    /**
     * `true` if you would like to retrieve the Asset Report with Insights, `false` otherwise. This field defaults to `false` if omitted. [Contact Plaid Support](https://dashboard.plaid.com/support) to get access to this feature.
     * @type {boolean}
     * @memberof AssetReportGetRequest
     */
    include_insights?: boolean;
}
/**
 *
 * @export
 * @interface AssetReportGetResponse
 */
export interface AssetReportGetResponse {
    /**
     *
     * @type {AssetReport}
     * @memberof AssetReportGetResponse
     */
    report?: AssetReport;
    /**
     * If the Asset Report generation was successful but identity information cannot be returned, this array will contain information about the errors causing identity information to be missing
     * @type {Array<Warning>}
     * @memberof AssetReportGetResponse
     */
    warnings?: Array<Warning>;
    /**
     * A unique identifier for the request, which can be used for troubleshooting. This identifier, like all Plaid identifiers, is case sensitive.
     * @type {string}
     * @memberof AssetReportGetResponse
     */
    request_id?: string;
}
/**
 * A representation of an Item within an Asset Report.
 * @export
 * @interface AssetReportItem
 */
export interface AssetReportItem {
    /**
     * The `item_id` of the Item associated with this webhook, warning, or error
     * @type {string}
     * @memberof AssetReportItem
     */
    item_id?: string;
    /**
     * The full financial institution name associated with the Item.
     * @type {string}
     * @memberof AssetReportItem
     */
    institution_name?: string;
    /**
     * The id of the financial institution associated with the Item.
     * @type {string}
     * @memberof AssetReportItem
     */
    institution_id?: string;
    /**
     * The date and time when this Itemâ€™s data was last retrieved from the financial institution, in ISO 8601 format.
     * @type {string}
     * @memberof AssetReportItem
     */
    date_last_updated?: string;
    /**
     * Data about each of the accounts open on the Item.
     * @type {Array<Account>}
     * @memberof AssetReportItem
     */
    accounts?: Array<Account>;
}
/**
 *
 * @export
 * @interface AssetReportPDFGetRequest
 */
export interface AssetReportPDFGetRequest {
    /**
     * Your Plaid API `client_id`.
     * @type {string}
     * @memberof AssetReportPDFGetRequest
     */
    client_id: string;
    /**
     * Your Plaid API `secret`.
     * @type {string}
     * @memberof AssetReportPDFGetRequest
     */
    secret: string;
    /**
     * A token that can be provided to endpoints such as `/asset_report/get` or `/asset_report/pdf_get` to fetch or update an Asset Report.
     * @type {string}
     * @memberof AssetReportPDFGetRequest
     */
    asset_report_token: string;
}
/**
 *
 * @export
 * @interface AssetReportRefreshRequest
 */
export interface AssetReportRefreshRequest {
    /**
     * Your Plaid API `client_id`.
     * @type {string}
     * @memberof AssetReportRefreshRequest
     */
    client_id: string;
    /**
     * Your Plaid API `secret`.
     * @type {string}
     * @memberof AssetReportRefreshRequest
     */
    secret: string;
    /**
     * The `asset_report_token` returned by the original call to `/asset_report/create`
     * @type {string}
     * @memberof AssetReportRefreshRequest
     */
    asset_report_token: string;
    /**
     * The maximum number of days of history to include in the Asset Report. Must be an integer, with a minimum value of 0 and a maximum value of 730. If not specified, the value from the original call to `/asset_report/create` will be used.
     * @type {number}
     * @memberof AssetReportRefreshRequest
     */
    days_requested?: number;
    /**
     *
     * @type {AssetReportRefreshRequestOptions}
     * @memberof AssetReportRefreshRequest
     */
    options?: AssetReportRefreshRequestOptions;
}
/**
 * If provided, cannot be `null`. If not specified, the `options` from the original call to `/asset_report/create` will be used.
 * @export
 * @interface AssetReportRefreshRequestOptions
 */
export interface AssetReportRefreshRequestOptions {
    /**
     * Client-generated identifier, which can be used by lenders to track loan applications.
     * @type {string}
     * @memberof AssetReportRefreshRequestOptions
     */
    client_report_id?: string;
    /**
     * URL to which Plaid will send Assets webhooks, for example when the requested Asset Report is ready.
     * @type {string}
     * @memberof AssetReportRefreshRequestOptions
     */
    webhook?: string;
    /**
     *
     * @type {AssetReportUser}
     * @memberof AssetReportRefreshRequestOptions
     */
    user?: AssetReportUser;
}
/**
 *
 * @export
 * @interface AssetReportRefreshResponse
 */
export interface AssetReportRefreshResponse {
    /**
     * A unique ID identifying an Asset Report. Like all Plaid identifiers, this ID is case sensitive.
     * @type {string}
     * @memberof AssetReportRefreshResponse
     */
    asset_report_id?: string;
    /**
     * A token that can be provided to endpoints such as `/asset_report/get` or `/asset_report/pdf_get` to fetch or update an Asset Report.
     * @type {string}
     * @memberof AssetReportRefreshResponse
     */
    asset_report_token?: string;
    /**
     * A unique identifier for the request, which can be used for troubleshooting. This identifier, like all Plaid identifiers, is case sensitive.
     * @type {string}
     * @memberof AssetReportRefreshResponse
     */
    request_id?: string;
}
/**
 *
 * @export
 * @interface AssetReportRemoveRequest
 */
export interface AssetReportRemoveRequest {
    /**
     * Your Plaid API `client_id`.
     * @type {string}
     * @memberof AssetReportRemoveRequest
     */
    client_id: string;
    /**
     * Your Plaid API `secret`.
     * @type {string}
     * @memberof AssetReportRemoveRequest
     */
    secret: string;
    /**
     * A token that can be provided to endpoints such as `/asset_report/get` or `/asset_report/pdf_get` to fetch or update an Asset Report.
     * @type {string}
     * @memberof AssetReportRemoveRequest
     */
    asset_report_token: string;
}
/**
 *
 * @export
 * @interface AssetReportRemoveResponse
 */
export interface AssetReportRemoveResponse {
    /**
     * `true` if the Asset Report was successfully removed.
     * @type {boolean}
     * @memberof AssetReportRemoveResponse
     */
    removed?: boolean;
    /**
     * A unique identifier for the request, which can be used for troubleshooting. This identifier, like all Plaid identifiers, is case sensitive.
     * @type {string}
     * @memberof AssetReportRemoveResponse
     */
    request_id?: string;
}
/**
 * The user object allows you to provide additional information about the user to be appended to the Asset Report. All fields are optional. The `first_name`, `last_name`, and `ssn` fields are required if you would like the Report to be eligible for Fannie Maeâ€™s Day 1 Certaintyâ„¢ program.
 * @export
 * @interface AssetReportUser
 */
export interface AssetReportUser {
    /**
     * An identifier you determine and submit for the user.
     * @type {string}
     * @memberof AssetReportUser
     */
    client_user_id?: string;
    /**
     * The user\'s first name. Required for the Fannie Mae Day 1 Certaintyâ„¢ program.
     * @type {string}
     * @memberof AssetReportUser
     */
    first_name?: string;
    /**
     * The user\'s middle name
     * @type {string}
     * @memberof AssetReportUser
     */
    middle_name?: string;
    /**
     * The user\'s last name.  Required for the Fannie Mae Day 1 Certaintyâ„¢ program.
     * @type {string}
     * @memberof AssetReportUser
     */
    last_name?: string;
    /**
     * The user\'s Social Security Number. Required for the Fannie Mae Day 1 Certaintyâ„¢ program.   Format: \"ddd-dd-dddd\"
     * @type {string}
     * @memberof AssetReportUser
     */
    ssn?: string;
    /**
     * The user\'s phone number, in E.164 format: +{countrycode}{number}. For example: \"+14151234567\"
     * @type {string}
     * @memberof AssetReportUser
     */
    phone_number?: string;
    /**
     * The user\'s email address.
     * @type {string}
     * @memberof AssetReportUser
     */
    email?: string;
}
/**
 * Fired when Asset Report generation has failed. The resulting `error` will have an `error_type` of `ASSET_REPORT_ERROR`.
 * @export
 * @interface AssetsErrorWebhook
 */
export interface AssetsErrorWebhook {
    /**
     * `ASSETS`
     * @type {string}
     * @memberof AssetsErrorWebhook
     */
    webhook_type?: string;
    /**
     * `ERROR`
     * @type {string}
     * @memberof AssetsErrorWebhook
     */
    webhook_code?: string;
    /**
     *
     * @type {Error}
     * @memberof AssetsErrorWebhook
     */
    error?: Error | null;
    /**
     * The ID associated with the Asset Report.
     * @type {string}
     * @memberof AssetsErrorWebhook
     */
    asset_report_id?: string;
}
/**
 * Fired when the Asset Report has been generated and `/asset_report/get` is ready to be called.  If you attempt to retrieve an Asset Report before this webhook has fired, youâ€™ll receive a response with the HTTP status code 400 and a Plaid error code of `PRODUCT_NOT_READY`.
 * @export
 * @interface AssetsProductReadyWebhook
 */
export interface AssetsProductReadyWebhook {
    /**
     * `ASSETS`
     * @type {string}
     * @memberof AssetsProductReadyWebhook
     */
    webhook_type?: string;
    /**
     * `PRODUCT_READY`
     * @type {string}
     * @memberof AssetsProductReadyWebhook
     */
    webhook_code?: string;
    /**
     * The `asset_report_id` that can be provided to `/asset_report/get` to retrieve the Asset Report.
     * @type {string}
     * @memberof AssetsProductReadyWebhook
     */
    asset_report_id?: string;
}
/**
 *
 * @export
 * @interface AuthGetRequest
 */
export interface AuthGetRequest {
    /**
     * Your Plaid API `client_id`.
     * @type {string}
     * @memberof AuthGetRequest
     */
    client_id: string;
    /**
     * Your Plaid API `secret`.
     * @type {string}
     * @memberof AuthGetRequest
     */
    secret: string;
    /**
     * The access token associated with the Item data is being requested for.
     * @type {string}
     * @memberof AuthGetRequest
     */
    access_token: string;
    /**
     *
     * @type {AuthGetRequestOptions}
     * @memberof AuthGetRequest
     */
    options?: AuthGetRequestOptions;
}
/**
 * An optional object to filter `/auth/get`  results.
 * @export
 * @interface AuthGetRequestOptions
 */
export interface AuthGetRequestOptions {
    /**
     * A list of `account_ids` to retrieve for the Item. Note: An error will be returned if a provided `account_id` is not associated with the Item.
     * @type {Array<string>}
     * @memberof AuthGetRequestOptions
     */
    account_ids?: Array<string>;
}
/**
 *
 * @export
 * @interface AuthGetResponse
 */
export interface AuthGetResponse {
    /**
     * The `accounts` for which numbers are being retrieved.
     * @type {Array<Account>}
     * @memberof AuthGetResponse
     */
    accounts?: Array<Account>;
    /**
     *
     * @type {AuthGetResponseNumbers}
     * @memberof AuthGetResponse
     */
    numbers?: AuthGetResponseNumbers;
    /**
     *
     * @type {Item}
     * @memberof AuthGetResponse
     */
    item?: Item;
    /**
     * A unique identifier for the request, which can be used for troubleshooting. This identifier, like all Plaid identifiers, is case sensitive.
     * @type {string}
     * @memberof AuthGetResponse
     */
    request_id?: string;
}
/**
 * An object containing identifying numbers used for making electronic transfers to and from the `accounts`. The identifying number type (ACH, EFT, IBAN, or BACS) used will depend on the country of the account. An account may have more than one number type. If a particular identifying number type is not used by any `accounts` for which data has been requested, the array for that type will be empty.
 * @export
 * @interface AuthGetResponseNumbers
 */
export interface AuthGetResponseNumbers {
    /**
     * An array of ACH numbers identifying accounts.
     * @type {Array<NumbersACH>}
     * @memberof AuthGetResponseNumbers
     */
    ach?: Array<NumbersACH>;
    /**
     * An array of EFT numbers identifying accounts.
     * @type {Array<NumbersEFT>}
     * @memberof AuthGetResponseNumbers
     */
    eft?: Array<NumbersEFT>;
    /**
     * An array of IBAN numbers identifying accounts.
     * @type {Array<NumbersInternational>}
     * @memberof AuthGetResponseNumbers
     */
    international?: Array<NumbersInternational>;
    /**
     * An array of BACS numbers identifying accounts.
     * @type {Array<NumbersBACS>}
     * @memberof AuthGetResponseNumbers
     */
    bacs?: Array<NumbersBACS>;
}
/**
 * Fired when an Item is verified via micro-deposits. We recommend communicating to your users when this event is received to notify them that their account is verified and ready for use.
 * @export
 * @interface AutomaticallyVerifiedWebhook
 */
export interface AutomaticallyVerifiedWebhook {
    /**
     * `AUTH`
     * @type {string}
     * @memberof AutomaticallyVerifiedWebhook
     */
    webhook_type?: string;
    /**
     * `AUTOMATICALLY_VERIFIED`
     * @type {string}
     * @memberof AutomaticallyVerifiedWebhook
     */
    webhook_code?: string;
    /**
     * The `account_id` of the account associated with the webhook
     * @type {string}
     * @memberof AutomaticallyVerifiedWebhook
     */
    account_id?: string;
    /**
     * The `item_id` of the Item associated with this webhook, warning, or error
     * @type {string}
     * @memberof AutomaticallyVerifiedWebhook
     */
    item_id?: string;
}
/**
 *
 * @export
 * @interface BalanceGetRequest
 */
export interface BalanceGetRequest {
    /**
     * The access token associated with the Item data is being requested for.
     * @type {string}
     * @memberof BalanceGetRequest
     */
    access_token: string;
    /**
     * Your Plaid API `secret`.
     * @type {string}
     * @memberof BalanceGetRequest
     */
    secret: string;
    /**
     * Your Plaid API `client_id`.
     * @type {string}
     * @memberof BalanceGetRequest
     */
    client_id: string;
    /**
     *
     * @type {BalanceGetRequestOptions}
     * @memberof BalanceGetRequest
     */
    options?: BalanceGetRequestOptions | null;
}
/**
 *
 * @export
 * @interface BalanceGetRequestOptions
 */
export interface BalanceGetRequestOptions {
    /**
     * A list of `account_ids` to retrieve for the Item. The default value is `null`.  Note: An error will be returned if a provided `account_id` is not associated with the Item.
     * @type {Array<string>}
     * @memberof BalanceGetRequestOptions
     */
    account_ids?: Array<string>;
}
/**
 *
 * @export
 * @interface BalanceGetResponse
 */
export interface BalanceGetResponse {
    /**
     * An array of accounts associated with the Item. Each account will include real-time balance information.
     * @type {Array<Account>}
     * @memberof BalanceGetResponse
     */
    accounts?: Array<Account>;
    /**
     * A unique identifier for the request, which can be used for troubleshooting. This identifier, like all Plaid identifiers, is case sensitive.
     * @type {string}
     * @memberof BalanceGetResponse
     */
    request_id?: string;
    /**
     *
     * @type {Item}
     * @memberof BalanceGetResponse
     */
    item?: Item;
}
/**
 *
 * @export
 * @interface CategoriesGetResponse
 */
export interface CategoriesGetResponse {
    /**
     * An array of all of the transaction categories used by Plaid.
     * @type {Array<Category>}
     * @memberof CategoriesGetResponse
     */
    categories?: Array<Category>;
}
/**
 * Information describing a transaction category
 * @export
 * @interface Category
 */
export interface Category {
    /**
     * An identifying number for the category. `category_id` is a Plaid-specific identifier and does not necessarily correspond to merchant category codes.
     * @type {string}
     * @memberof Category
     */
    category_id?: string;
    /**
     * `place` for physical transactions or `special` for other transactions such as bank charges.
     * @type {string}
     * @memberof Category
     */
    group?: string;
    /**
     * A hierarchical array of the categories to which this `category_id` belongs.
     * @type {Array<string>}
     * @memberof Category
     */
    hierarchy?: Array<string>;
}
/**
 * An error object and associated `item_id` used to identify a specific Item and error when a batch operation operating on multiple Items has encountered an error in one of the Items.
 * @export
 * @interface Cause
 */
export interface Cause {
    /**
     * The `item_id` of the Item associated with this webhook, warning, or error
     * @type {string}
     * @memberof Cause
     */
    item_id?: string;
    /**
     *
     * @type {Error}
     * @memberof Cause
     */
    error?: Error | null;
}
/**
 * ISO-3166-1 alpha-2 country code standard.
 * @export
 * @enum {string}
 */
export declare enum CountryCode {
    US = "US",
    GB = "GB",
    ES = "ES",
    NL = "NL",
    FR = "FR",
    IE = "IE",
    CA = "CA"
}
/**
 * An object representing a credit card account.
 * @export
 * @interface CreditCardLiability
 */
export interface CreditCardLiability {
    /**
     * The ID of the account that this liability belongs to.
     * @type {string}
     * @memberof CreditCardLiability
     */
    account_id?: string | null;
    /**
     * The various interest rates that apply to the account.
     * @type {Array<APR>}
     * @memberof CreditCardLiability
     */
    aprs?: Array<APR>;
    /**
     * true if a payment is currently overdue. Availability for this field is limited.
     * @type {boolean}
     * @memberof CreditCardLiability
     */
    is_overdue?: boolean | null;
    /**
     * The amount of the last payment.
     * @type {number}
     * @memberof CreditCardLiability
     */
    last_payment_amount?: number;
    /**
     * The date of the last payment. Dates are returned in an ISO 8601 format (YYYY-MM-DD). Availability for this field is limited.
     * @type {string}
     * @memberof CreditCardLiability
     */
    last_payment_date?: string;
    /**
     * The outstanding balance on the last statement. Availability for this field is limited.
     * @type {number}
     * @memberof CreditCardLiability
     */
    last_statement_balance?: number;
    /**
     * The date of the last statement. Dates are returned in an ISO 8601 format (YYYY-MM-DD).
     * @type {string}
     * @memberof CreditCardLiability
     */
    last_statement_issue_date?: string;
    /**
     * The minimum payment due for the next billing cycle.
     * @type {number}
     * @memberof CreditCardLiability
     */
    minimum_payment_amount?: number;
    /**
     * The due date for the next payment. The due date is `null` if a payment is not expected. Dates are returned in an ISO 8601 format (YYYY-MM-DD).
     * @type {string}
     * @memberof CreditCardLiability
     */
    next_payment_due_date?: string;
}
/**
 * Fired when new transaction data is available for an Item. Plaid will typically check for new transaction data several times a day.
 * @export
 * @interface DefaultUpdateWebhook
 */
export interface DefaultUpdateWebhook {
    /**
     * `TRANSACTIONS`
     * @type {string}
     * @memberof DefaultUpdateWebhook
     */
    webhook_type?: string;
    /**
     * `DEFAULT_UPDATE`
     * @type {string}
     * @memberof DefaultUpdateWebhook
     */
    webhook_code?: string;
    /**
     *
     * @type {Error}
     * @memberof DefaultUpdateWebhook
     */
    error?: Error | null;
    /**
     * The number of new transactions detected since the last time this webhook was fired.
     * @type {number}
     * @memberof DefaultUpdateWebhook
     */
    new_transactions?: number;
    /**
     * The `item_id` of the Item the webhook relates to.
     * @type {string}
     * @memberof DefaultUpdateWebhook
     */
    item_id?: string;
}
/**
 *
 * @export
 * @interface DepositSwitchCreateRequest
 */
export interface DepositSwitchCreateRequest {
    /**
     * Your Plaid API `client_id`.
     * @type {string}
     * @memberof DepositSwitchCreateRequest
     */
    client_id: string;
    /**
     * Your Plaid API `secret`.
     * @type {string}
     * @memberof DepositSwitchCreateRequest
     */
    secret: string;
    /**
     * Access token for the target Item, typically provided in the Import Item response.
     * @type {string}
     * @memberof DepositSwitchCreateRequest
     */
    target_access_token: string;
    /**
     * Plaid Account ID that specifies the target bank account. This account will become the recipient for a user\'s direct deposit.
     * @type {string}
     * @memberof DepositSwitchCreateRequest
     */
    target_account_id: string;
}
/**
 *
 * @export
 * @interface DepositSwitchCreateResponse
 */
export interface DepositSwitchCreateResponse {
    /**
     * ID of the Deposit Switch. This ID is persisted throughout the lifetime of the Deposit Switch.
     * @type {string}
     * @memberof DepositSwitchCreateResponse
     */
    deposit_switch_id?: string;
    /**
     * A unique identifier for the request, which can be used for troubleshooting. This identifier, like all Plaid identifiers, is case sensitive.
     * @type {string}
     * @memberof DepositSwitchCreateResponse
     */
    request_id?: string;
}
/**
 *
 * @export
 * @interface DepositSwitchGetRequest
 */
export interface DepositSwitchGetRequest {
    /**
     * Your Plaid API `client_id`.
     * @type {string}
     * @memberof DepositSwitchGetRequest
     */
    client_id: string;
    /**
     * Your Plaid API `secret`.
     * @type {string}
     * @memberof DepositSwitchGetRequest
     */
    secret: string;
    /**
     * The ID of the Deposit Switch
     * @type {string}
     * @memberof DepositSwitchGetRequest
     */
    deposit_switch_id: string;
}
/**
 *
 * @export
 * @interface DepositSwitchGetResponse
 */
export interface DepositSwitchGetResponse {
    /**
     * The ID of the Deposit Switch
     * @type {string}
     * @memberof DepositSwitchGetResponse
     */
    deposit_switch_id?: string;
    /**
     * The ID of the bank account the direct deposit was switched to
     * @type {string}
     * @memberof DepositSwitchGetResponse
     */
    target_account_id?: string;
    /**
     * The ID of the Item the direct deposit was switched to.
     * @type {string}
     * @memberof DepositSwitchGetResponse
     */
    target_item_id?: string;
    /**
     * string enum. Initially, the set of states will include `initialized`, `completed`, and `error`.
     * @type {string}
     * @memberof DepositSwitchGetResponse
     */
    state?: string;
    /**
     * When `true`, userâ€™s direct deposit goes to multiple banks. When false, userâ€™s direct deposit only goes to the target account. Always `null` if the Deposit Switch has not been completed.
     * @type {boolean}
     * @memberof DepositSwitchGetResponse
     */
    account_has_multiple_allocations?: boolean | null;
    /**
     * When `true`, the target account is allocated the remainder of direct deposit after all other allocations have been deducted. When `false`, userâ€™s direct deposit is allocated as a percent or amount. Always `null` if the Deposit Switch has not been completed.
     * @type {boolean}
     * @memberof DepositSwitchGetResponse
     */
    is_allocated_remainder?: boolean | null;
    /**
     * The percentage of direct deposit allocated to the target account. Always `null` if the target account is not allocated a percentage or if the Deposit Switch has not been completed or if `is_allocated_remainder` is true.
     * @type {boolean}
     * @memberof DepositSwitchGetResponse
     */
    percent_allocated?: boolean | null;
    /**
     * The dollar amount of direct deposit allocated to the target account. Always `null` if the target account is not allocated an amount or if the Deposit Switch has not been completed.
     * @type {boolean}
     * @memberof DepositSwitchGetResponse
     */
    amount_allocated?: boolean;
    /**
     * ISO8601 date the Deposit Switch was created.
     * @type {string}
     * @memberof DepositSwitchGetResponse
     */
    date_created?: string;
    /**
     * ISO8601 date the Deposit Switch was completed. Always `null` if the Deposit Switch has not been completed.
     * @type {string}
     * @memberof DepositSwitchGetResponse
     */
    date_completed?: string | null;
    /**
     * A unique identifier for the request, which can be used for troubleshooting. This identifier, like all Plaid identifiers, is case sensitive.
     * @type {string}
     * @memberof DepositSwitchGetResponse
     */
    request_id?: string;
}
/**
 *
 * @export
 * @interface DepositSwitchTokenCreateRequest
 */
export interface DepositSwitchTokenCreateRequest {
    /**
     * Your Plaid API `client_id`.
     * @type {string}
     * @memberof DepositSwitchTokenCreateRequest
     */
    client_id: string;
    /**
     * Your Plaid API `secret`.
     * @type {string}
     * @memberof DepositSwitchTokenCreateRequest
     */
    secret: string;
    /**
     * The ID of the Deposit Switch
     * @type {string}
     * @memberof DepositSwitchTokenCreateRequest
     */
    deposit_switch_id: string;
}
/**
 *
 * @export
 * @interface DepositSwitchTokenCreateResponse
 */
export interface DepositSwitchTokenCreateResponse {
    /**
     * Deposit Switch token, used to initialize Link for the Deposit Switch product
     * @type {string}
     * @memberof DepositSwitchTokenCreateResponse
     */
    deposit_switch_token?: string;
    /**
     * Expiration time of the token, in ISO8601 format
     * @type {string}
     * @memberof DepositSwitchTokenCreateResponse
     */
    deposit_switch_token_expiration_time?: string;
    /**
     * A unique identifier for the request, which can be used for troubleshooting. This identifier, like all Plaid identifiers, is case sensitive.
     * @type {string}
     * @memberof DepositSwitchTokenCreateResponse
     */
    request_id?: string;
}
/**
 * An object representing an email address
 * @export
 * @interface Email
 */
export interface Email {
    /**
     * The email address.
     * @type {string}
     * @memberof Email
     */
    data: string;
    /**
     * When `true`, identifies the email address as the primary email on an account.
     * @type {boolean}
     * @memberof Email
     */
    primary: boolean;
    /**
     * The type of email account as described by the financial institution. Possible values: `\"primary\"`, `\"secondary\"`, `\"other\"`
     * @type {string}
     * @memberof Email
     */
    type: string;
}
/**
 * An object representing a balance held by an account in the past
 * @export
 * @interface HistoricalBalance
 */
export interface HistoricalBalance {
    /**
     * The date of the calculated historical balance, in an ISO 8601 format (YYYY-MM-DD)
     * @type {string}
     * @memberof HistoricalBalance
     */
    date?: string;
    /**
     * The total amount of funds in the account, calculated from the `current` balance in the `balance` object by subtracting inflows and adding back outflows according to the posted date of each transaction.  If the account has any pending transactions, historical balance amounts on or after the date of the earliest pending transaction may differ if retrieved in subsequent Asset Reports as a result of those pending transactions posting.
     * @type {string}
     * @memberof HistoricalBalance
     */
    current?: string;
    /**
     * The ISO-4217 currency code of the balance. Always `null` if `unofficial_currency_code` is non-`null`.
     * @type {string}
     * @memberof HistoricalBalance
     */
    iso_currency_code?: string | null;
    /**
     * The unofficial currency code associated with the balance. Always `null` if `iso_currency_code` is non-`null`.  See the [currency code schema](/docs-beta/api/accounts#currency-code-schema) for a full listing of supported `iso_currency_code`s.
     * @type {string}
     * @memberof HistoricalBalance
     */
    unofficial_currency_code?: string | null;
}
/**
 * Fired when an Item\'s historical transaction pull is completed and Plaid has prepared as much historical transaction data as possible for the Item. Once this webhook has been fired, transaction data beyond the most recent 30 days can be fetched for the Item.
 * @export
 * @interface HistoricalUpdateWebhook
 */
export interface HistoricalUpdateWebhook {
    /**
     * `TRANSACTIONS`
     * @type {string}
     * @memberof HistoricalUpdateWebhook
     */
    webhook_type?: string;
    /**
     * `HISTORICAL_UPDATE`
     * @type {string}
     * @memberof HistoricalUpdateWebhook
     */
    webhook_code?: string;
    /**
     *
     * @type {Error}
     * @memberof HistoricalUpdateWebhook
     */
    error?: Error | null;
    /**
     * The number of new, unfetched transactions available
     * @type {number}
     * @memberof HistoricalUpdateWebhook
     */
    new_transactions?: number;
    /**
     * The `item_id` of the Item associated with this webhook, warning, or error
     * @type {string}
     * @memberof HistoricalUpdateWebhook
     */
    item_id?: string;
}
/**
 * A securities holding at an institution.
 * @export
 * @interface Holding
 */
export interface Holding {
    /**
     * The Plaid `account_id` associated with the holding.
     * @type {string}
     * @memberof Holding
     */
    account_id?: string;
    /**
     * The Plaid `security_id` associated with the holding.
     * @type {string}
     * @memberof Holding
     */
    security_id?: string;
    /**
     * The last price given by the institution for this security.
     * @type {number}
     * @memberof Holding
     */
    institution_price?: number;
    /**
     * The date at which `institution_price` was current.
     * @type {string}
     * @memberof Holding
     */
    institution_price_as_of?: string | null;
    /**
     * The value of the holding, as reported by the institution.
     * @type {number}
     * @memberof Holding
     */
    institution_value?: number;
    /**
     * The cost basis of the holding.
     * @type {number}
     * @memberof Holding
     */
    cost_basis?: number | null;
    /**
     * The total quantity of the asset held, as reported by the financial institution.
     * @type {number}
     * @memberof Holding
     */
    quantity?: number;
    /**
     * The ISO-4217 currency code of the holding. Always `null` if `unofficial_currency_code` is non-`null`.
     * @type {string}
     * @memberof Holding
     */
    iso_currency_code?: string | null;
    /**
     * The unofficial currency code associated with the holding. Always `null` if `iso_currency_code` is non-`null`. Unofficial currency codes are used for currencies that do not have official ISO currency codes, such as cryptocurrencies and the currencies of certain countries.  See the [currency code schema](/docs-beta/api/accounts#currency-code-schema) for a full listing of supported `iso_currency_code`s.
     * @type {string}
     * @memberof Holding
     */
    unofficial_currency_code?: string | null;
}
/**
 * Fired when new or updated holdings have been detected on an investment account. The webhook typically fires once per day, after market close, in response to any newly added holdings or price changes to existing holdings.
 * @export
 * @interface HoldingsDefaultUpdateWebhook
 */
export interface HoldingsDefaultUpdateWebhook {
    /**
     * `HOLDINGS`
     * @type {string}
     * @memberof HoldingsDefaultUpdateWebhook
     */
    webhook_type?: string;
    /**
     * `DEFAULT_UPDATE`
     * @type {string}
     * @memberof HoldingsDefaultUpdateWebhook
     */
    webhook_code?: string;
    /**
     * The `item_id` of the Item associated with this webhook, warning, or error
     * @type {string}
     * @memberof HoldingsDefaultUpdateWebhook
     */
    item_id?: string;
    /**
     *
     * @type {Error}
     * @memberof HoldingsDefaultUpdateWebhook
     */
    error?: Error | null;
    /**
     * The number of new holdings reported since the last time this webhook was fired.
     * @type {number}
     * @memberof HoldingsDefaultUpdateWebhook
     */
    new_holdings?: number;
    /**
     * The number of updated holdings reported since the last time this webhook was fired.
     * @type {number}
     * @memberof HoldingsDefaultUpdateWebhook
     */
    updated_holdings?: number;
}
/**
 *
 * @export
 * @interface IdentityGetRequest
 */
export interface IdentityGetRequest {
    /**
     * Your Plaid API `client_id`.
     * @type {string}
     * @memberof IdentityGetRequest
     */
    client_id: string;
    /**
     * Your Plaid API `secret`.
     * @type {string}
     * @memberof IdentityGetRequest
     */
    secret: string;
    /**
     * The access token associated with the Item data is being requested for.
     * @type {string}
     * @memberof IdentityGetRequest
     */
    access_token: string;
}
/**
 *
 * @export
 * @interface IdentityGetResponse
 */
export interface IdentityGetResponse {
    /**
     * The accounts for which Identity data has been requested
     * @type {Array<Account>}
     * @memberof IdentityGetResponse
     */
    accounts?: Array<Account>;
    /**
     *
     * @type {Item}
     * @memberof IdentityGetResponse
     */
    item?: Item;
    /**
     * A unique identifier for the request, which can be used for troubleshooting. This identifier, like all Plaid identifiers, is case sensitive.
     * @type {string}
     * @memberof IdentityGetResponse
     */
    request_id?: string;
}
/**
 * The `inflow_model` allows you to model a test account that receives regular income or make regular payments on a loan. Any transactions generated by the `inflow_model` will appear in addition to randomly generated test data or transactions specified by `override_accounts`.
 * @export
 * @interface InflowModel
 */
export interface InflowModel {
    /**
     * Inflow model. One of the following:  `none`: No income `monthly-income`: Income occurs once per month `monthly-balance-payment`: Pays off the balance on a liability account at the given statement day of month `monthly-interest-only-payment`: Makes an interest-only payment on a liability account at the given statement day of month. Note that account types supported by Liabilities will accrue interest in the Sandbox. The types are account type `credit` with subtype `credit` or `paypal`, and account type `loan` with subtype `student`.
     * @type {string}
     * @memberof InflowModel
     */
    type: string;
    /**
     * Amount of income per month. This value is required if `type` is `monthly-income`.
     * @type {number}
     * @memberof InflowModel
     */
    income_amount?: number;
    /**
     * Number between 1 and 28, or `last` meaning the last day of the month. The day of the month on which the income transaction will appear. The name of the income transaction. This field is required if `type` is `monthly-income`, `monthly-balance-payment` or `monthly-interest-only-payment`.
     * @type {number}
     * @memberof InflowModel
     */
    payment_day_of_month?: number;
    /**
     * The name of the income transaction. This field is required if `type` is `monthly-income`, `monthly-balance-payment` or `monthly-interest-only-payment`.
     * @type {string}
     * @memberof InflowModel
     */
    transaction_name?: string;
    /**
     * Number between 1 and 28, or `last` meaning the last day of the month. The day of the month on which the balance is calculated for the next payment. The name of the income transaction. This field is required if `type` is `monthly-balance-payment` or `monthly-interest-only-payment`.
     * @type {string}
     * @memberof InflowModel
     */
    statement_day_of_month?: string;
}
/**
 * Fired when an Item\'s initial transaction pull is completed. Once this webhook has been fired, transaction data for the most recent 30 days can be fetched for the Item.
 * @export
 * @interface InitialUpdateWebhook
 */
export interface InitialUpdateWebhook {
    /**
     * `TRANSACTIONS`
     * @type {string}
     * @memberof InitialUpdateWebhook
     */
    webhook_type?: string;
    /**
     * `INITIAL_UPDATE`
     * @type {string}
     * @memberof InitialUpdateWebhook
     */
    webhook_code?: string;
    /**
     * The error code associated with the webhook.
     * @type {string}
     * @memberof InitialUpdateWebhook
     */
    error?: string | null;
    /**
     * The number of new, unfetched transactions available.
     * @type {number}
     * @memberof InitialUpdateWebhook
     */
    new_transactions?: number;
    /**
     * The `item_id` of the Item associated with this webhook, warning, or error
     * @type {string}
     * @memberof InitialUpdateWebhook
     */
    item_id?: string;
}
/**
 * Details relating to a specific financial institution
 * @export
 * @interface Institution
 */
export interface Institution {
    /**
     * Unique identifier for the institution
     * @type {string}
     * @memberof Institution
     */
    institution_id?: string;
    /**
     * The official name of the institution
     * @type {string}
     * @memberof Institution
     */
    name?: string;
    /**
     * A list of the Plaid products supported by the institution
     * @type {Array<string>}
     * @memberof Institution
     */
    products?: Array<string>;
    /**
     * A list of the Plaid products supported by the institution
     * @type {Array<string>}
     * @memberof Institution
     */
    country_codes?: Array<string>;
    /**
     * The URL for the institution\'s website
     * @type {string}
     * @memberof Institution
     */
    url?: string | null;
    /**
     * Hexadecimal representation of the primary color used by the institution
     * @type {string}
     * @memberof Institution
     */
    primary_color?: string | null;
    /**
     * Base64 encoded representation of the institution\'s logo
     * @type {string}
     * @memberof Institution
     */
    logo?: string | null;
    /**
     * A partial list of routing numbers associated with the institution. This list is provided for the purpose of looking up institutions by routing number. It is not comprehensive and should never be used as a complete list of routing numbers for an institution.
     * @type {Array<string>}
     * @memberof Institution
     */
    routing_numbers?: Array<string> | null;
    /**
     * Indicates that the institution has an OAuth login flow. This is primarily relevant to institutions with European country codes.
     * @type {boolean}
     * @memberof Institution
     */
    oauth?: boolean;
    /**
     *
     * @type {InstitutionStatus}
     * @memberof Institution
     */
    status?: InstitutionStatus;
}
/**
 *
 * @export
 * @interface InstitutionSearchRequest
 */
export interface InstitutionSearchRequest {
    /**
     * Your Plaid `client_id`.
     * @type {string}
     * @memberof InstitutionSearchRequest
     */
    client_id: string;
    /**
     * Your Plaid API secret.
     * @type {string}
     * @memberof InstitutionSearchRequest
     */
    secret: string;
    /**
     * The search query. Institutions with names matching the query are returned
     * @type {string}
     * @memberof InstitutionSearchRequest
     */
    query: string;
    /**
     * Filter the Institutions based on whether they support all products listed in products. Provide `null` to get institutions regardless of supported products
     * @type {Array<string>}
     * @memberof InstitutionSearchRequest
     */
    products: Array<string>;
    /**
     * Specify an array of Plaid-supported country codes this institution supports, using the ISO-3166-1 alpha-2 country code standard.
     * @type {Array<CountryCode>}
     * @memberof InstitutionSearchRequest
     */
    country_codes: Array<CountryCode>;
    /**
     *
     * @type {InstitutionSearchRequestOptions}
     * @memberof InstitutionSearchRequest
     */
    options?: InstitutionSearchRequestOptions;
}
/**
 *
 * @export
 * @interface InstitutionSearchRequestOptions
 */
export interface InstitutionSearchRequestOptions {
    /**
     * Limit results to institutions with or without OAuth login flows. This is primarily relevant to institutions with European country codes
     * @type {boolean}
     * @memberof InstitutionSearchRequestOptions
     */
    oauth?: boolean;
    /**
     * When true, return the institution\'s homepage URL, logo and primary brand color. Learn more
     * @type {boolean}
     * @memberof InstitutionSearchRequestOptions
     */
    include_optional_metadata?: boolean;
}
/**
 *
 * @export
 * @interface InstitutionSearchResponse
 */
export interface InstitutionSearchResponse {
    /**
     * An array of institutions matching the search criteria
     * @type {Array<Institution>}
     * @memberof InstitutionSearchResponse
     */
    institutions?: Array<Institution>;
    /**
     * A unique identifier for the request, which can be used for troubleshooting. This identifier, like all Plaid identifiers, is case sensitive.
     * @type {string}
     * @memberof InstitutionSearchResponse
     */
    request_id?: string;
}
/**
 * The status of an institution is determined by the health of its Item logins, Transactions updates, Auth requests, Balance requests, and Identity requests. A login attempt is conducted during the initial Item add in Link. If there is not enough traffic to accurately calculate an institution\'s status, Plaid will return null rather than potentially inaccurate data.  Institution status is accessible in the Dashboard and via the API using the `/institutions/get_by_id` endpoint with the `include_status` option set to true. Note that institution status is not available in the Sandbox environment.
 * @export
 * @interface InstitutionStatus
 */
export interface InstitutionStatus {
    /**
     *
     * @type {ProductStatus}
     * @memberof InstitutionStatus
     */
    item_logins?: ProductStatus;
    /**
     *
     * @type {ProductStatus}
     * @memberof InstitutionStatus
     */
    transactions_updates?: ProductStatus;
    /**
     *
     * @type {ProductStatus}
     * @memberof InstitutionStatus
     */
    auth?: ProductStatus;
    /**
     *
     * @type {ProductStatus}
     * @memberof InstitutionStatus
     */
    balance?: ProductStatus;
    /**
     *
     * @type {ProductStatus}
     * @memberof InstitutionStatus
     */
    identity?: ProductStatus;
}
/**
 *
 * @export
 * @interface InstitutionsGetByIdRequest
 */
export interface InstitutionsGetByIdRequest {
    /**
     * Your Plaid `client_id`.
     * @type {string}
     * @memberof InstitutionsGetByIdRequest
     */
    client_id: string;
    /**
     * Your Plaid API secret.
     * @type {string}
     * @memberof InstitutionsGetByIdRequest
     */
    secret: string;
    /**
     * The ID of the institution to get details about
     * @type {string}
     * @memberof InstitutionsGetByIdRequest
     */
    institution_id: string;
    /**
     * Specify an array of Plaid-supported country codes this institution supports, using the ISO-3166-1 alpha-2 country code standard.
     * @type {Array<CountryCode>}
     * @memberof InstitutionsGetByIdRequest
     */
    country_codes: Array<CountryCode>;
    /**
     *
     * @type {InstitutionsGetByIdRequestOptions}
     * @memberof InstitutionsGetByIdRequest
     */
    options?: InstitutionsGetByIdRequestOptions;
}
/**
 * Specifies optional parameters for the request. If provided, must not be `null`.
 * @export
 * @interface InstitutionsGetByIdRequestOptions
 */
export interface InstitutionsGetByIdRequestOptions {
    /**
     * When `true`, return an institution\'s logo, brand color, and URL. When available, the bank\'s logo is returned as a base64 encoded 152x152 PNG, the brand color is in hexadecimal format. The default value is `false`.  Note that Plaid does not own any of the logos shared by the API and that by accessing or using these logos, you agree that you are doing so at your own risk and will, if necessary, obtain all required permissions from the appropriate rights holders and adhere to any applicable usage guidelines. Plaid disclaims all express or implied warranties with respect to the logos.
     * @type {boolean}
     * @memberof InstitutionsGetByIdRequestOptions
     */
    include_optional_metadata?: boolean;
    /**
     * If `true`, the response will include status information about the institution. Default value is `false`.
     * @type {boolean}
     * @memberof InstitutionsGetByIdRequestOptions
     */
    include_status?: boolean;
}
/**
 *
 * @export
 * @interface InstitutionsGetByIdResponse
 */
export interface InstitutionsGetByIdResponse {
    /**
     *
     * @type {Institution}
     * @memberof InstitutionsGetByIdResponse
     */
    institution?: Institution;
    /**
     * A unique identifier for the request, which can be used for troubleshooting. This identifier, like all Plaid identifiers, is case sensitive.
     * @type {string}
     * @memberof InstitutionsGetByIdResponse
     */
    request_id?: string;
}
/**
 *
 * @export
 * @interface InstitutionsGetRequest
 */
export interface InstitutionsGetRequest {
    /**
     * Your Plaid API `client_id`.
     * @type {string}
     * @memberof InstitutionsGetRequest
     */
    client_id: string;
    /**
     * Your Plaid API `secret`.
     * @type {string}
     * @memberof InstitutionsGetRequest
     */
    secret: string;
    /**
     * The total number of Institutions to return. The maximum value of `count` is 500.
     * @type {number}
     * @memberof InstitutionsGetRequest
     */
    count: number;
    /**
     * The number of Institutions to skip.
     * @type {number}
     * @memberof InstitutionsGetRequest
     */
    offset: number;
    /**
     * Specify an array of Plaid-supported country codes this institution supports, using the ISO-3166-1 alpha-2 country code standard.
     * @type {Array<CountryCode>}
     * @memberof InstitutionsGetRequest
     */
    country_codes: Array<CountryCode>;
    /**
     *
     * @type {InstitutionsGetRequestOptions}
     * @memberof InstitutionsGetRequest
     */
    options?: InstitutionsGetRequestOptions;
}
/**
 *
 * @export
 * @interface InstitutionsGetRequestOptions
 */
export interface InstitutionsGetRequestOptions {
    /**
     * Filter the Institutions based on which products they support.
     * @type {Array<string>}
     * @memberof InstitutionsGetRequestOptions
     */
    products?: Array<string>;
    /**
     * Specify an array of routing numbers to filter institutions.
     * @type {Array<string>}
     * @memberof InstitutionsGetRequestOptions
     */
    routing_numbers?: Array<string>;
    /**
     * Limit results to institutions with or without OAuth login flows. This is primarily relevant to institutions with European country codes.
     * @type {boolean}
     * @memberof InstitutionsGetRequestOptions
     */
    oauth?: boolean;
    /**
     * When `true`, return the institution\'s homepage URL, logo and primary brand color.   Note that Plaid does not own any of the logos shared by the API, and that by accessing or using these logos, you agree that you are doing so at your own risk and will, if necessary, obtain all required permissions from the appropriate rights holders and adhere to any applicable usage guidelines. Plaid disclaims all express or implied warranties with respect to the logos.
     * @type {boolean}
     * @memberof InstitutionsGetRequestOptions
     */
    include_optional_metadata?: boolean;
}
/**
 *
 * @export
 * @interface InstitutionsGetResponse
 */
export interface InstitutionsGetResponse {
    /**
     * A list of Plaid Institution
     * @type {Array<Institution>}
     * @memberof InstitutionsGetResponse
     */
    institutions?: Array<Institution>;
    /**
     * The number of institutions returned
     * @type {number}
     * @memberof InstitutionsGetResponse
     */
    total?: number;
    /**
     * A unique identifier for the request, which can be used for troubleshooting. This identifier, like all Plaid identifiers, is case sensitive.
     * @type {string}
     * @memberof InstitutionsGetResponse
     */
    request_id?: string;
}
/**
 * A transaction within an investment account.
 * @export
 * @interface InvestmentTransaction
 */
export interface InvestmentTransaction {
    /**
     * The ID of the Investment transaction, unique across all Plaid transactions. Like all Plaid identifiers, the `investment_transaction_id` is case sensitive.
     * @type {string}
     * @memberof InvestmentTransaction
     */
    investment_transaction_id?: string;
    /**
     * The `account_id` of the account against which this transaction posted.
     * @type {string}
     * @memberof InvestmentTransaction
     */
    account_id?: string;
    /**
     * The `security_id` to which this transaction is related.
     * @type {string}
     * @memberof InvestmentTransaction
     */
    security_id?: string | null;
    /**
     * The ISO-8601 posting date for the transaction, or transacted date for pending transactions.
     * @type {string}
     * @memberof InvestmentTransaction
     */
    date?: string;
    /**
     * The institutionâ€™s description of the transaction.
     * @type {string}
     * @memberof InvestmentTransaction
     */
    name?: string;
    /**
     * The number of units of the security involved in this transactions
     * @type {number}
     * @memberof InvestmentTransaction
     */
    quantity?: number;
    /**
     * The complete value of the transaction. Positive values when cash is debited, e.g. purchases of stock; negative values when cash is credited, e.g. sales of stock. Treatment remains the same for cash-only movements unassociated with securities.
     * @type {number}
     * @memberof InvestmentTransaction
     */
    amount?: number;
    /**
     * The price of the security at which this transaction occurred.
     * @type {number}
     * @memberof InvestmentTransaction
     */
    price?: number;
    /**
     * The combined value of all fees applied to this transaction
     * @type {number}
     * @memberof InvestmentTransaction
     */
    fees?: number | null;
    /**
     * Value is one of the following:   `buy`: Buying an investment `sell`: Selling an investment  `cancel`: A cancellation of a pending transaction  `cash`: Activity that modifies a cash position  `fee`: A fee on the account  `transfer`: Activity which modifies a position, but not through buy/sell activity e.g. options exercise, portfolio transfer
     * @type {string}
     * @memberof InvestmentTransaction
     */
    type?: string;
    /**
     *
     * @type {StandaloneInvestmentTransactionSubtype}
     * @memberof InvestmentTransaction
     */
    subtype?: StandaloneInvestmentTransactionSubtype;
    /**
     * The ISO-4217 currency code of the transaction. Always `null` if `unofficial_currency_code` is non-`null`.
     * @type {string}
     * @memberof InvestmentTransaction
     */
    iso_currency_code?: string | null;
    /**
     * The unofficial currency code associated with the holding. Always `null` if `iso_currency_code` is non-`null`. Unofficial currency codes are used for currencies that do not have official ISO currency codes, such as cryptocurrencies and the currencies of certain countries.  See the [currency code schema](/docs-beta/api/accounts#currency-code-schema) for a full listing of supported `iso_currency_code`s.
     * @type {string}
     * @memberof InvestmentTransaction
     */
    unofficial_currency_code?: string | null;
}
/**
 * Fired when new or canceled transactions have been detected on an investment account.
 * @export
 * @interface InvestmentsDefaultUpdateWebhook
 */
export interface InvestmentsDefaultUpdateWebhook {
    /**
     * `INVESTMENTS_TRANSACTIONS`
     * @type {string}
     * @memberof InvestmentsDefaultUpdateWebhook
     */
    webhook_type?: string;
    /**
     * `DEFAULT_UPDATE`
     * @type {string}
     * @memberof InvestmentsDefaultUpdateWebhook
     */
    webhook_code?: string;
    /**
     * The `item_id` of the Item associated with this webhook, warning, or error
     * @type {string}
     * @memberof InvestmentsDefaultUpdateWebhook
     */
    item_id?: string;
    /**
     *
     * @type {Error}
     * @memberof InvestmentsDefaultUpdateWebhook
     */
    error?: Error | null;
    /**
     * The number of new transactions reported since the last time this webhook was fired.
     * @type {number}
     * @memberof InvestmentsDefaultUpdateWebhook
     */
    new_investments_transactions?: number;
    /**
     * The number of canceled transactions reported since the last time this webhook was fired.
     * @type {number}
     * @memberof InvestmentsDefaultUpdateWebhook
     */
    canceled_investments_transactions?: number;
}
/**
 *
 * @export
 * @interface InvestmentsHoldingsGetRequest
 */
export interface InvestmentsHoldingsGetRequest {
    /**
     * Your Plaid API `client_id`.
     * @type {string}
     * @memberof InvestmentsHoldingsGetRequest
     */
    client_id: string;
    /**
     * Your Plaid API `secret`.
     * @type {string}
     * @memberof InvestmentsHoldingsGetRequest
     */
    secret: string;
    /**
     * The access token associated with the Item data is being requested for.
     * @type {string}
     * @memberof InvestmentsHoldingsGetRequest
     */
    access_token: string;
    /**
     *
     * @type {InvestmentsHoldingsGetRequestOptions}
     * @memberof InvestmentsHoldingsGetRequest
     */
    options?: InvestmentsHoldingsGetRequestOptions;
}
/**
 * If provided, must not be `null`.
 * @export
 * @interface InvestmentsHoldingsGetRequestOptions
 */
export interface InvestmentsHoldingsGetRequestOptions {
    /**
     * An array of `account_id`s to retrieve for the Item. An error will be returned if a provided `account_id` is not associated with the Item.
     * @type {Array<string>}
     * @memberof InvestmentsHoldingsGetRequestOptions
     */
    account_ids: Array<string>;
}
/**
 *
 * @export
 * @interface InvestmentsHoldingsGetResponse
 */
export interface InvestmentsHoldingsGetResponse {
    /**
     * The accounts associated with the Item
     * @type {Array<Account>}
     * @memberof InvestmentsHoldingsGetResponse
     */
    accounts?: Array<Account>;
    /**
     * The holdings belonging to investment accounts associated with the Item. Details of the securities in the holdings are provided in the `securities` field.
     * @type {Array<Holding>}
     * @memberof InvestmentsHoldingsGetResponse
     */
    holdings?: Array<Holding>;
    /**
     * Objects describing the securities held in the accounts associated with the Item.
     * @type {Array<Security>}
     * @memberof InvestmentsHoldingsGetResponse
     */
    securities?: Array<Security>;
    /**
     *
     * @type {Item}
     * @memberof InvestmentsHoldingsGetResponse
     */
    item?: Item;
    /**
     * A unique identifier for the request, which can be used for troubleshooting. This identifier, like all Plaid identifiers, is case sensitive.
     * @type {string}
     * @memberof InvestmentsHoldingsGetResponse
     */
    request_id?: string;
}
/**
 *
 * @export
 * @interface InvestmentsTransactionsGetRequest
 */
export interface InvestmentsTransactionsGetRequest {
    /**
     * Your Plaid API `client_id`.
     * @type {string}
     * @memberof InvestmentsTransactionsGetRequest
     */
    client_id: string;
    /**
     * Your Plaid API `secret`.
     * @type {string}
     * @memberof InvestmentsTransactionsGetRequest
     */
    secret: string;
    /**
     * The access token associated with the Item data is being requested for.
     * @type {string}
     * @memberof InvestmentsTransactionsGetRequest
     */
    access_token: string;
    /**
     * The earliest date for which to fetch transaction history. Dates should be formatted as YYYY-MM-DD.
     * @type {string}
     * @memberof InvestmentsTransactionsGetRequest
     */
    start_date: string;
    /**
     * The most recent date for which to fetch transaction history. Dates should be formatted as YYYY-MM-DD.
     * @type {string}
     * @memberof InvestmentsTransactionsGetRequest
     */
    end_date: string;
    /**
     *
     * @type {InvestmentsTransactionsGetRequestOptions}
     * @memberof InvestmentsTransactionsGetRequest
     */
    options?: InvestmentsTransactionsGetRequestOptions;
}
/**
 * If provided, must be non-`null`.
 * @export
 * @interface InvestmentsTransactionsGetRequestOptions
 */
export interface InvestmentsTransactionsGetRequestOptions {
    /**
     * An array of `account_ids` to retrieve for the Item.
     * @type {Array<string>}
     * @memberof InvestmentsTransactionsGetRequestOptions
     */
    account_ids?: Array<string>;
    /**
     * The number of transactions to fetch. The default value is 100 and the maximum value is 500.
     * @type {number}
     * @memberof InvestmentsTransactionsGetRequestOptions
     */
    count?: number;
    /**
     * The number of transactions to skip when fetching transaction history
     * @type {number}
     * @memberof InvestmentsTransactionsGetRequestOptions
     */
    offset?: number;
}
/**
 *
 * @export
 * @interface InvestmentsTransactionsGetResponse
 */
export interface InvestmentsTransactionsGetResponse {
    /**
     *
     * @type {Item}
     * @memberof InvestmentsTransactionsGetResponse
     */
    item?: Item;
    /**
     * The accounts for which transaction history is being fetched.
     * @type {Array<Account>}
     * @memberof InvestmentsTransactionsGetResponse
     */
    accounts?: Array<Account>;
    /**
     * All securities for which there is a corresponding transaction being fetched.
     * @type {Array<Security>}
     * @memberof InvestmentsTransactionsGetResponse
     */
    securities?: Array<Security>;
    /**
     * The transactions being fetched
     * @type {Array<InvestmentTransaction>}
     * @memberof InvestmentsTransactionsGetResponse
     */
    investment_transactions?: Array<InvestmentTransaction>;
    /**
     * The total number of transactions available within the date range specified. If `total_investment_transactions` is larger than the size of the `transactions` array, more transactions are available and can be fetched via manipulating the `offset` parameter.\'
     * @type {number}
     * @memberof InvestmentsTransactionsGetResponse
     */
    total_investment_transactions?: number;
    /**
     * A unique identifier for the request, which can be used for troubleshooting. This identifier, like all Plaid identifiers, is case sensitive.
     * @type {string}
     * @memberof InvestmentsTransactionsGetResponse
     */
    request_id?: string;
}
/**
 * Metadata about the Item.
 * @export
 * @interface Item
 */
export interface Item {
    /**
     * The Plaid Item ID. The `item_id` is always unique; linking the same account at the same institution twice will result in two Items with different `item_id` values. Like all Plaid identifiers, the `item_id` is case-sensitive.
     * @type {string}
     * @memberof Item
     */
    item_id?: string;
    /**
     * The Plaid Institution ID associated with the Item. Field is `null` for Items created via Same Day Micro-deposits.
     * @type {string}
     * @memberof Item
     */
    institution_id?: string | null;
    /**
     * The URL registered to receive webhooks for the Item.
     * @type {string}
     * @memberof Item
     */
    webhook?: string | null;
    /**
     *
     * @type {Error}
     * @memberof Item
     */
    error?: Error | null;
    /**
     * A list of products available for the Item that have not yet been accessed.
     * @type {Array<string>}
     * @memberof Item
     */
    available_products?: Array<string>;
    /**
     * A list of products that have been billed for the Item. Note - `billed_products` is populated in all environments but only requests in Production are billed.
     * @type {Array<string>}
     * @memberof Item
     */
    billed_products?: Array<string>;
    /**
     * The RFC 3339 timestamp after which the consent provided by the end user will expire. Upon consent expiration, the item will enter the `ITEM_LOGIN_REQUIRED` error state. To circumvent the `ITEM_LOGIN_REQUIRED` error and maintain continuous consent, the end user can reauthenticate via Linkâ€™s update mode in advance of the consent expiration time.  Note - This is only relevant for European institutions subject to PSD2 regulations mandating a 90-day consent window. For all other institutions, this field will be null.
     * @type {string}
     * @memberof Item
     */
    consent_expiration_time?: string | null;
}
/**
 *
 * @export
 * @interface ItemAccessTokenInvalidateRequest
 */
export interface ItemAccessTokenInvalidateRequest {
    /**
     * Your Plaid API `client_id`.
     * @type {string}
     * @memberof ItemAccessTokenInvalidateRequest
     */
    client_id: string;
    /**
     * Your Plaid API `secret`.
     * @type {string}
     * @memberof ItemAccessTokenInvalidateRequest
     */
    secret: string;
    /**
     * The access token associated with the Item data is being requested for.
     * @type {string}
     * @memberof ItemAccessTokenInvalidateRequest
     */
    access_token: string;
}
/**
 *
 * @export
 * @interface ItemAccessTokenInvalidateResponse
 */
export interface ItemAccessTokenInvalidateResponse {
    /**
     * The access token associated with the Item data is being requested for.
     * @type {string}
     * @memberof ItemAccessTokenInvalidateResponse
     */
    new_access_token?: string;
    /**
     * A unique identifier for the request, which can be used for troubleshooting. This identifier, like all Plaid identifiers, is case sensitive.
     * @type {string}
     * @memberof ItemAccessTokenInvalidateResponse
     */
    request_id?: string;
}
/**
 * Fired when an error is encountered with an Item. The error can be resolved by having the user go through Linkâ€™s update mode.
 * @export
 * @interface ItemErrorWebhook
 */
export interface ItemErrorWebhook {
    /**
     * `ITEM`
     * @type {string}
     * @memberof ItemErrorWebhook
     */
    webhook_type?: string;
    /**
     * `ERROR`
     * @type {string}
     * @memberof ItemErrorWebhook
     */
    webhook_code?: string;
    /**
     * The `item_id` of the Item associated with this webhook, warning, or error
     * @type {string}
     * @memberof ItemErrorWebhook
     */
    item_id?: string;
    /**
     *
     * @type {Error}
     * @memberof ItemErrorWebhook
     */
    error?: Error | null;
}
/**
 *
 * @export
 * @interface ItemGetRequest
 */
export interface ItemGetRequest {
    /**
     * Your Plaid API `client_id`.
     * @type {string}
     * @memberof ItemGetRequest
     */
    client_id: string;
    /**
     * Your Plaid API `secret`.
     * @type {string}
     * @memberof ItemGetRequest
     */
    secret: string;
    /**
     * The access token associated with the Item data is being requested for.
     * @type {string}
     * @memberof ItemGetRequest
     */
    access_token: string;
}
/**
 *
 * @export
 * @interface ItemGetResponse
 */
export interface ItemGetResponse {
    /**
     *
     * @type {Item}
     * @memberof ItemGetResponse
     */
    item?: Item;
    /**
     *
     * @type {ItemStatus}
     * @memberof ItemGetResponse
     */
    status?: ItemStatus;
    /**
     * A unique identifier for the request, which can be used for troubleshooting. This identifier, like all Plaid identifiers, is case sensitive.
     * @type {string}
     * @memberof ItemGetResponse
     */
    request_id?: string;
}
/**
 *
 * @export
 * @interface ItemImportRequest
 */
export interface ItemImportRequest {
    /**
     * Your Plaid API `client_id`.
     * @type {string}
     * @memberof ItemImportRequest
     */
    client_id: string;
    /**
     * Your Plaid API `secret`.
     * @type {string}
     * @memberof ItemImportRequest
     */
    secret: string;
    /**
     * Array of product strings. For Deposit Switch, this should be `[\"auth\", \"identity\"]`
     * @type {Array<string>}
     * @memberof ItemImportRequest
     */
    products: Array<string>;
    /**
     *
     * @type {ItemImportRequestUserAuth}
     * @memberof ItemImportRequest
     */
    user_auth: ItemImportRequestUserAuth;
    /**
     *
     * @type {ItemImportRequestOptions}
     * @memberof ItemImportRequest
     */
    options?: ItemImportRequestOptions;
}
/**
 *
 * @export
 * @interface ItemImportRequestOptions
 */
export interface ItemImportRequestOptions {
    /**
     * Specifies a webhook URL to associate with an Item. Plaid fires a webhook if credentials fail.
     * @type {string}
     * @memberof ItemImportRequestOptions
     */
    webhook?: string;
}
/**
 * Object of user ID and auth token pair, permitting Plaid to aggregate a userâ€™s accounts
 * @export
 * @interface ItemImportRequestUserAuth
 */
export interface ItemImportRequestUserAuth {
    /**
     * Opaque user identifier
     * @type {string}
     * @memberof ItemImportRequestUserAuth
     */
    user_id: string;
    /**
     * Authorization token Plaid will use to aggregate this userâ€™s accounts
     * @type {string}
     * @memberof ItemImportRequestUserAuth
     */
    auth_token: string;
}
/**
 *
 * @export
 * @interface ItemImportResponse
 */
export interface ItemImportResponse {
    /**
     * The access token associated with the Item data is being requested for.
     * @type {string}
     * @memberof ItemImportResponse
     */
    access_token?: string;
    /**
     * A unique identifier for the request, which can be used for troubleshooting. This identifier, like all Plaid identifiers, is case sensitive.
     * @type {string}
     * @memberof ItemImportResponse
     */
    request_id?: string;
}
/**
 * Fired once Plaid calculates income from an Item.
 * @export
 * @interface ItemProductReadyWebhook
 */
export interface ItemProductReadyWebhook {
    /**
     * `INCOME`
     * @type {string}
     * @memberof ItemProductReadyWebhook
     */
    webhook_type?: string;
    /**
     * `PRODUCT_READY`
     * @type {string}
     * @memberof ItemProductReadyWebhook
     */
    webhook_code?: string;
    /**
     * The `item_id` of the Item associated with this webhook, warning, or error
     * @type {string}
     * @memberof ItemProductReadyWebhook
     */
    item_id?: string;
    /**
     *
     * @type {Error}
     * @memberof ItemProductReadyWebhook
     */
    error?: Error | null;
}
/**
 *
 * @export
 * @interface ItemPublicTokenCreateRequest
 */
export interface ItemPublicTokenCreateRequest {
    /**
     * Your Plaid API `client_id`.
     * @type {string}
     * @memberof ItemPublicTokenCreateRequest
     */
    client_id?: string;
    /**
     * Your Plaid API `secret`.
     * @type {string}
     * @memberof ItemPublicTokenCreateRequest
     */
    secret?: string;
    /**
     * The access token associated with the Item data is being requested for.
     * @type {string}
     * @memberof ItemPublicTokenCreateRequest
     */
    access_token?: string;
}
/**
 *
 * @export
 * @interface ItemPublicTokenCreateResponse
 */
export interface ItemPublicTokenCreateResponse {
    /**
     * A `public_token` for the particular Item corresponding to the specified `access_token`
     * @type {string}
     * @memberof ItemPublicTokenCreateResponse
     */
    public_token?: string;
    /**
     * A unique identifier for the request, which can be used for troubleshooting. This identifier, like all Plaid identifiers, is case sensitive.
     * @type {string}
     * @memberof ItemPublicTokenCreateResponse
     */
    request_id?: string;
}
/**
 *
 * @export
 * @interface ItemPublicTokenExchangeRequest
 */
export interface ItemPublicTokenExchangeRequest {
    /**
     * Your Plaid API `client_id`.
     * @type {string}
     * @memberof ItemPublicTokenExchangeRequest
     */
    client_id: string;
    /**
     * Your Plaid API `secret`.
     * @type {string}
     * @memberof ItemPublicTokenExchangeRequest
     */
    secret: string;
    /**
     * Your `public_token`, obtained from the Link `onSuccess` callback or `/sandbox/item/public_token/create`.
     * @type {string}
     * @memberof ItemPublicTokenExchangeRequest
     */
    public_token: string;
}
/**
 *
 * @export
 * @interface ItemPublicTokenExchangeResponse
 */
export interface ItemPublicTokenExchangeResponse {
    /**
     * The access token associated with the Item data is being requested for.
     * @type {string}
     * @memberof ItemPublicTokenExchangeResponse
     */
    access_token?: string;
    /**
     * The `item_id` value of the Item associated with the returned `access_token`
     * @type {string}
     * @memberof ItemPublicTokenExchangeResponse
     */
    item_id?: string;
    /**
     * A unique identifier for the request, which can be used for troubleshooting. This identifier, like all Plaid identifiers, is case sensitive.
     * @type {string}
     * @memberof ItemPublicTokenExchangeResponse
     */
    request_id?: string;
}
/**
 *
 * @export
 * @interface ItemRemoveRequest
 */
export interface ItemRemoveRequest {
    /**
     * Your Plaid API `client_id`.
     * @type {string}
     * @memberof ItemRemoveRequest
     */
    client_id: string;
    /**
     * Your Plaid API `secret`.
     * @type {string}
     * @memberof ItemRemoveRequest
     */
    secret: string;
    /**
     * The access token associated with the Item data is being requested for.
     * @type {string}
     * @memberof ItemRemoveRequest
     */
    access_token: string;
}
/**
 *
 * @export
 * @interface ItemRemoveResponse
 */
export interface ItemRemoveResponse {
    /**
     * A unique identifier for the request, which can be used for troubleshooting. This identifier, like all Plaid identifiers, is case sensitive.
     * @type {string}
     * @memberof ItemRemoveResponse
     */
    request_id?: string;
}
/**
 * An object with information about the status of the Item.
 * @export
 * @interface ItemStatus
 */
export interface ItemStatus {
    /**
     *
     * @type {ItemStatusInvestments}
     * @memberof ItemStatus
     */
    investments?: ItemStatusInvestments | null;
    /**
     *
     * @type {ItemStatusTransactions}
     * @memberof ItemStatus
     */
    transactions?: ItemStatusTransactions | null;
    /**
     *
     * @type {ItemStatusLastWebhook}
     * @memberof ItemStatus
     */
    last_webhook?: ItemStatusLastWebhook | null;
}
/**
 * Information about the last successful and failed investments update for the Item.
 * @export
 * @interface ItemStatusInvestments
 */
export interface ItemStatusInvestments {
    /**
     * ISO 8601 timestamp of the last successful investments update for the Item. The status will update each time Plaid successfully connects with the institution, regardless of whether any new data is available in the update.
     * @type {string}
     * @memberof ItemStatusInvestments
     */
    last_successful_update?: string | null;
    /**
     * ISO 8601 timestamp of the last failed investments update for the Item. The status will update each time Plaid fails an attempt to connect with the institution, regardless of whether any new data is available in the update.
     * @type {string}
     * @memberof ItemStatusInvestments
     */
    last_failed_update?: string | null;
}
/**
 * Information about the last webhook fired for the Item.
 * @export
 * @interface ItemStatusLastWebhook
 */
export interface ItemStatusLastWebhook {
    /**
     * ISO 8601 timestamp of when the webhook was fired.
     * @type {string}
     * @memberof ItemStatusLastWebhook
     */
    sent_at?: string | null;
    /**
     * The last webhook code sent.
     * @type {string}
     * @memberof ItemStatusLastWebhook
     */
    code_sent?: string | null;
}
/**
 * Information about the last successful and failed transactions update for the Item.
 * @export
 * @interface ItemStatusTransactions
 */
export interface ItemStatusTransactions {
    /**
     * ISO 8601 timestamp of the last successful transactions update for the Item. The status will update each time Plaid successfully connects with the institution, regardless of whether any new data is available in the update.
     * @type {string}
     * @memberof ItemStatusTransactions
     */
    last_successful_update?: string | null;
    /**
     * ISO 8601 timestamp of the last failed transactions update for the Item. The status will update each time Plaid fails an attempt to connect with the institution, regardless of whether any new data is available in the update.
     * @type {string}
     * @memberof ItemStatusTransactions
     */
    last_failed_update?: string | null;
}
/**
 *
 * @export
 * @interface ItemWebhookUpdateRequest
 */
export interface ItemWebhookUpdateRequest {
    /**
     * Your Plaid API `client_id`.
     * @type {string}
     * @memberof ItemWebhookUpdateRequest
     */
    client_id: string;
    /**
     * Your Plaid API `secret`.
     * @type {string}
     * @memberof ItemWebhookUpdateRequest
     */
    secret: string;
    /**
     * The access token associated with the Item data is being requested for.
     * @type {string}
     * @memberof ItemWebhookUpdateRequest
     */
    access_token: string;
    /**
     * The new webhook URL to associate with the Item.
     * @type {string}
     * @memberof ItemWebhookUpdateRequest
     */
    webhook: string;
}
/**
 *
 * @export
 * @interface ItemWebhookUpdateResponse
 */
export interface ItemWebhookUpdateResponse {
    /**
     *
     * @type {Item}
     * @memberof ItemWebhookUpdateResponse
     */
    item?: Item;
}
/**
 * A JWT Header, used for webhook validation
 * @export
 * @interface JWTHeader
 */
export interface JWTHeader {
    /**
     *
     * @type {string}
     * @memberof JWTHeader
     */
    id?: string;
}
/**
 *
 * @export
 * @interface LiabilitiesGetRequest
 */
export interface LiabilitiesGetRequest {
    /**
     * Your Plaid API `client_id`.
     * @type {string}
     * @memberof LiabilitiesGetRequest
     */
    client_id: string;
    /**
     * Your Plaid API `secret`.
     * @type {string}
     * @memberof LiabilitiesGetRequest
     */
    secret: string;
    /**
     * The access token associated with the Item data is being requested for.
     * @type {string}
     * @memberof LiabilitiesGetRequest
     */
    access_token: string;
    /**
     *
     * @type {LiabilitiesGetRequestOptions}
     * @memberof LiabilitiesGetRequest
     */
    options?: LiabilitiesGetRequestOptions;
}
/**
 * If provided, `options` cannot be null.
 * @export
 * @interface LiabilitiesGetRequestOptions
 */
export interface LiabilitiesGetRequestOptions {
    /**
     * A list of accounts to retrieve for the Item.  An error will be returned if a provided `account_id` is not associated with the Item
     * @type {Array<string>}
     * @memberof LiabilitiesGetRequestOptions
     */
    account_ids: Array<string>;
}
/**
 *
 * @export
 * @interface LiabilitiesGetResponse
 */
export interface LiabilitiesGetResponse {
    /**
     * An array of accounts associated with the Item
     * @type {Array<Account>}
     * @memberof LiabilitiesGetResponse
     */
    accounts?: Array<Account>;
    /**
     *
     * @type {Item}
     * @memberof LiabilitiesGetResponse
     */
    item?: Item;
    /**
     *
     * @type {LiabilitiesObject}
     * @memberof LiabilitiesGetResponse
     */
    liabilities?: LiabilitiesObject;
    /**
     * A unique identifier for the request, which can be used for troubleshooting. This identifier, like all Plaid identifiers, is case sensitive.
     * @type {string}
     * @memberof LiabilitiesGetResponse
     */
    request_id?: string;
}
/**
 * An object containing liability accounts
 * @export
 * @interface LiabilitiesObject
 */
export interface LiabilitiesObject {
    /**
     * The credit accounts returned. If no credit accounts are returned, `credit` will not be present in the schema.
     * @type {Array<CreditCardLiability>}
     * @memberof LiabilitiesObject
     */
    credit?: Array<CreditCardLiability> | null;
    /**
     * The student loan accounts returned. If no student loan accounts are returned, `student` will not be present in the schema.
     * @type {Array<StudentLoan>}
     * @memberof LiabilitiesObject
     */
    student?: Array<StudentLoan> | null;
}
/**
 * Used to configure Sandbox test data for the Liabilities product
 * @export
 * @interface LiabilityOverride
 */
export interface LiabilityOverride {
    /**
     * The type of the liability object, either `credit` or `student`.
     * @type {string}
     * @memberof LiabilityOverride
     */
    type: string;
    /**
     * The purchase APR percentage value. For simplicity, this is the only interest rate used to calculate interest charges. Can only be set if `type` is `credit`.
     * @type {number}
     * @memberof LiabilityOverride
     */
    purchase_apr?: number;
    /**
     * The cash APR percentage value. Can only be set if `type` is `credit`.
     * @type {number}
     * @memberof LiabilityOverride
     */
    cash_apr?: number;
    /**
     * The balance transfer APR percentage value. Can only be set if `type` is `credit`. Can only be set if `type` is `credit`.
     * @type {number}
     * @memberof LiabilityOverride
     */
    balance_transfer_apr?: number;
    /**
     * The special APR percentage value. Can only be set if `type` is `credit`.
     * @type {number}
     * @memberof LiabilityOverride
     */
    special_apr?: number;
    /**
     * Override the `last_payment_amount` field. Can only be set if `type` is `credit`.
     * @type {number}
     * @memberof LiabilityOverride
     */
    last_payment_amount?: number;
    /**
     * Override the `last_statement_balance` field. Can only be set if `type` is `credit`.
     * @type {number}
     * @memberof LiabilityOverride
     */
    last_statement_balance?: number;
    /**
     * Override the `minimum_payment_amount` field. Can only be set if `type` is `credit`.
     * @type {number}
     * @memberof LiabilityOverride
     */
    minimum_payment_amount?: number;
    /**
     * Override the `is_overdue` field
     * @type {boolean}
     * @memberof LiabilityOverride
     */
    is_overdue?: boolean;
    /**
     * The date on which the loan was initially lent, in ISO 8601 (YYYY-MM-DD) format. Can only be set if `type` is `student_loan`.
     * @type {string}
     * @memberof LiabilityOverride
     */
    origination_date?: string;
    /**
     * The original loan principal. Can only be set if `type` is `student_loan`.
     * @type {number}
     * @memberof LiabilityOverride
     */
    principal?: number;
    /**
     * The interest rate on the loan as a percentage. Can only be set if `type` is `student_loan`.
     * @type {number}
     * @memberof LiabilityOverride
     */
    nominal_apr?: number;
    /**
     * If set, interest capitalization begins at the given number of months after loan origination. By default interest is never capitalized. Can only be set if `type` is `student_loan`.
     * @type {number}
     * @memberof LiabilityOverride
     */
    interest_capitalization_grace_period_months?: number;
    /**
     *
     * @type {StudentLoanRepaymentModel}
     * @memberof LiabilityOverride
     */
    repayment_model?: StudentLoanRepaymentModel;
    /**
     * Override the `expected_payoff_date` field. Can only be set if `type` is `student_loan`.
     * @type {string}
     * @memberof LiabilityOverride
     */
    expected_payoff_date?: string;
    /**
     * Override the `guarantor` field. Can only be set if `type` is `student_loan`.
     * @type {string}
     * @memberof LiabilityOverride
     */
    guarantor?: string;
    /**
     * Override the `is_federal` field. Can only be set if `type` is `student_loan`.
     * @type {boolean}
     * @memberof LiabilityOverride
     */
    is_federal?: boolean;
    /**
     * Override the `loan_name` field. Can only be set if `type` is `student_loan`.
     * @type {string}
     * @memberof LiabilityOverride
     */
    loan_name?: string;
    /**
     * Override the `loan_status` field. Can only be set if `type` is `student_loan`.
     * @type {string}
     * @memberof LiabilityOverride
     */
    loan_status?: string;
    /**
     * Override the `payment_reference_number` field. Can only be set if `type` is `student_loan`.
     * @type {string}
     * @memberof LiabilityOverride
     */
    payment_reference_number?: string;
    /**
     * Override the `pslf_status` field. Can only be set if `type` is `student_loan`.
     * @type {string}
     * @memberof LiabilityOverride
     */
    pslf_status?: string;
    /**
     * Override the `repayment_plan.description` field. Can only be set if `type` is `student_loan`.
     * @type {string}
     * @memberof LiabilityOverride
     */
    repayment_plan_description?: string;
    /**
     * Override the `repayment_plan.type` field. Can only be set if `type` is `student_loan`. Possible values are: `\"extended graduated\"`, `\"extended standard\"`, `\"graduated\"`, `\"income-contingent repayment\"`, `\"income-based repayment\"`, `\"interest only\"`, `\"other\"`, `\"pay as you earn\"`, `\"revised pay as you earn\"`, or `\"standard\"`.
     * @type {string}
     * @memberof LiabilityOverride
     */
    repayment_plan_type?: string;
    /**
     * Override the `sequence_number` field. Can only be set if `type` is `student_loan`.
     * @type {string}
     * @memberof LiabilityOverride
     */
    sequence_number?: string;
    /**
     *
     * @type {Address}
     * @memberof LiabilityOverride
     */
    servicer_address?: Address;
}
/**
 *
 * @export
 * @interface LinkTokenCreateRequest
 */
export interface LinkTokenCreateRequest {
    /**
     * Your Plaid API `client_id`.
     * @type {string}
     * @memberof LinkTokenCreateRequest
     */
    client_id: string;
    /**
     * Your Plaid API `secret`.
     * @type {string}
     * @memberof LinkTokenCreateRequest
     */
    secret: string;
    /**
     * The name of your application, as it should be displayed in Link.
     * @type {string}
     * @memberof LinkTokenCreateRequest
     */
    client_name: string;
    /**
     * The language that Link should be displayed in.  Supported languages are: - English (`\'en\'`) - French (`\'fr\'`) - Spanish (`\'es\'`) - Dutch (`\'nl\'`)  When using a Link customization, the language configured here must match the setting in the customization, or the customization will not be applied.
     * @type {string}
     * @memberof LinkTokenCreateRequest
     */
    language: string;
    /**
     * Specify an array of Plaid-supported country codes using the ISO-3166-1 alpha-2 country code standard. Note that if you initialize with a European country code, your users will see the European consent panel during the Link flow. Supported country codes are: `US`, `CA`, `ES`, `FR`, `GB`, `IE`, `NL`. Example value: `[\'US\', \'CA\']`. If Link is launched with multiple country codes, only products that you are enabled for in all countries will be used by Link.  If using a Link customization, make sure the country codes in the customization match those specified in `country_codes`. If both `country_codes` and a Link customization are used, the value in `country_codes` may override the value in the customization.
     * @type {Array<string>}
     * @memberof LinkTokenCreateRequest
     */
    country_codes: Array<string>;
    /**
     *
     * @type {LinkTokenCreateRequestUser}
     * @memberof LinkTokenCreateRequest
     */
    user: LinkTokenCreateRequestUser;
    /**
     * List of Plaid product(s) you wish to use. If launching Link in update mode, should be omitted; required otherwise. Valid products are:   `transactions`, `auth`, `identity`, `assets`, `investments`, `liabilities`, `payment_initiation`  Example: `[\'auth\', \'transactions\']`   `balance` is *not* a valid value, the Balance product does not require explicit initalization and will automatically be initialized when any other product is initialized. Only institutions that support *all* requested products will be shown in Link.   In Production, you will be billed for each product that you specify when initializing Link. Note that a product cannot be removed from an Item once the Item has been initialized with that product. To stop billing on an Item for subscription-based products, such as Liabilities, Investments, and Transactions, remove the Item via `/item/remove`.
     * @type {Array<string>}
     * @memberof LinkTokenCreateRequest
     */
    products?: Array<string>;
    /**
     * The destination URL to which any webhooks should be sent.
     * @type {string}
     * @memberof LinkTokenCreateRequest
     */
    webhook?: string;
    /**
     * The `access_token` associated with the Item to update, used when updating or modifying an existing `access_token`. Used when launching Link in update mode or (optionally) when initializing Link as part of the Payment Initiation (UK) flow.
     * @type {string}
     * @memberof LinkTokenCreateRequest
     */
    access_token?: string;
    /**
     * The name of the Link customization from the Plaid Dashboard to be applied to Link. If not specified, the `default` customization will be used. When using a Link customization, the language in the customization must match the language selected via the `language` parameter, and the countries in the customization should match the country codes selected via `country_codes`.
     * @type {string}
     * @memberof LinkTokenCreateRequest
     */
    link_customization_name?: string;
    /**
     * A URI indicating the destination where a user should be forwarded after completing the Link flow; used to support OAuth authentication flows when launching Link in the browser or via a webview. The `redirect_uri` should not contain any query parameters. If `android_package_name` is specified, this field should be left blank. For iOS integrations, `redirect_uri` should be left blank and the client-side `oauthRedirectUri` parameter should be used instead. Any redirect URI specified here must also be added under the \"Allowed redirect URIs\" configuration on the [developer dashboard](https://dashboard.plaid.com/team/api). In non-Sandbox (Production and Development) environments, the `redirect_uri` must begin with https.
     * @type {string}
     * @memberof LinkTokenCreateRequest
     */
    redirect_uri?: string;
    /**
     * The name of your app\'s Android package. Required if using the `link_token` to initialize Link on Android. Any package name specified here must also be added to the Allowed Android package names setting on the [developer dashboard](https://dashboard.plaid.com/team/api).
     * @type {string}
     * @memberof LinkTokenCreateRequest
     */
    android_package_name?: string;
    /**
     *
     * @type {LinkTokenCreateRequestAccountFilters}
     * @memberof LinkTokenCreateRequest
     */
    account_filters?: LinkTokenCreateRequestAccountFilters;
    /**
     * Used for supporting legacy custom initializers.
     * @type {string}
     * @memberof LinkTokenCreateRequest
     * @deprecated
     */
    institution_id?: string;
    /**
     *
     * @type {LinkTokenCreateRequestPaymentInitiation}
     * @memberof LinkTokenCreateRequest
     */
    payment_initiation?: LinkTokenCreateRequestPaymentInitiation;
}
/**
 * By default, Link will only display account types that are compatible with all products supplied in the `products` parameter of `/link/token/create`. You can further limit the accounts shown in Link by using `account_filters` to specify the account subtypes to be shown in Link. Only the specified subtypes will be shown. This filtering applies to both the Account Select view (if enabled) and the Institution Select view. Institutions that do not support the selected subtypes will be omitted from Link. To indicate that all subtypes should be shown, use the value `\"all\"`. If the `account_filters` filter is used, any account type for which a filter is not specified will be entirely omitted from Link.  Example value:   `{   \"depository\":    {     \"account_subtypes\": [\"checking\", \"savings\"]   },    \"credit\":    {     \"account_subtypes\": [\"all\"]   } }`  For a full list of valid types and subtypes, see the [Account schema](/docs-beta/api/accounts#accounts-schema).   For institutions using OAuth, the filter will not affect the list of institutions or accounts shown by the bank in the OAuth window.
 * @export
 * @interface LinkTokenCreateRequestAccountFilters
 */
export interface LinkTokenCreateRequestAccountFilters {
    /**
     *
     * @type {LinkTokenCreateRequestAccountFiltersDepository}
     * @memberof LinkTokenCreateRequestAccountFilters
     */
    depository?: LinkTokenCreateRequestAccountFiltersDepository;
    /**
     *
     * @type {LinkTokenCreateRequestAccountFiltersCredit}
     * @memberof LinkTokenCreateRequestAccountFilters
     */
    credit?: LinkTokenCreateRequestAccountFiltersCredit;
    /**
     *
     * @type {LinkTokenCreateRequestAccountFiltersLoan}
     * @memberof LinkTokenCreateRequestAccountFilters
     */
    loan?: LinkTokenCreateRequestAccountFiltersLoan;
    /**
     *
     * @type {LinkTokenCreateRequestAccountFiltersInvestment}
     * @memberof LinkTokenCreateRequestAccountFilters
     */
    investment?: LinkTokenCreateRequestAccountFiltersInvestment;
}
/**
 * A filter to apply to `credit`-type accounts
 * @export
 * @interface LinkTokenCreateRequestAccountFiltersCredit
 */
export interface LinkTokenCreateRequestAccountFiltersCredit {
    /**
     * An array of account subtypes to display in Link. If not specified, all account subtypes will be shown. For a full list of valid types and subtypes, see the [Account schema](/docs-beta/api/accounts#accounts-schema).
     * @type {Array<string>}
     * @memberof LinkTokenCreateRequestAccountFiltersCredit
     */
    account_subtypes?: Array<string>;
}
/**
 * A filter to apply to `depository`-type accounts
 * @export
 * @interface LinkTokenCreateRequestAccountFiltersDepository
 */
export interface LinkTokenCreateRequestAccountFiltersDepository {
    /**
     * An array of account subtypes to display in Link. If not specified, all account subtypes will be shown. For a full list of valid types and subtypes, see the [Account schema](/docs-beta/api/accounts#accounts-schema).
     * @type {Array<string>}
     * @memberof LinkTokenCreateRequestAccountFiltersDepository
     */
    account_subtypes?: Array<string>;
}
/**
 * A filter to apply to `investment`-type accounts
 * @export
 * @interface LinkTokenCreateRequestAccountFiltersInvestment
 */
export interface LinkTokenCreateRequestAccountFiltersInvestment {
    /**
     * An array of account subtypes to display in Link. If not specified, all account subtypes will be shown. For a full list of valid types and subtypes, see the [Account schema](/docs-beta/api/accounts#accounts-schema).
     * @type {Array<string>}
     * @memberof LinkTokenCreateRequestAccountFiltersInvestment
     */
    account_subtypes?: Array<string>;
}
/**
 * A filter to apply to `loan`-type accounts
 * @export
 * @interface LinkTokenCreateRequestAccountFiltersLoan
 */
export interface LinkTokenCreateRequestAccountFiltersLoan {
    /**
     * An array of account subtypes to display in Link. If not specified, all account subtypes will be shown. For a full list of valid types and subtypes, see the [Account schema](/docs-beta/api/accounts#accounts-schema).
     * @type {Array<string>}
     * @memberof LinkTokenCreateRequestAccountFiltersLoan
     */
    account_subtypes?: Array<string>;
}
/**
 * Specifies options for initializing Link for use with the Payment Initiation (UK) product. This field is required if `payment_initiation` is included in the `product` array.
 * @export
 * @interface LinkTokenCreateRequestPaymentInitiation
 */
export interface LinkTokenCreateRequestPaymentInitiation {
    /**
     * The `payment_id` provided by the `/payment_initiation/payment/create` endpoint.
     * @type {string}
     * @memberof LinkTokenCreateRequestPaymentInitiation
     */
    payment_id: string;
}
/**
 * An object specifying information about the end user who will be linking their account.
 * @export
 * @interface LinkTokenCreateRequestUser
 */
export interface LinkTokenCreateRequestUser {
    /**
     * A unique ID representing the end user. Typically this will be a user ID number from your application. Personally identifiable information, such as an email address or phone number, should not be used in the `client_user_id`.
     * @type {string}
     * @memberof LinkTokenCreateRequestUser
     */
    client_user_id: string;
}
/**
 *
 * @export
 * @interface LinkTokenCreateResponse
 */
export interface LinkTokenCreateResponse {
    /**
     * A `link_token`, which can be supplied to Link in order to initialize it and receive a `public_token`, which can be exchanged for an `access_token`.
     * @type {string}
     * @memberof LinkTokenCreateResponse
     */
    link_token?: string;
    /**
     * The expiration date for the `link_token`, in ISO 8601 format. A `link_token` created to generate a `public_token` that will be exchanged for a new `access_token` expires after 24 hours. A `link_token` created for an existing Item (such as when updating an existing `access_token` by launching Link in update mode) expires after 30 minutes.
     * @type {string}
     * @memberof LinkTokenCreateResponse
     */
    expiration?: string;
}
/**
 *
 * @export
 * @interface LinkTokenGetRequest
 */
export interface LinkTokenGetRequest {
    /**
     * Your Plaid API `client_id`.
     * @type {string}
     * @memberof LinkTokenGetRequest
     */
    client_id: string;
    /**
     * Your Plaid API `secret`.
     * @type {string}
     * @memberof LinkTokenGetRequest
     */
    secret: string;
    /**
     * A `link_token` from a previous invocation of `/link/token/create`
     * @type {string}
     * @memberof LinkTokenGetRequest
     */
    link_token: string;
}
/**
 *
 * @export
 * @interface LinkTokenGetResponse
 */
export interface LinkTokenGetResponse {
    /**
     * A `link_token`, which can be supplied to Link in order to initialize it and receive a `public_token`, which can be exchanged for an `access_token`.
     * @type {string}
     * @memberof LinkTokenGetResponse
     */
    link_token?: string;
    /**
     * The creation date for the `link_token`, in ISO 8601 format.
     * @type {string}
     * @memberof LinkTokenGetResponse
     */
    created_at?: string;
    /**
     * The expiration date for the `link_token`, in ISO 8601 format.
     * @type {string}
     * @memberof LinkTokenGetResponse
     */
    expiration?: string;
    /**
     *
     * @type {LinkTokenGetResponseMetadata}
     * @memberof LinkTokenGetResponse
     */
    metadata?: LinkTokenGetResponseMetadata;
}
/**
 * An object specifying the arguments originally provided to the `/link/token/create` call.
 * @export
 * @interface LinkTokenGetResponseMetadata
 */
export interface LinkTokenGetResponseMetadata {
    /**
     * The `products` specified in the `/link/token/create` call.
     * @type {Array<string>}
     * @memberof LinkTokenGetResponseMetadata
     */
    initial_products?: Array<string>;
    /**
     * The `webhook` specified in the `/link/token/create` call.
     * @type {string}
     * @memberof LinkTokenGetResponseMetadata
     */
    webhook?: string;
    /**
     * The `country_codes` specified in the `/link/token/create` call.
     * @type {Array<CountryCode>}
     * @memberof LinkTokenGetResponseMetadata
     */
    country_codes?: Array<CountryCode>;
    /**
     * The `language` specified in the `/link/token/create` call.
     * @type {string}
     * @memberof LinkTokenGetResponseMetadata
     */
    language?: string;
    /**
     * The `account_filters` specified in the `/link/token/create` call.
     * @type {object}
     * @memberof LinkTokenGetResponseMetadata
     */
    account_filters?: object;
    /**
     * The `redirect_uri` specified in the `/link/token/create` call.
     * @type {string}
     * @memberof LinkTokenGetResponseMetadata
     */
    redirect_uri?: string;
    /**
     * The `client_name` specified in the `/link/token/create` call.
     * @type {string}
     * @memberof LinkTokenGetResponseMetadata
     */
    client_name?: string;
}
/**
 * A representation of where a transaction took place
 * @export
 * @interface Location
 */
export interface Location {
    /**
     * The street address where the transaction occurred.
     * @type {string}
     * @memberof Location
     */
    address?: string | null;
    /**
     * The city where the transaction occurred.
     * @type {string}
     * @memberof Location
     */
    city?: string | null;
    /**
     * The region or state where the transaction occurred.
     * @type {string}
     * @memberof Location
     */
    region?: string | null;
    /**
     * The postal code where the transaction occurred.
     * @type {string}
     * @memberof Location
     */
    postal_code?: string;
    /**
     * The ISO 3166-1 alpha-2 country code where the transaction occurred.
     * @type {string}
     * @memberof Location
     */
    country?: string | null;
    /**
     * The latitude where the transaction occurred.
     * @type {number}
     * @memberof Location
     */
    lat?: number | null;
    /**
     * The longitude where the transaction occurred.
     * @type {number}
     * @memberof Location
     */
    _long?: number | null;
    /**
     * The merchant defined store number where the transaction occurred.
     * @type {string}
     * @memberof Location
     */
    store_number?: string | null;
}
/**
 * Specifies the multi-factor authentication settings to use with this test account
 * @export
 * @interface MFA
 */
export interface MFA {
    /**
     * Possible values are `device`, `selections`, or `questions`.  If value is `device`, the MFA answer is `1234`.  If value is `selections`, the MFA answer is always the first option.  If value is `questions`, the MFA answer is  `answer_<i>_<j>` for the j-th question in the i-th round, starting from 0. For example, the answer to the first question in the second round is `answer_1_0`.
     * @type {string}
     * @memberof MFA
     */
    type: string;
    /**
     * Number of rounds of questions. Required if value of `type` is `questions`.
     * @type {number}
     * @memberof MFA
     */
    question_rounds?: number;
    /**
     * Number of questions per round. Required if value of `type` is `questions`. If value of type is `selections`, default value is 2.
     * @type {number}
     * @memberof MFA
     */
    questions_per_round?: number;
    /**
     * Number of rounds of selections, used if `type` is `selections`. Defaults to 1.
     * @type {number}
     * @memberof MFA
     */
    selection_rounds?: number;
    /**
     * Number of available answers per question, used if `type` is `selection`. Defaults to 2.
     * @type {number}
     * @memberof MFA
     */
    selections_per_question?: number;
}
/**
 * Allows specifying the metadata of the test account
 * @export
 * @interface Meta
 */
export interface Meta {
    /**
     * The account\'s name
     * @type {string}
     * @memberof Meta
     */
    name?: string;
    /**
     * The account\'s official name
     * @type {string}
     * @memberof Meta
     */
    official_name?: string;
    /**
     * The account\'s limit
     * @type {number}
     * @memberof Meta
     */
    limit?: number;
}
/**
 * We use standard HTTP response codes for success and failure notifications, and our errors are further classified by `error_type`. In general, 200 HTTP codes correspond to success, 40X codes are for developer- or user-related failures, and 50X codes are for Plaid-related issues.  Error fields will be `null` if no error has occurred.
 * @export
 * @interface ModelError
 */
export interface ModelError {
    /**
     * A broad categorization of the error. Safe for programatic use.  Possible values: `INVALID_REQUEST`, `INVALID_INPUT`, `INSTITUTION_ERROR`, `RATE_LIMIT_EXCEEDED`, `API_ERROR`, `ITEM_ERROR`, `ASSET_REPORT_ERROR`, `RECAPTCHA_ERROR`, `OAUTH_ERROR`, `PAYMENT_ERROR`
     * @type {string}
     * @memberof ModelError
     */
    error_type?: string;
    /**
     * The particular error code. Safe for programmatic use.
     * @type {string}
     * @memberof ModelError
     */
    error_code?: string;
    /**
     * A developer-friendly representation of the error code. This may change over time and is not safe for programmatic use.
     * @type {string}
     * @memberof ModelError
     */
    error_message?: string;
    /**
     * A user-friendly representation of the error code. `null` if the error is not related to user action.   This may change over time and is not safe for programmatic use.
     * @type {string}
     * @memberof ModelError
     */
    display_message?: string | null;
    /**
     * A unique identifying the request, to be used for troubleshooting purposes. This field will be omitted in errors provided by webhooks.
     * @type {string}
     * @memberof ModelError
     */
    request_id?: string | null;
    /**
     * In the Assets product, a request can pertain to more than one Item. If an error is returned for such a request, `causes` will return an array of errors containing a breakdown of these errors on the individual Item level, if any can be identified.   `causes` will only be provided for the `error_type` `ASSET_REPORT_ERROR`.
     * @type {Array<any>}
     * @memberof ModelError
     */
    causes?: Array<any>;
    /**
     * The HTTP status code associated with the error. This will only be returned in the response body when the error information is provided via a webhook.
     * @type {number}
     * @memberof ModelError
     */
    status?: number | null;
    /**
     * The URL of a Plaid documentation page with more information about the error
     * @type {string}
     * @memberof ModelError
     */
    documentation_url?: string | null;
    /**
     * Suggested steps for resolving the error
     * @type {string}
     * @memberof ModelError
     */
    suggested_action?: string | null;
}
/**
 * Account and bank identifier number data used to configure the test account. All values are optional.
 * @export
 * @interface Numbers
 */
export interface Numbers {
    /**
     * Will be used for the account number.
     * @type {string}
     * @memberof Numbers
     */
    account?: string;
    /**
     * Must be a valid ACH routing number.
     * @type {string}
     * @memberof Numbers
     */
    ach_routing?: string;
    /**
     * Must be a valid wire transfer routing number.
     * @type {string}
     * @memberof Numbers
     */
    ach_wire_routing?: string;
    /**
     * EFT institution number. Must be specified alongside `eft_branch`.
     * @type {string}
     * @memberof Numbers
     */
    eft_institution?: string;
    /**
     * EFT branch number. Must be specified alongside `eft_institution`.
     * @type {string}
     * @memberof Numbers
     */
    eft_branch?: string;
    /**
     * Bank identifier code (BIC). Must be specified alongside `international_iban`.
     * @type {string}
     * @memberof Numbers
     */
    international_bic?: string;
    /**
     * International bank account number (IBAN). If no account number is specified via `account`, will also be used as the account number by default. Must be specified alongside `international_bic`.
     * @type {string}
     * @memberof Numbers
     */
    international_iban?: string;
    /**
     * BACS sort code
     * @type {string}
     * @memberof Numbers
     */
    bacs_sort_code?: string;
}
/**
 * Identifying information for transfering money to or from a US account via ACH or wire transfer.
 * @export
 * @interface NumbersACH
 */
export interface NumbersACH {
    /**
     * The Plaid account ID associated with the account numbers
     * @type {string}
     * @memberof NumbersACH
     */
    account_id?: string;
    /**
     * The ACH account number for the account
     * @type {string}
     * @memberof NumbersACH
     */
    account?: string;
    /**
     * The ACH routing number for the account
     * @type {string}
     * @memberof NumbersACH
     */
    routing?: string;
    /**
     * The wire transfer routing number for the account, if available
     * @type {string}
     * @memberof NumbersACH
     */
    wire_routing?: string | null;
}
/**
 * Identifying information for transfering money to or from a UK bank account via BACS.
 * @export
 * @interface NumbersBACS
 */
export interface NumbersBACS {
    /**
     * The Plaid account ID associated with the account numbers
     * @type {string}
     * @memberof NumbersBACS
     */
    account_id?: string;
    /**
     * The BACS account number for the account
     * @type {string}
     * @memberof NumbersBACS
     */
    account?: string;
    /**
     * The BACS sort code for the account
     * @type {string}
     * @memberof NumbersBACS
     */
    sort_code?: string;
}
/**
 * Identifying information for transfering money to or from a Canadian bank account via EFT.
 * @export
 * @interface NumbersEFT
 */
export interface NumbersEFT {
    /**
     * The Plaid account ID associated with the account numbers
     * @type {string}
     * @memberof NumbersEFT
     */
    account_id?: string;
    /**
     * The EFT account number for the account
     * @type {string}
     * @memberof NumbersEFT
     */
    account?: string;
    /**
     * The EFT institution number for the account
     * @type {string}
     * @memberof NumbersEFT
     */
    institution?: string;
    /**
     * The EFT branch number for the account
     * @type {string}
     * @memberof NumbersEFT
     */
    branch?: string;
}
/**
 * Identifying information for transfering money to or from an international bank account via wire transfer.
 * @export
 * @interface NumbersInternational
 */
export interface NumbersInternational {
    /**
     * The Plaid account ID associated with the account numbers
     * @type {string}
     * @memberof NumbersInternational
     */
    account_id: string;
    /**
     * The International Bank Account Number (IBAN) for the account
     * @type {string}
     * @memberof NumbersInternational
     */
    iban: string;
    /**
     * The Bank Identifier Code (BIC) for the account
     * @type {string}
     * @memberof NumbersInternational
     */
    bic: string;
}
/**
 * Data to use to set values of test accounts. Some values cannot be specified in the schema and will instead will be calculated from other test data in order to achieve more consistent, realistic test data.
 * @export
 * @interface OverrideAccounts
 */
export interface OverrideAccounts {
    /**
     *
     * @type {AccountType}
     * @memberof OverrideAccounts
     */
    type: AccountType;
    /**
     *
     * @type {AccountSubtype}
     * @memberof OverrideAccounts
     */
    subtype: AccountSubtype;
    /**
     * If provided, the account will start with this amount as the `current_balance`.
     * @type {number}
     * @memberof OverrideAccounts
     */
    starting_balance?: number;
    /**
     * If provided, the account will always have this amount as its `available_balance`, regardless of current balance or changes in transactions over time.
     * @type {number}
     * @memberof OverrideAccounts
     */
    force_available_balance?: number;
    /**
     * ISO-4217 currency code. If provided, the account will be denominated in the given currency. Transactions will also be in this currency by default.
     * @type {string}
     * @memberof OverrideAccounts
     */
    currency?: string;
    /**
     *
     * @type {Meta}
     * @memberof OverrideAccounts
     */
    meta?: Meta;
    /**
     *
     * @type {Numbers}
     * @memberof OverrideAccounts
     */
    numbers?: Numbers;
    /**
     * Specify the list of transactions on the account.
     * @type {Array<TransactionOverride>}
     * @memberof OverrideAccounts
     */
    transactions?: Array<TransactionOverride>;
    /**
     *
     * @type {OwnerOverride}
     * @memberof OverrideAccounts
     */
    identity?: OwnerOverride;
    /**
     *
     * @type {LiabilityOverride}
     * @memberof OverrideAccounts
     */
    liability?: LiabilityOverride;
    /**
     *
     * @type {InflowModel}
     * @memberof OverrideAccounts
     */
    inflow_model?: InflowModel;
}
/**
 * Data returned from the financial institution about the owner or owners of an account. Only the `names` array must be non-empty.
 * @export
 * @interface Owner
 */
export interface Owner {
    /**
     * A list of names associated with the account by the financial institution. These should always be the names of individuals, even for business accounts. If the name of a business is reported, please contact Plaid Support.  In the case of a joint account, the names of all account holders will be reported.  If an Item contains multiple accounts with different owner names, some institutions will report all names associated with the Item in each account\'s `names` array.
     * @type {Array<string>}
     * @memberof Owner
     */
    names?: Array<string>;
    /**
     * A list of phone numbers associated with the account by the financial institution. May be an empty array if no relevant information is returned from the financial institution.
     * @type {Array<PhoneNumber>}
     * @memberof Owner
     */
    phone_numbers?: Array<PhoneNumber>;
    /**
     * A list of email addresses associated with the account by the financial institution. May be an empty array if no relevant information is returned from the financial institution.
     * @type {Array<Email>}
     * @memberof Owner
     */
    emails?: Array<Email>;
    /**
     * Data about the various addresses associated with the account by the financial institution. May be an empty array if no relevant information is returned from the financial institution.
     * @type {Array<Address>}
     * @memberof Owner
     */
    addresses?: Array<Address>;
}
/**
 * Data about the owner or owners of an account. Any fields not specified will be filled in with default Sandbox information.
 * @export
 * @interface OwnerOverride
 */
export interface OwnerOverride {
    /**
     * A list of names associated with the account by the financial institution. These should always be the names of individuals, even for business accounts. Note that the same name data will be used for all accounts associated with an Item.
     * @type {Array<string>}
     * @memberof OwnerOverride
     */
    names?: Array<string>;
    /**
     * A list of phone numbers associated with the account.
     * @type {Array<PhoneNumber>}
     * @memberof OwnerOverride
     */
    phone_numbers?: Array<PhoneNumber>;
    /**
     * A list of email addresses associated with the account.
     * @type {Array<Email>}
     * @memberof OwnerOverride
     */
    emails?: Array<Email>;
    /**
     * Data about the various addresses associated with the account.
     * @type {Array<Address>}
     * @memberof OwnerOverride
     */
    addresses?: Array<Address>;
}
/**
 * Information about the student\'s eligibility in the Public Service Loan Forgiveness program. This is only returned if the institution is Fedloan (`ins_116527`).
 * @export
 * @interface PSLFStatus
 */
export interface PSLFStatus {
    /**
     * The estimated date borrower will have completed 120 qualifying monthly payments. Returned in ISO 8601 format (YYYY-MM-DD).
     * @type {string}
     * @memberof PSLFStatus
     */
    estimated_eligibility_date?: string | null;
    /**
     * The number of qualifying payments that have been made.
     * @type {string}
     * @memberof PSLFStatus
     */
    payments_made?: string | null;
    /**
     * The number of qualifying payments remaining.
     * @type {string}
     * @memberof PSLFStatus
     */
    payments_remaining?: string | null;
}
/**
 * The amount and currency of a payment
 * @export
 * @interface PaymentAmount
 */
export interface PaymentAmount {
    /**
     * The ISO-4217 currency code of the payment amount
     * @type {string}
     * @memberof PaymentAmount
     */
    currency?: string;
    /**
     * The payment amount
     * @type {number}
     * @memberof PaymentAmount
     */
    value?: number;
}
/**
 * The address of the payment recipient
 * @export
 * @interface PaymentInitiationAddress
 */
export interface PaymentInitiationAddress {
    /**
     * An array of length 1-2 representing the street address where the recipient is located.
     * @type {Array<string>}
     * @memberof PaymentInitiationAddress
     */
    street: Array<string>;
    /**
     * The city where the recipient is located.
     * @type {string}
     * @memberof PaymentInitiationAddress
     */
    city: string;
    /**
     * The postal code where the recipient is located.
     * @type {string}
     * @memberof PaymentInitiationAddress
     */
    postal_code: string;
    /**
     * The ISO 3166-1 alpha-2 country code where the recipient is located.
     * @type {string}
     * @memberof PaymentInitiationAddress
     */
    country: string;
}
/**
 * Information about a payment made via the Payment Initiation product
 * @export
 * @interface PaymentInitiationPayment
 */
export interface PaymentInitiationPayment {
    /**
     * The ID of the payment. Like all Plaid identifiers, the `payment_id` is case sensitive.
     * @type {string}
     * @memberof PaymentInitiationPayment
     */
    payment_id?: string;
    /**
     * A reference for the payment.
     * @type {string}
     * @memberof PaymentInitiationPayment
     */
    reference?: string;
    /**
     *
     * @type {PaymentAmount}
     * @memberof PaymentInitiationPayment
     */
    amount?: PaymentAmount;
    /**
     * The status of the payment. Possible values are:  `PAYMENT_STATUS_INPUT_NEEDED`: This is the initial state of all payments. It indicates that the payment is waiting on user input to continue processing. A payment may re-enter this state later on if further input is needed.  `PAYMENT_STATUS_PROCESSING`: The payment is currently being processed. The payment will automatically exit this state when processing is complete.  `PAYMENT_STATUS_INITIATED`: The payment has been successfully initiated and is considered complete.   `PAYMENT_STATUS_COMPLETED`: Indicates that the standing order has been successfully established. This state is only used for standing orders.  `PAYMENT_STATUS_INSUFFICIENT_FUNDS`: The payment has failed due to insufficient funds.  `PAYMENT_STATUS_FAILED`: The payment has failed to be initiated. This error is retryable once the root cause is resolved.  `PAYMENT_STATUS_BLOCKED`: The payment has been blocked. This is a retryable error.  `PAYMENT_STATUS_UNKNOWN`: The payment status is unknown.
     * @type {string}
     * @memberof PaymentInitiationPayment
     */
    status?: string;
    /**
     * The date and time of the last time the `status` was updated, in IS0 8601 format
     * @type {string}
     * @memberof PaymentInitiationPayment
     */
    last_status_update?: string;
    /**
     * The ID of the recipient
     * @type {string}
     * @memberof PaymentInitiationPayment
     */
    recipient_id?: string;
}
/**
 *
 * @export
 * @interface PaymentInitiationPaymentCreateRequest
 */
export interface PaymentInitiationPaymentCreateRequest {
    /**
     * Your Plaid API `client_id`.
     * @type {string}
     * @memberof PaymentInitiationPaymentCreateRequest
     */
    client_id: string;
    /**
     * Your Plaid API `secret`.
     * @type {string}
     * @memberof PaymentInitiationPaymentCreateRequest
     */
    secret: string;
    /**
     * The ID of the recipient the payment is for.
     * @type {string}
     * @memberof PaymentInitiationPaymentCreateRequest
     */
    recipient_id: string;
    /**
     * A reference for the payment. This should not contain special characters (since not all institutions support them).
     * @type {string}
     * @memberof PaymentInitiationPaymentCreateRequest
     */
    reference: string;
    /**
     *
     * @type {Amount}
     * @memberof PaymentInitiationPaymentCreateRequest
     */
    amount: Amount;
    /**
     *
     * @type {PaymentInitiationPaymentCreateRequestSchedule}
     * @memberof PaymentInitiationPaymentCreateRequest
     */
    schedule?: PaymentInitiationPaymentCreateRequestSchedule;
}
/**
 * The schedule that the payment will be executed on. If a schedule is provided, the payment is automatically set up as a standing order. If no schedule is specified, the payment will be executed only once.
 * @export
 * @interface PaymentInitiationPaymentCreateRequestSchedule
 */
export interface PaymentInitiationPaymentCreateRequestSchedule {
    /**
     * The frequency interval of the payment. Valid values are `\"WEEKLY\"` or `\"MONTHLY\"`.
     * @type {string}
     * @memberof PaymentInitiationPaymentCreateRequestSchedule
     */
    interval: string;
    /**
     * The day of the interval on which to schedule the payment.  If the payment interval is weekly, `interval_execution_day` should be an integer from 1 (Monday) to 7 (Sunday).  If the payment interval is monthly, `interval_execution_day` should be an integer indicating which day of the month to make the payment on. Integers from 1 to 28 can be used to make a payment on that day of the month. Negative integers from -1 to -5 can be used to make a payment relative to the end of the month. To make a payment on the last day of the month, use -1; to make the payment on the second-to-last day, use -2, and so on.
     * @type {number}
     * @memberof PaymentInitiationPaymentCreateRequestSchedule
     */
    interval_execution_day: number;
    /**
     * A date in ISO 8601 format (YYYY-MM-DD). Standing order payments will begin on the first `interval_execution_day` on or after the `start_date`.   If the first `interval_execution_day` on or after the start date is also the same day that `/payment_initiation/payment/create` was called, the bank *may* make the first payment on that day, but it is not guaranteed to do so.  It is not possible to specify an end date for a standing order payment.  To end or modify a standing order payment, the end user should contact their bank.
     * @type {string}
     * @memberof PaymentInitiationPaymentCreateRequestSchedule
     */
    start_date: string;
}
/**
 *
 * @export
 * @interface PaymentInitiationPaymentCreateResponse
 */
export interface PaymentInitiationPaymentCreateResponse {
    /**
     * A unique ID identifying the payment
     * @type {string}
     * @memberof PaymentInitiationPaymentCreateResponse
     */
    payment_id?: string;
    /**
     * For a payment returned by this endpoint, there is only one possible value:  `PAYMENT_STATUS_INPUT_NEEDED`: The initial phase of the payment
     * @type {string}
     * @memberof PaymentInitiationPaymentCreateResponse
     */
    status?: string;
    /**
     * A unique identifier for the request, which can be used for troubleshooting. This identifier, like all Plaid identifiers, is case sensitive.
     * @type {string}
     * @memberof PaymentInitiationPaymentCreateResponse
     */
    request_id?: string;
}
/**
 *
 * @export
 * @interface PaymentInitiationPaymentListRequest
 */
export interface PaymentInitiationPaymentListRequest {
    /**
     * Your Plaid API `client_id`.
     * @type {string}
     * @memberof PaymentInitiationPaymentListRequest
     */
    client_id: string;
    /**
     * Your Plaid API `secret`.
     * @type {string}
     * @memberof PaymentInitiationPaymentListRequest
     */
    secret: string;
    /**
     * The maximum number of payments to return. Must be an integer from 0 to 200. If `count` is not specified, a maximum of 10 payments will be returned, beginning with the most recent payment before the cursor (if specified).
     * @type {number}
     * @memberof PaymentInitiationPaymentListRequest
     */
    count?: number;
    /**
     * A string in RFC 3339 format (i.e. \"2019-12-06T22:35:49Z\"). Only payments created before the cursor will be returned.
     * @type {string}
     * @memberof PaymentInitiationPaymentListRequest
     */
    cursor?: string;
}
/**
 *
 * @export
 * @interface PaymentInitiationPaymentListResponse
 */
export interface PaymentInitiationPaymentListResponse {
    /**
     * An array of payments that have been created, associated with the given `client_id`.
     * @type {Array<PaymentInitiationPayment>}
     * @memberof PaymentInitiationPaymentListResponse
     */
    payments?: Array<PaymentInitiationPayment>;
    /**
     * The value that, when used as the optional `cursor` parameter to `/payment_initiation/payment/list`, will return the next unreturned payment as its first payment.
     * @type {string}
     * @memberof PaymentInitiationPaymentListResponse
     */
    next_cursor?: string;
    /**
     * A unique identifier for the request, which can be used for troubleshooting. This identifier, like all Plaid identifiers, is case sensitive.
     * @type {string}
     * @memberof PaymentInitiationPaymentListResponse
     */
    request_id?: string;
}
/**
 * Information about a payment recipient configured for the Payment Initiation product
 * @export
 * @interface PaymentInitiationRecipient
 */
export interface PaymentInitiationRecipient {
    /**
     * The ID of the recipient. Like all Plaid identifiers, the `recipient_id` is case sensitive.
     * @type {string}
     * @memberof PaymentInitiationRecipient
     */
    recipient_id?: string;
    /**
     * The name of the recipient
     * @type {string}
     * @memberof PaymentInitiationRecipient
     */
    name?: string;
    /**
     *
     * @type {PaymentInitiationAddress}
     * @memberof PaymentInitiationRecipient
     */
    address?: PaymentInitiationAddress;
    /**
     * The International Bank Account Number (IBAN) for the recipient.
     * @type {string}
     * @memberof PaymentInitiationRecipient
     */
    iban?: string;
}
/**
 *
 * @export
 * @interface PaymentInitiationRecipientCreateRequest
 */
export interface PaymentInitiationRecipientCreateRequest {
    /**
     * Your Plaid API `client_id`.
     * @type {string}
     * @memberof PaymentInitiationRecipientCreateRequest
     */
    client_id: string;
    /**
     * Your Plaid API `secret`.
     * @type {string}
     * @memberof PaymentInitiationRecipientCreateRequest
     */
    secret: string;
    /**
     * The name of the recipient
     * @type {string}
     * @memberof PaymentInitiationRecipientCreateRequest
     */
    name: string;
    /**
     * The International Bank Account Number (IBAN) for the recipient. If BACS data is not provided, an IBAN is required.
     * @type {string}
     * @memberof PaymentInitiationRecipientCreateRequest
     */
    iban?: string;
    /**
     *
     * @type {PaymentInitiationRecipientCreateRequestBacs}
     * @memberof PaymentInitiationRecipientCreateRequest
     */
    bacs?: PaymentInitiationRecipientCreateRequestBacs;
    /**
     *
     * @type {PaymentInitiationAddress}
     * @memberof PaymentInitiationRecipientCreateRequest
     */
    address?: PaymentInitiationAddress;
}
/**
 * An object containing a BACS account number and sort code. If an IBAN is not provided, BACS data is required.
 * @export
 * @interface PaymentInitiationRecipientCreateRequestBacs
 */
export interface PaymentInitiationRecipientCreateRequestBacs {
    /**
     * The account number of the account.
     * @type {string}
     * @memberof PaymentInitiationRecipientCreateRequestBacs
     */
    account: string;
    /**
     * The sort code of the account.
     * @type {string}
     * @memberof PaymentInitiationRecipientCreateRequestBacs
     */
    sort_code: string;
}
/**
 *
 * @export
 * @interface PaymentInitiationRecipientCreateResponse
 */
export interface PaymentInitiationRecipientCreateResponse {
    /**
     * A unique ID identifying the recipient
     * @type {string}
     * @memberof PaymentInitiationRecipientCreateResponse
     */
    recipient_id?: string;
    /**
     * A unique identifier for the request, which can be used for troubleshooting. This identifier, like all Plaid identifiers, is case sensitive.
     * @type {string}
     * @memberof PaymentInitiationRecipientCreateResponse
     */
    request_id?: string;
}
/**
 *
 * @export
 * @interface PaymentInitiationRecipientGetRequest
 */
export interface PaymentInitiationRecipientGetRequest {
    /**
     * Your Plaid API `client_id`.
     * @type {string}
     * @memberof PaymentInitiationRecipientGetRequest
     */
    client_id: string;
    /**
     * Your Plaid API `secret`.
     * @type {string}
     * @memberof PaymentInitiationRecipientGetRequest
     */
    secret: string;
    /**
     * The ID of the recipient
     * @type {string}
     * @memberof PaymentInitiationRecipientGetRequest
     */
    recipient_id: string;
}
/**
 *
 * @export
 * @interface PaymentInitiationRecipientGetResponse
 */
export interface PaymentInitiationRecipientGetResponse {
    /**
     * The ID of the recipient.
     * @type {string}
     * @memberof PaymentInitiationRecipientGetResponse
     */
    recipient_id?: string;
    /**
     * The name of the recipient.
     * @type {string}
     * @memberof PaymentInitiationRecipientGetResponse
     */
    name?: string;
    /**
     *
     * @type {PaymentInitiationAddress}
     * @memberof PaymentInitiationRecipientGetResponse
     */
    address?: PaymentInitiationAddress;
    /**
     * The International Bank Account Number (IBAN) for the recipient.
     * @type {string}
     * @memberof PaymentInitiationRecipientGetResponse
     */
    iban?: string;
    /**
     *
     * @type {PaymentInitiationRecipientGetResponseBacs}
     * @memberof PaymentInitiationRecipientGetResponse
     */
    bacs?: PaymentInitiationRecipientGetResponseBacs;
    /**
     * A unique identifier for the request, which can be used for troubleshooting. This identifier, like all Plaid identifiers, is case sensitive.
     * @type {string}
     * @memberof PaymentInitiationRecipientGetResponse
     */
    request_id?: string;
}
/**
 * An object containing a BACS account number and sort code. If an IBAN is not provided, BACS data is required.
 * @export
 * @interface PaymentInitiationRecipientGetResponseBacs
 */
export interface PaymentInitiationRecipientGetResponseBacs {
    /**
     * The account number of the account.
     * @type {string}
     * @memberof PaymentInitiationRecipientGetResponseBacs
     */
    account?: string;
    /**
     * The sort code of the account.
     * @type {string}
     * @memberof PaymentInitiationRecipientGetResponseBacs
     */
    sort_code?: string;
}
/**
 *
 * @export
 * @interface PaymentInitiationRecipientListRequest
 */
export interface PaymentInitiationRecipientListRequest {
    /**
     * Your Plaid API `client_id`.
     * @type {string}
     * @memberof PaymentInitiationRecipientListRequest
     */
    client_id: string;
    /**
     * Your Plaid API `secret`.
     * @type {string}
     * @memberof PaymentInitiationRecipientListRequest
     */
    secret: string;
}
/**
 *
 * @export
 * @interface PaymentInitiationRecipientListResponse
 */
export interface PaymentInitiationRecipientListResponse {
    /**
     * An array of payment recipients created for Payment Initiation
     * @type {Array<PaymentInitiationRecipient>}
     * @memberof PaymentInitiationRecipientListResponse
     */
    recipients?: Array<PaymentInitiationRecipient>;
    /**
     * A unique identifier for the request, which can be used for troubleshooting. This identifier, like all Plaid identifiers, is case sensitive.
     * @type {string}
     * @memberof PaymentInitiationRecipientListResponse
     */
    request_id?: string;
}
/**
 *
 * @export
 * @interface PaymentIntiationPaymentGetRequest
 */
export interface PaymentIntiationPaymentGetRequest {
    /**
     * Your Plaid API `client_id`.
     * @type {string}
     * @memberof PaymentIntiationPaymentGetRequest
     */
    client_id: string;
    /**
     * Your Plaid API `secret`.
     * @type {string}
     * @memberof PaymentIntiationPaymentGetRequest
     */
    secret: string;
    /**
     * The `payment_id` returned from `/payment_initiation/payment/create`.
     * @type {string}
     * @memberof PaymentIntiationPaymentGetRequest
     */
    payment_id: string;
}
/**
 *
 * @export
 * @interface PaymentIntiationPaymentGetResponse
 */
export interface PaymentIntiationPaymentGetResponse {
    /**
     * The ID of the payment. Like all Plaid identifiers, the `payment_id` is case sensitive.
     * @type {string}
     * @memberof PaymentIntiationPaymentGetResponse
     */
    payment_id?: string;
    /**
     * A unique identifier for the request, which can be used for troubleshooting. This identifier, like all Plaid identifiers, is case sensitive.
     * @type {string}
     * @memberof PaymentIntiationPaymentGetResponse
     */
    request_id?: string;
    /**
     *
     * @type {PaymentAmount}
     * @memberof PaymentIntiationPaymentGetResponse
     */
    amount?: PaymentAmount;
    /**
     * The status of the payment. Possible values are:  `PAYMENT_STATUS_INPUT_NEEDED`: This is the initial state of all payments. It indicates that the payment is waiting on user input to continue processing. A payment may re-enter this state later on if further input is needed.  `PAYMENT_STATUS_PROCESSING`: The payment is currently being processed. The payment will automatically exit this state when processing is complete.  `PAYMENT_STATUS_INITIATED`: The payment has been successfully initiated and is considered complete.   `PAYMENT_STATUS_COMPLETED`: Indicates that the standing order has been successfully established. This state is only used for standing orders.  `PAYMENT_STATUS_INSUFFICIENT_FUNDS`: The payment has failed due to insufficient funds.  `PAYMENT_STATUS_FAILED`: The payment has failed to be initiated. This error is retryable once the root cause is resolved.  `PAYMENT_STATUS_BLOCKED`: The payment has been blocked. This is a retryable error.  `PAYMENT_STATUS_UNKNOWN`: The payment status is unknown.
     * @type {string}
     * @memberof PaymentIntiationPaymentGetResponse
     */
    status?: string;
    /**
     * The ID of the recipient
     * @type {string}
     * @memberof PaymentIntiationPaymentGetResponse
     */
    recipient_id?: string;
    /**
     * A reference for the payment.
     * @type {string}
     * @memberof PaymentIntiationPaymentGetResponse
     */
    reference?: string;
    /**
     * The date and time of the last time the `status` was updated, in IS0 8601 format
     * @type {string}
     * @memberof PaymentIntiationPaymentGetResponse
     */
    last_status_update?: string;
    /**
     *
     * @type {PaymentIntiationPaymentGetResponseSchedule}
     * @memberof PaymentIntiationPaymentGetResponse
     */
    schedule?: PaymentIntiationPaymentGetResponseSchedule | null;
}
/**
 * The schedule that the payment will be executed on. If a schedule is provided, the payment is automatically set up as a standing order. If no schedule is specified, the payment will be executed only once.
 * @export
 * @interface PaymentIntiationPaymentGetResponseSchedule
 */
export interface PaymentIntiationPaymentGetResponseSchedule {
    /**
     * The frequency interval of the payment. Valid values are `\"WEEKLY\"` or `\"MONTHLY\"`.
     * @type {string}
     * @memberof PaymentIntiationPaymentGetResponseSchedule
     */
    interval: string;
    /**
     * The day of the interval on which to schedule the payment.  If the payment interval is weekly, `interval_execution_day` should be an integer from 1 (Monday) to 7 (Sunday).  If the payment interval is monthly, `interval_execution_day` should be an integer indicating which day of the month to make the payment on. Integers from 1 to 28 can be used to make a payment on that day of the month. Negative integers from -1 to -5 can be used to make a payment relative to the end of the month. To make a payment on the last day of the month, use -1; to make the payment on the second-to-last day, use -2, and so on.
     * @type {number}
     * @memberof PaymentIntiationPaymentGetResponseSchedule
     */
    interval_execution_day: number;
    /**
     * A date in ISO 8601 format (YYYY-MM-DD). Standing order payments will begin on the first `interval_execution_day` on or after the `start_date`.   If the first `interval_execution_day` on or after the start date is also the same day that `/payment_initiation/payment/create` was called, the bank *may* make the first payment on that day, but it is not guaranteed to do so.  It is not possible to specify an end date for a standing order payment.  To end or modify a standing order payment, the end user should contact their bank.
     * @type {string}
     * @memberof PaymentIntiationPaymentGetResponseSchedule
     */
    start_date: string;
}
/**
 * Transaction information specific to inter-bank transfers. If the transaction was not an inter-bank transfer, all fields will be `null`.  If the `transaction` object was returned by a Transactions endpoint such as `/transactions/get`, the `payment_meta` key will always appear, but no data elements are guaranteed. If the `transaction` object was returned by an Assets endpoint such as `/assets/get/` or `/assets/pdf/get`, this field will only appear in an Asset Report with Insights.
 * @export
 * @interface PaymentMeta
 */
export interface PaymentMeta {
    /**
     * The transaction reference number supplied by the financial institution.
     * @type {string}
     * @memberof PaymentMeta
     */
    reference_number?: string | null;
    /**
     * The ACH PPD ID for the payer.
     * @type {string}
     * @memberof PaymentMeta
     */
    ppd_id?: string | null;
    /**
     * For transfers, the party that is receiving the transaction.
     * @type {string}
     * @memberof PaymentMeta
     */
    payee?: string | null;
    /**
     * The party initiating a wire transfer. Will be `null` if the transaction is not a wire transfer.
     * @type {string}
     * @memberof PaymentMeta
     */
    by_order_of?: string | null;
    /**
     * For transfers, the party that is paying the transaction.
     * @type {string}
     * @memberof PaymentMeta
     */
    payer?: string | null;
    /**
     * The type of transfer, e.g. \'ACH\'
     * @type {string}
     * @memberof PaymentMeta
     */
    payment_method?: string | null;
    /**
     * The name of the payment processor
     * @type {string}
     * @memberof PaymentMeta
     */
    payment_processor?: string | null;
    /**
     * The payer-supplied description of the transfer.
     * @type {string}
     * @memberof PaymentMeta
     */
    reason?: string | null;
}
/**
 * Fired when the status of a payment has changed.
 * @export
 * @interface PaymentStatusUpdateWebhook
 */
export interface PaymentStatusUpdateWebhook {
    /**
     * `PAYMENT_INITIATION`
     * @type {string}
     * @memberof PaymentStatusUpdateWebhook
     */
    webhook_type?: string;
    /**
     * `PAYMENT_STATUS_UPDATE`
     * @type {string}
     * @memberof PaymentStatusUpdateWebhook
     */
    webhook_code?: string;
    /**
     * The `payment_id` for the payment being updated
     * @type {string}
     * @memberof PaymentStatusUpdateWebhook
     */
    payment_id?: string;
    /**
     * The new status of the payment. Possible values are:  `PAYMENT_STATUS_INPUT_NEEDED`: This is the initial state of all payments. It indicates that the payment is waiting on user input to continue processing. A payment may re-enter this state later on if further input is needed.  `PAYMENT_STATUS_PROCESSING`: The payment is currently being processed. The payment will automatically exit this state when processing is complete.  `PAYMENT_STATUS_INITIATED`: The payment has been successfully initiated and is considered complete.   `PAYMENT_STATUS_COMPLETED`: Indicates that the standing order has been successfully established. This state is only used for standing orders.  `PAYMENT_STATUS_INSUFFICIENT_FUNDS`: The payment has failed due to insufficient funds.  `PAYMENT_STATUS_FAILED`: The payment has failed to be initiated. This error is retryable once the root cause is resolved.  `PAYMENT_STATUS_BLOCKED`: The payment has been blocked. This is a retryable error.  `PAYMENT_STATUS_UNKNOWN`: The payment status is unknown.
     * @type {string}
     * @memberof PaymentStatusUpdateWebhook
     */
    new_payment_status?: string;
    /**
     * The previous status of the payment. Possible values are:  `PAYMENT_STATUS_INPUT_NEEDED`: This is the initial state of all payments. It indicates that the payment is waiting on user input to continue processing. A payment may re-enter this state later on if further input is needed.  `PAYMENT_STATUS_PROCESSING`: The payment is currently being processed. The payment will automatically exit this state when processing is complete.  `PAYMENT_STATUS_INITIATED`: The payment has been successfully initiated and is considered complete.   `PAYMENT_STATUS_COMPLETED`: Indicates that the standing order has been successfully established. This state is only used for standing orders.  `PAYMENT_STATUS_INSUFFICIENT_FUNDS`: The payment has failed due to insufficient funds.  `PAYMENT_STATUS_FAILED`: The payment has failed to be initiated. This error is retryable once the root cause is resolved.  `PAYMENT_STATUS_BLOCKED`: The payment has been blocked. This is a retryable error.  `PAYMENT_STATUS_UNKNOWN`: The payment status is unknown.
     * @type {string}
     * @memberof PaymentStatusUpdateWebhook
     */
    old_payment_status?: string;
    /**
     * The timestamp of the update, in ISO 8601 format, e.g. `\"2017-09-14T14:42:19.350Z\"`
     * @type {string}
     * @memberof PaymentStatusUpdateWebhook
     */
    timestamp?: string;
    /**
     *
     * @type {Error}
     * @memberof PaymentStatusUpdateWebhook
     */
    error?: Error | null;
}
/**
 * Fired when an Itemâ€™s access consent is expiring in 7 days. Some Items have explicit expiration times and we try to relay this when possible to reduce service disruption. This can be resolved by having the user go through Linkâ€™s update mode.
 * @export
 * @interface PendingExpirationWebhook
 */
export interface PendingExpirationWebhook {
    /**
     * `ITEM`
     * @type {string}
     * @memberof PendingExpirationWebhook
     */
    webhook_type?: string;
    /**
     * `PENDING_EXPIRATION`
     * @type {string}
     * @memberof PendingExpirationWebhook
     */
    webhook_code?: string;
    /**
     * The `item_id` of the Item associated with this webhook, warning, or error
     * @type {string}
     * @memberof PendingExpirationWebhook
     */
    item_id?: string;
    /**
     * The date and time at which the Item\'s access consent will expire, in ISO 8601 format
     * @type {string}
     * @memberof PendingExpirationWebhook
     */
    consent_expiration_time?: string;
}
/**
 * A phone number
 * @export
 * @interface PhoneNumber
 */
export interface PhoneNumber {
    /**
     * The phone number.
     * @type {string}
     * @memberof PhoneNumber
     */
    data?: string;
    /**
     * When `true`, identifies the phone number as the primary number on an account.
     * @type {boolean}
     * @memberof PhoneNumber
     */
    primary?: boolean | null;
    /**
     * The type of phone number. Possible values: `\"home\"`, `\"work\"`, `\"office\"`, `\"mobile\"`, `\"other\"`
     * @type {string}
     * @memberof PhoneNumber
     */
    type?: string | null;
}
/**
 *
 * @export
 * @interface ProcessorApexProcessorTokenCreateRequest
 */
export interface ProcessorApexProcessorTokenCreateRequest {
    /**
     * Your Plaid API `client_id`.
     * @type {string}
     * @memberof ProcessorApexProcessorTokenCreateRequest
     */
    client_id: string;
    /**
     * Your Plaid API `secret`.
     * @type {string}
     * @memberof ProcessorApexProcessorTokenCreateRequest
     */
    secret: string;
    /**
     * The access token associated with the Item data is being requested for.
     * @type {string}
     * @memberof ProcessorApexProcessorTokenCreateRequest
     */
    access_token: string;
    /**
     * The `account_id` value obtained from the `onSuccess` callback in Link
     * @type {string}
     * @memberof ProcessorApexProcessorTokenCreateRequest
     */
    account_id: string;
}
/**
 *
 * @export
 * @interface ProcessorAuthGetRequest
 */
export interface ProcessorAuthGetRequest {
    /**
     * Your Plaid API `client_id`.
     * @type {string}
     * @memberof ProcessorAuthGetRequest
     */
    client_id: string;
    /**
     * Your Plaid API `secret`.
     * @type {string}
     * @memberof ProcessorAuthGetRequest
     */
    secret: string;
    /**
     * The processor token obtained from the Plaid integration partner. Processor tokens are in the format: `processor-<environment>-<identifier>`
     * @type {string}
     * @memberof ProcessorAuthGetRequest
     */
    processor_token: string;
}
/**
 *
 * @export
 * @interface ProcessorAuthGetResponse
 */
export interface ProcessorAuthGetResponse {
    /**
     * A unique identifier for the request, which can be used for troubleshooting. This identifier, like all Plaid identifiers, is case sensitive.
     * @type {string}
     * @memberof ProcessorAuthGetResponse
     */
    request_id?: string;
    /**
     *
     * @type {ProcessorAuthGetResponseNumbers}
     * @memberof ProcessorAuthGetResponse
     */
    numbers?: ProcessorAuthGetResponseNumbers;
    /**
     *
     * @type {Account}
     * @memberof ProcessorAuthGetResponse
     */
    account?: Account;
}
/**
 * An object containing identifying numbers used for making electronic transfers to and from the `accounts`. The identifying number type (ACH, EFT, IBAN, or BACS) used will depend on the country of the account. An account may have more than one number type. If a particular identifying number type is not used by any `accounts` for which auth data has been requested, the array for that type will be empty.
 * @export
 * @interface ProcessorAuthGetResponseNumbers
 */
export interface ProcessorAuthGetResponseNumbers {
    /**
     * An array of ACH numbers identifying accounts
     * @type {Array<NumbersACH>}
     * @memberof ProcessorAuthGetResponseNumbers
     */
    ach?: Array<NumbersACH>;
    /**
     * An array of EFT numbers identifying accounts
     * @type {Array<NumbersEFT>}
     * @memberof ProcessorAuthGetResponseNumbers
     */
    eft?: Array<NumbersEFT>;
    /**
     * An array of IBAN numbers identifying accounts
     * @type {Array<NumbersInternational>}
     * @memberof ProcessorAuthGetResponseNumbers
     */
    international?: Array<NumbersInternational>;
    /**
     * An array of BACS numbers identifying accounts
     * @type {Array<NumbersBACS>}
     * @memberof ProcessorAuthGetResponseNumbers
     */
    bacs?: Array<NumbersBACS>;
}
/**
 *
 * @export
 * @interface ProcessorBalanceGetRequest
 */
export interface ProcessorBalanceGetRequest {
    /**
     * Your Plaid API `client_id`.
     * @type {string}
     * @memberof ProcessorBalanceGetRequest
     */
    client_id: string;
    /**
     * Your Plaid API `secret`.
     * @type {string}
     * @memberof ProcessorBalanceGetRequest
     */
    secret: string;
    /**
     * The processor token obtained from the Plaid integration partner. Processor tokens are in the format: `processor-<environment>-<identifier>`
     * @type {string}
     * @memberof ProcessorBalanceGetRequest
     */
    processor_token: string;
}
/**
 *
 * @export
 * @interface ProcessorBalanceGetResponse
 */
export interface ProcessorBalanceGetResponse {
    /**
     *
     * @type {Account}
     * @memberof ProcessorBalanceGetResponse
     */
    account?: Account;
    /**
     * A unique identifier for the request, which can be used for troubleshooting. This identifier, like all Plaid identifiers, is case sensitive.
     * @type {string}
     * @memberof ProcessorBalanceGetResponse
     */
    request_id?: string;
}
/**
 *
 * @export
 * @interface ProcessorIdentityGetRequest
 */
export interface ProcessorIdentityGetRequest {
    /**
     * Your Plaid API `client_id`.
     * @type {string}
     * @memberof ProcessorIdentityGetRequest
     */
    client_id: string;
    /**
     * Your Plaid API `secret`.
     * @type {string}
     * @memberof ProcessorIdentityGetRequest
     */
    secret: string;
    /**
     * The processor token obtained from the Plaid integration partner. Processor tokens are in the format: `processor-<environment>-<identifier>`
     * @type {string}
     * @memberof ProcessorIdentityGetRequest
     */
    processor_token: string;
}
/**
 *
 * @export
 * @interface ProcessorIdentityGetResponse
 */
export interface ProcessorIdentityGetResponse {
    /**
     *
     * @type {Account}
     * @memberof ProcessorIdentityGetResponse
     */
    account?: Account;
    /**
     * A unique identifier for the request, which can be used for troubleshooting. This identifier, like all Plaid identifiers, is case sensitive.
     * @type {string}
     * @memberof ProcessorIdentityGetResponse
     */
    request_id?: string;
}
/**
 *
 * @export
 * @interface ProcessorStripeBankAccountTokenCreateRequest
 */
export interface ProcessorStripeBankAccountTokenCreateRequest {
    /**
     * Your Plaid API `client_id`.
     * @type {string}
     * @memberof ProcessorStripeBankAccountTokenCreateRequest
     */
    client_id: string;
    /**
     * Your Plaid API `secret`.
     * @type {string}
     * @memberof ProcessorStripeBankAccountTokenCreateRequest
     */
    secret: string;
    /**
     * The access token associated with the Item data is being requested for.
     * @type {string}
     * @memberof ProcessorStripeBankAccountTokenCreateRequest
     */
    access_token: string;
    /**
     * The `account_id` value obtained from the `onSuccess` callback in Link
     * @type {string}
     * @memberof ProcessorStripeBankAccountTokenCreateRequest
     */
    account_id: string;
}
/**
 *
 * @export
 * @interface ProcessorStripeBankAccountTokenCreateResponse
 */
export interface ProcessorStripeBankAccountTokenCreateResponse {
    /**
     * A token that can be sent to Stripe for use in making API calls to Plaid
     * @type {string}
     * @memberof ProcessorStripeBankAccountTokenCreateResponse
     */
    stripe_bank_account_token?: string;
    /**
     * A unique identifier for the request, which can be used for troubleshooting. This identifier, like all Plaid identifiers, is case sensitive.
     * @type {string}
     * @memberof ProcessorStripeBankAccountTokenCreateResponse
     */
    request_id?: string;
}
/**
 *
 * @export
 * @interface ProcessorTokenCreateRequest
 */
export interface ProcessorTokenCreateRequest {
    /**
     * Your Plaid API `client_id`.
     * @type {string}
     * @memberof ProcessorTokenCreateRequest
     */
    client_id: string;
    /**
     * Your Plaid API `secret`.
     * @type {string}
     * @memberof ProcessorTokenCreateRequest
     */
    secret: string;
    /**
     * The access token associated with the Item data is being requested for.
     * @type {string}
     * @memberof ProcessorTokenCreateRequest
     */
    access_token: string;
    /**
     * The `account_id` value obtained from the `onSuccess` callback in Link
     * @type {string}
     * @memberof ProcessorTokenCreateRequest
     */
    account_id: string;
    /**
     * The processor you are integrating with. Valid values are `\"achq\"`, `\"drivewealth\"`, `\"dwolla\"`, `\"galileo\"`, \"`interactive_brokers`\", `\"modern_treasury\"`, `\"ocrolus\"`, `\"paypayapay\"`, `\"prime_trust\"`, `\"velox\"`, `\"vesta\"`, `\"vopay\"`
     * @type {string}
     * @memberof ProcessorTokenCreateRequest
     */
    processor: string;
}
/**
 *
 * @export
 * @interface ProcessorTokenCreateResponse
 */
export interface ProcessorTokenCreateResponse {
    /**
     * The `processor_token` that can then be used by the Plaid partner to make API requests
     * @type {string}
     * @memberof ProcessorTokenCreateResponse
     */
    processor_token?: string;
    /**
     * A unique identifier for the request, which can be used for troubleshooting. This identifier, like all Plaid identifiers, is case sensitive.
     * @type {string}
     * @memberof ProcessorTokenCreateResponse
     */
    request_id?: string;
}
/**
 * A representation of the status health of a request type. Auth requests, Balance requests, Identity requests, Transactions updates, and Item logins each have their own status object.
 * @export
 * @interface ProductStatus
 */
export interface ProductStatus {
    /**
     * One of the following three values: `HEALTHY`: the majority of requests are successful `DEGRADED`: only some requests are successful `DOWN`: all requests are failing
     * @type {string}
     * @memberof ProductStatus
     */
    status?: string;
    /**
     * ISO 8601 formatted timestamp of the last status change for the institution.
     * @type {string}
     * @memberof ProductStatus
     */
    last_status_change?: string;
    /**
     *
     * @type {ProductStatusBreakdown}
     * @memberof ProductStatus
     */
    breakdown?: ProductStatusBreakdown;
}
/**
 * A detailed breakdown of the institution\'s performance for a request type. The values for `success`, `error_plaid`, and `error_institution` sum to 1.
 * @export
 * @interface ProductStatusBreakdown
 */
export interface ProductStatusBreakdown {
    /**
     * The percentage of login attempts that are successful, expressed as a decimal.
     * @type {number}
     * @memberof ProductStatusBreakdown
     */
    success?: number;
    /**
     * The percentage of logins that are failing due to an internal Plaid issue, expressed as a decimal.
     * @type {number}
     * @memberof ProductStatusBreakdown
     */
    error_plaid?: number;
    /**
     * The percentage of logins that are failing due to an issue in the institution\'s system, expressed as a decimal.
     * @type {number}
     * @memberof ProductStatusBreakdown
     */
    error_institution?: number;
    /**
     * One of `NORMAL`, `DELAYED`, or `STOPPED`. The `refresh_interval` may be `DELAYED` or `STOPPED` even when the success rate is high.  This value is only returned for Transactions status breakdowns.
     * @type {string}
     * @memberof ProductStatusBreakdown
     */
    refresh_interval?: string | null;
}
/**
 * The request was flagged by Plaid\'s fraud system, and requires additional verification to ensure they are not a bot.
 * @export
 * @interface RecaptchaRequiredError
 */
export interface RecaptchaRequiredError {
    /**
     * RECAPTCHA_ERROR
     * @type {string}
     * @memberof RecaptchaRequiredError
     */
    error_type?: string;
    /**
     * RECAPTCHA_REQUIRED
     * @type {string}
     * @memberof RecaptchaRequiredError
     */
    error_code?: string;
    /**
     *
     * @type {string}
     * @memberof RecaptchaRequiredError
     */
    display_message?: string;
    /**
     * 400
     * @type {string}
     * @memberof RecaptchaRequiredError
     */
    http_code?: string;
    /**
     * Your user will be prompted to solve a Google reCAPTCHA challenge in the Link Recaptcha pane. If they solve the challenge successfully, the user\'s request is resubmitted and they are directed to the next Item creation step.
     * @type {string}
     * @memberof RecaptchaRequiredError
     */
    link_user_experience?: string;
    /**
     * Plaid\'s fraud system detects abusive traffic and considers a variety of parameters throughout Item creation requests. When a request is considered risky or possibly fraudulent, Link presents a reCAPTCHA for the user to solve.
     * @type {string}
     * @memberof RecaptchaRequiredError
     */
    common_causes?: string;
    /**
     * Link will automatically guide your user through reCAPTCHA verification. As a general rule, we recommend instrumenting basic fraud monitoring to detect and protect your website from spam and abuse.  If your user cannot verify their session, please submit a Support ticket with the following identifiers: `link_session_id` or `request_id`
     * @type {string}
     * @memberof RecaptchaRequiredError
     */
    troubleshooting_steps?: string;
}
/**
 *
 * @export
 * @interface SandboxItemFireWebhookRequest
 */
export interface SandboxItemFireWebhookRequest {
    /**
     * Your Plaid API `client_id`.
     * @type {string}
     * @memberof SandboxItemFireWebhookRequest
     */
    client_id: string;
    /**
     * Your Plaid API `secret`.
     * @type {string}
     * @memberof SandboxItemFireWebhookRequest
     */
    secret: string;
    /**
     * The access token associated with the Item data is being requested for.
     * @type {string}
     * @memberof SandboxItemFireWebhookRequest
     */
    access_token: string;
    /**
     * The following values for `webhook_code` are supported:  * `DEFAULT_UPDATE`
     * @type {string}
     * @memberof SandboxItemFireWebhookRequest
     */
    webhook_code: SandboxItemFireWebhookRequestWebhookCodeEnum;
}
/**
    * @export
    * @enum {string}
    */
export declare enum SandboxItemFireWebhookRequestWebhookCodeEnum {
    DEFAULTUPDATE = "DEFAULT_UPDATE"
}
/**
 *
 * @export
 * @interface SandboxItemFireWebhookResponse
 */
export interface SandboxItemFireWebhookResponse {
    /**
     * Value is `true`  if the test` webhook_code`  was successfully fired.
     * @type {boolean}
     * @memberof SandboxItemFireWebhookResponse
     */
    webhook_fired?: boolean;
    /**
     * A unique identifier for the request, which can be used for troubleshooting. This identifier, like all Plaid identifiers, is case sensitive.
     * @type {string}
     * @memberof SandboxItemFireWebhookResponse
     */
    request_id?: string;
}
/**
 *
 * @export
 * @interface SandboxItemResetLoginRequest
 */
export interface SandboxItemResetLoginRequest {
    /**
     * Your Plaid API `client_id`.
     * @type {string}
     * @memberof SandboxItemResetLoginRequest
     */
    client_id: string;
    /**
     * Your Plaid API `secret`.
     * @type {string}
     * @memberof SandboxItemResetLoginRequest
     */
    secret: string;
    /**
     * The access token associated with the Item data is being requested for.
     * @type {string}
     * @memberof SandboxItemResetLoginRequest
     */
    access_token: string;
}
/**
 *
 * @export
 * @interface SandboxItemResetLoginResponse
 */
export interface SandboxItemResetLoginResponse {
    /**
     * `true` if the call succeeded
     * @type {boolean}
     * @memberof SandboxItemResetLoginResponse
     */
    reset_login?: boolean;
    /**
     * A unique identifier for the request, which can be used for troubleshooting. This identifier, like all Plaid identifiers, is case sensitive.
     * @type {string}
     * @memberof SandboxItemResetLoginResponse
     */
    request_id?: string;
}
/**
 *
 * @export
 * @interface SandboxItemSetVerificationStatusRequest
 */
export interface SandboxItemSetVerificationStatusRequest {
    /**
     * Your Plaid API `client_id`.
     * @type {string}
     * @memberof SandboxItemSetVerificationStatusRequest
     */
    client_id: string;
    /**
     * Your Plaid API `secret`.
     * @type {string}
     * @memberof SandboxItemSetVerificationStatusRequest
     */
    secret: string;
    /**
     * The access token associated with the Item data is being requested for.
     * @type {string}
     * @memberof SandboxItemSetVerificationStatusRequest
     */
    access_token: string;
    /**
     * The `account_id` of the account whose verification status is to be modified
     * @type {string}
     * @memberof SandboxItemSetVerificationStatusRequest
     */
    account_id: string;
    /**
     * The verification status to set the account to. One of `\"automatically_verified\"` or `\"verification_expired\"`.
     * @type {string}
     * @memberof SandboxItemSetVerificationStatusRequest
     */
    verification_status: string;
}
/**
 *
 * @export
 * @interface SandboxItemSetVerificationStatusResponse
 */
export interface SandboxItemSetVerificationStatusResponse {
    /**
     * A unique identifier for the request, which can be used for troubleshooting. This identifier, like all Plaid identifiers, is case sensitive.
     * @type {string}
     * @memberof SandboxItemSetVerificationStatusResponse
     */
    request_id?: string;
}
/**
 *
 * @export
 * @interface SandboxPublicTokenCreateRequest
 */
export interface SandboxPublicTokenCreateRequest {
    /**
     * Your `client_id`.
     * @type {string}
     * @memberof SandboxPublicTokenCreateRequest
     */
    client_id: string;
    /**
     * Your Plaid API secret.
     * @type {string}
     * @memberof SandboxPublicTokenCreateRequest
     */
    secret: string;
    /**
     * The ID of the institution the Item will be associated with
     * @type {string}
     * @memberof SandboxPublicTokenCreateRequest
     */
    institution_id: string;
    /**
     * The products to initially pull for the Item. May be any products that the specified `institution_id`  supports. This array may not be empty.
     * @type {Array<string>}
     * @memberof SandboxPublicTokenCreateRequest
     */
    initial_products: Array<string>;
    /**
     *
     * @type {SandboxPublicTokenCreateRequestOptions}
     * @memberof SandboxPublicTokenCreateRequest
     */
    options?: SandboxPublicTokenCreateRequestOptions;
}
/**
 * An optional set of options to be used when configuring the Item. If specified, must not be `null`.
 * @export
 * @interface SandboxPublicTokenCreateRequestOptions
 */
export interface SandboxPublicTokenCreateRequestOptions {
    /**
     * Specify a webhook to associate with the new Item.
     * @type {string}
     * @memberof SandboxPublicTokenCreateRequestOptions
     */
    webhook?: string;
    /**
     * Test username to use for the creation of the Sandbox Item. Default value is `user_good`.
     * @type {string}
     * @memberof SandboxPublicTokenCreateRequestOptions
     */
    override_username?: string;
    /**
     * Test password to use for the creation of the Sandbox Item. Default value is `pass_good`.
     * @type {string}
     * @memberof SandboxPublicTokenCreateRequestOptions
     */
    override_password?: string;
}
/**
 *
 * @export
 * @interface SandboxPublicTokenCreateResponse
 */
export interface SandboxPublicTokenCreateResponse {
    /**
     * A public token that can be exchanged for an access token using `/item/public_token/exchange`
     * @type {string}
     * @memberof SandboxPublicTokenCreateResponse
     */
    public_token?: string;
    /**
     * A unique identifier for the request, which can be used for troubleshooting. This identifier, like all Plaid identifiers, is case sensitive.
     * @type {string}
     * @memberof SandboxPublicTokenCreateResponse
     */
    request_id?: string;
}
/**
 * Contains details about a security
 * @export
 * @interface Security
 */
export interface Security {
    /**
     * A unique, Plaid-specific identifier for the security, used to associate securities with holdings. Like all Plaid identifiers, the `security_id` is case sensitive.
     * @type {string}
     * @memberof Security
     */
    security_id?: string;
    /**
     * 12-character ISIN, a globally unique securities identifier.
     * @type {string}
     * @memberof Security
     */
    isin?: string | null;
    /**
     * 9-character CUSIP, an identifier assigned to North American securities.
     * @type {string}
     * @memberof Security
     */
    cusip?: string | null;
    /**
     * 7-character SEDOL, an identifier assigned to securities in the UK.
     * @type {string}
     * @memberof Security
     */
    sedol?: string | null;
    /**
     * An identifier given to the security by the institution
     * @type {string}
     * @memberof Security
     */
    institution_security_id?: string | null;
    /**
     * If `institution_security_id` is present, this field indicates the Plaid `institution_id` of the institution to whom the identifier belongs.
     * @type {string}
     * @memberof Security
     */
    institution_id?: string | null;
    /**
     * In certain cases, Plaid will provide the ID of another security whose performance resembles this security, typically when the original security has low volume, or when a private security can be modeled with a publicly traded security.
     * @type {string}
     * @memberof Security
     */
    proxy_security_id?: string | null;
    /**
     * A descriptive name for the security, suitable for display.
     * @type {string}
     * @memberof Security
     */
    name?: string | null;
    /**
     * The securityâ€™s trading symbol for publicly traded securities, and otherwise a short identifier if available.
     * @type {string}
     * @memberof Security
     */
    ticker_symbol?: string | null;
    /**
     * Indicates that a security is a highly liquid asset and can be treated like cash.
     * @type {boolean}
     * @memberof Security
     */
    is_cash_equivalent?: boolean;
    /**
     * The security type of the holding. Valid security types are:  `cash`: Cash, currency, and money market funds  `derivative`: Options, warrants, and other derivative instruments  `equity`: Domestic and foreign equities  `etf`: Multi-asset exchange-traded investment funds  `fixed income`: Bonds and certificates of deposit (CDs)  `loan`: Loans and loan receivables.  `mutual fund`: Open- and closed-end vehicles pooling funds of multiple investors.  `other`: Unknown or other investment types
     * @type {string}
     * @memberof Security
     */
    type?: string;
    /**
     * Price of the security at the close of the previous trading session. `null` for non-public securities.
     * @type {number}
     * @memberof Security
     */
    close_price?: number | null;
    /**
     * Date for which `close_price` is accurate. Always `null` if `close_price` is `null`.
     * @type {string}
     * @memberof Security
     */
    close_price_as_of?: string | null;
    /**
     * The ISO-4217 currency code of the price given. Always `null` if `unofficial_currency_code` is non-`null`.
     * @type {string}
     * @memberof Security
     */
    iso_currency_code?: string | null;
    /**
     * The unofficial currency code associated with the security. Always `null` if `iso_currency_code` is non-`null`. Unofficial currency codes are used for currencies that do not have official ISO currency codes, such as cryptocurrencies and the currencies of certain countries.  See the [currency code schema](/docs-beta/api/accounts#currency-code-schema) for a full listing of supported `iso_currency_code`s.
     * @type {string}
     * @memberof Security
     */
    unofficial_currency_code?: string | null;
}
/**
 * The address of the student loan servicer.
 * @export
 * @interface ServicerAddressData
 */
export interface ServicerAddressData {
    /**
     * The full city name
     * @type {string}
     * @memberof ServicerAddressData
     */
    city: string | null;
    /**
     * The region or state Example: `\"NC\"`
     * @type {string}
     * @memberof ServicerAddressData
     */
    region?: string | null;
    /**
     * The full street address Example: `\"564 Main Street, APT 15\"` nullable: true
     * @type {string}
     * @memberof ServicerAddressData
     */
    street: string;
    /**
     * The postal code
     * @type {string}
     * @memberof ServicerAddressData
     */
    postal_code?: string | null;
    /**
     * The ISO 3166-1 alpha-2 country code
     * @type {string}
     * @memberof ServicerAddressData
     */
    country: string | null;
}
/**
 * The schema below describes the various `types` and corresponding `subtypes` that Plaid recognizes and reports for financial institution accounts.
 * @export
 * @interface StandaloneAccountType
 */
export interface StandaloneAccountType {
    /**
     * An account type holding cash, in which funds are deposited. Supported products for `depository` accounts are: Auth, Balance, Transactions, Identity, Payment Initiation, and Assets.
     * @type {string}
     * @memberof StandaloneAccountType
     */
    depository?: string;
    /**
     * A credit card type account. Supported products for `credit` accounts are: Balance, Transactions, Identity, and Liabilities.
     * @type {string}
     * @memberof StandaloneAccountType
     */
    credit?: string;
    /**
     * A loan type account. Supported products for `loan` accounts are: Balance, Liabilities, and Transactions.
     * @type {string}
     * @memberof StandaloneAccountType
     */
    loan?: string;
    /**
     * An investment account. Supported products for `investment` accounts are: Balance and Investments.
     * @type {string}
     * @memberof StandaloneAccountType
     */
    investment?: string;
    /**
     * Other or unknown account type. Supported products for `other` accounts are: Balance, Transactions, Identity, and Assets.
     * @type {string}
     * @memberof StandaloneAccountType
     */
    other?: string;
}
/**
 * The following currency codes are supported by Plaid.
 * @export
 * @interface StandaloneCurrencyCodeList
 */
export interface StandaloneCurrencyCodeList {
    /**
     * Plaid supports all ISO 4217 currency codes.
     * @type {string}
     * @memberof StandaloneCurrencyCodeList
     */
    iso_currency_code?: string;
    /**
     * List of unofficial currency codes
     * @type {string}
     * @memberof StandaloneCurrencyCodeList
     */
    unofficial_currency_code?: string;
}
/**
 * Valid subtypes for Investment transaction subtypes. Note that transactions representing inflow of cash will appear as negative amounts, outflow of cash will appear as positive amounts.
 * @export
 * @interface StandaloneInvestmentTransactionSubtype
 */
export interface StandaloneInvestmentTransactionSubtype {
    /**
     * Fees paid for account maintenance
     * @type {string}
     * @memberof StandaloneInvestmentTransactionSubtype
     */
    account_fee?: string;
    /**
     * Assignment of short option holding
     * @type {string}
     * @memberof StandaloneInvestmentTransactionSubtype
     */
    assignment?: string;
    /**
     * Purchase to open or increase a position
     * @type {string}
     * @memberof StandaloneInvestmentTransactionSubtype
     */
    buy?: string;
    /**
     * Purchase to close a short position
     * @type {string}
     * @memberof StandaloneInvestmentTransactionSubtype
     */
    buy_to_cover?: string;
    /**
     * Inflow of assets into a tax-advantaged account
     * @type {string}
     * @memberof StandaloneInvestmentTransactionSubtype
     */
    contribution?: string;
    /**
     * Inflow of cash into an account
     * @type {string}
     * @memberof StandaloneInvestmentTransactionSubtype
     */
    deposit?: string;
    /**
     * Outflow of assets from a tax-advantaged account
     * @type {string}
     * @memberof StandaloneInvestmentTransactionSubtype
     */
    distribution?: string;
    /**
     * Inflow of cash from a dividend
     * @type {string}
     * @memberof StandaloneInvestmentTransactionSubtype
     */
    dividend?: string;
    /**
     * Purchase using proceeds from a cash dividend
     * @type {string}
     * @memberof StandaloneInvestmentTransactionSubtype
     */
    dividend_reinvestment?: string;
    /**
     * Exercise of an option or warrant contract
     * @type {string}
     * @memberof StandaloneInvestmentTransactionSubtype
     */
    exercise?: string;
    /**
     * Expiration of an option or warrant contract
     * @type {string}
     * @memberof StandaloneInvestmentTransactionSubtype
     */
    expire?: string;
    /**
     * Fees paid for administration of a mutual fund or other pooled investment vehicle
     * @type {string}
     * @memberof StandaloneInvestmentTransactionSubtype
     */
    fund_fee?: string;
    /**
     * Inflow of cash from interest
     * @type {string}
     * @memberof StandaloneInvestmentTransactionSubtype
     */
    interest?: string;
    /**
     * Inflow of cash from interest receivable
     * @type {string}
     * @memberof StandaloneInvestmentTransactionSubtype
     */
    interest_receivable?: string;
    /**
     * Purchase using proceeds from a cash interest payment
     * @type {string}
     * @memberof StandaloneInvestmentTransactionSubtype
     */
    interest_reinvestment?: string;
    /**
     * Fees paid for legal charges or services
     * @type {string}
     * @memberof StandaloneInvestmentTransactionSubtype
     */
    legal_fee?: string;
    /**
     * Inflow of cash related to payment on a loan
     * @type {string}
     * @memberof StandaloneInvestmentTransactionSubtype
     */
    loan_payment?: string;
    /**
     * Long-term capital gain received as cash
     * @type {string}
     * @memberof StandaloneInvestmentTransactionSubtype
     */
    long_term_capital_gain?: string;
    /**
     * Purchase using long-term capital gain cash proceeds
     * @type {string}
     * @memberof StandaloneInvestmentTransactionSubtype
     */
    long_term_capital_gain_reinvestment?: string;
    /**
     * Fees paid for investment management of a mutual fund or other pooled investment vehicle
     * @type {string}
     * @memberof StandaloneInvestmentTransactionSubtype
     */
    management_fee?: string;
    /**
     * Fees paid for maintaining margin debt
     * @type {string}
     * @memberof StandaloneInvestmentTransactionSubtype
     */
    margin_expense?: string;
    /**
     * Stock exchanged at a pre-defined ratio as part of a merger between companies
     * @type {string}
     * @memberof StandaloneInvestmentTransactionSubtype
     */
    merger?: string;
    /**
     * Fee associated with various account or holding actions
     * @type {string}
     * @memberof StandaloneInvestmentTransactionSubtype
     */
    miscellaneous_fee?: string;
    /**
     * Inflow of cash from a non-qualified dividend
     * @type {string}
     * @memberof StandaloneInvestmentTransactionSubtype
     */
    non_qualified_dividend?: string;
    /**
     * Taxes paid on behalf of the investor for non-residency in investment jurisdiction
     * @type {string}
     * @memberof StandaloneInvestmentTransactionSubtype
     */
    non_resident_tax?: string;
    /**
     * Pending inflow of cash
     * @type {string}
     * @memberof StandaloneInvestmentTransactionSubtype
     */
    pending_credit?: string;
    /**
     * Pending outflow of cash
     * @type {string}
     * @memberof StandaloneInvestmentTransactionSubtype
     */
    pending_debit?: string;
    /**
     * Inflow of cash from a qualified dividend
     * @type {string}
     * @memberof StandaloneInvestmentTransactionSubtype
     */
    qualified_dividend?: string;
    /**
     * Rebalancing transaction (buy or sell) with no net impact to value in the account
     * @type {string}
     * @memberof StandaloneInvestmentTransactionSubtype
     */
    rebalance?: string;
    /**
     * Repayment of loan principal
     * @type {string}
     * @memberof StandaloneInvestmentTransactionSubtype
     */
    return_of_principal?: string;
    /**
     * Sell to close or decrease an existing holding
     * @type {string}
     * @memberof StandaloneInvestmentTransactionSubtype
     */
    sell?: string;
    /**
     * Sell to open a short position
     * @type {string}
     * @memberof StandaloneInvestmentTransactionSubtype
     */
    sell_short?: string;
    /**
     * Short-term capital gain received as cash
     * @type {string}
     * @memberof StandaloneInvestmentTransactionSubtype
     */
    short_term_capital_gain?: string;
    /**
     * Purchase using short-term capital gain cash proceeds
     * @type {string}
     * @memberof StandaloneInvestmentTransactionSubtype
     */
    short_term_capital_gain_reinvestment?: string;
    /**
     * Inflow of stock from spin-off transaction of an existing holding
     * @type {string}
     * @memberof StandaloneInvestmentTransactionSubtype
     */
    spin_off?: string;
    /**
     * Inflow of stock from a forward split of an existing holding
     * @type {string}
     * @memberof StandaloneInvestmentTransactionSubtype
     */
    split?: string;
    /**
     * Inflow of stock from a distribution
     * @type {string}
     * @memberof StandaloneInvestmentTransactionSubtype
     */
    stock_distribution?: string;
    /**
     * Taxes paid on behalf of the investor
     * @type {string}
     * @memberof StandaloneInvestmentTransactionSubtype
     */
    tax?: string;
    /**
     * Taxes withheld on behalf of the customer
     * @type {string}
     * @memberof StandaloneInvestmentTransactionSubtype
     */
    tax_withheld?: string;
    /**
     * Movement of assets into or out of an account
     * @type {string}
     * @memberof StandaloneInvestmentTransactionSubtype
     */
    transfer?: string;
    /**
     * Fees incurred for transfer of a holding or account
     * @type {string}
     * @memberof StandaloneInvestmentTransactionSubtype
     */
    transfer_fee?: string;
    /**
     * Fees related to adminstration of a trust account
     * @type {string}
     * @memberof StandaloneInvestmentTransactionSubtype
     */
    trust_fee?: string;
    /**
     * Unqualified capital gain received as cash
     * @type {string}
     * @memberof StandaloneInvestmentTransactionSubtype
     */
    unqualified_gain?: string;
    /**
     * Outflow of cash from an account
     * @type {string}
     * @memberof StandaloneInvestmentTransactionSubtype
     */
    withdrawal?: string;
}
/**
 * Valid values for investment transaction types
 * @export
 * @interface StandaloneInvestmentTransactionType
 */
export interface StandaloneInvestmentTransactionType {
    /**
     * Buying an investment
     * @type {string}
     * @memberof StandaloneInvestmentTransactionType
     */
    buy?: string;
    /**
     * Selling an investment
     * @type {string}
     * @memberof StandaloneInvestmentTransactionType
     */
    sell?: string;
    /**
     * A cancellation of a pending transaction
     * @type {string}
     * @memberof StandaloneInvestmentTransactionType
     */
    cancel?: string;
    /**
     * Activity that modifies a cash position
     * @type {string}
     * @memberof StandaloneInvestmentTransactionType
     */
    cash?: string;
    /**
     * Fees on the account, e.g. commission, bookkeeping, options-related.
     * @type {string}
     * @memberof StandaloneInvestmentTransactionType
     */
    fee?: string;
    /**
     * Activity which modifies a position, but not through buy/sell activity e.g. options exercise, portfolio transfer
     * @type {string}
     * @memberof StandaloneInvestmentTransactionType
     */
    transfer?: string;
}
/**
 * Contains details about a student loan account
 * @export
 * @interface StudentLoan
 */
export interface StudentLoan {
    /**
     * The ID of the account that this liability belongs to.
     * @type {string}
     * @memberof StudentLoan
     */
    account_id?: string | null;
    /**
     * The account number of the loan.
     * @type {string}
     * @memberof StudentLoan
     */
    account_number?: string | null;
    /**
     * The dates on which loaned funds were disbursed or will be disbursed. These are often in the past. Dates are returned in an ISO 8601 format (YYYY-MM-DD).
     * @type {Array<string>}
     * @memberof StudentLoan
     */
    disbursement_dates?: Array<string> | null;
    /**
     * The date when the student loan is expected to be paid off. Availability for this field is limited. Dates are returned in an ISO 8601 format (YYYY-MM-DD).
     * @type {string}
     * @memberof StudentLoan
     */
    expected_payoff_date?: string | null;
    /**
     * The guarantor of the student loan.
     * @type {string}
     * @memberof StudentLoan
     */
    guarantor?: string | null;
    /**
     * The interest rate on the loan as a percentage.
     * @type {number}
     * @memberof StudentLoan
     */
    interest_rate_percentage?: number;
    /**
     * `true` if a payment is currently overdue. Availability for this field is limited.
     * @type {boolean}
     * @memberof StudentLoan
     */
    is_overdue?: boolean | null;
    /**
     * The amount of the last payment.
     * @type {number}
     * @memberof StudentLoan
     */
    last_payment_amount?: number | null;
    /**
     * The date of the last payment. Dates are returned in an ISO 8601 format (YYYY-MM-DD).
     * @type {string}
     * @memberof StudentLoan
     */
    last_payment_date?: string | null;
    /**
     * The outstanding balance on the last statement. This field could also be interpreted as the next payment due. Availability for this field is limited.
     * @type {number}
     * @memberof StudentLoan
     */
    last_statement_balance?: number | null;
    /**
     * The date of the last statement. Dates are returned in an ISO 8601 format (YYYY-MM-DD).
     * @type {string}
     * @memberof StudentLoan
     */
    last_statement_issue_date?: string | null;
    /**
     * The type of loan, e.g., \"Consolidation Loans\".
     * @type {string}
     * @memberof StudentLoan
     */
    loan_name?: string | null;
    /**
     *
     * @type {StudentLoanStatus}
     * @memberof StudentLoan
     */
    loan_status?: StudentLoanStatus;
    /**
     * The minimum payment due for the next billing cycle. There are some exceptions: Some institutions require a minimum payment across all loans associated with an account number. Our API presents that same minimum payment amount on each loan. The institutions that do this are: Great Lakes ( `ins_116861`), Firstmark (`ins_116295`), Commonbond Firstmark Services (ins_116950), Nelnet (`ins_116528`), EdFinancial Services (`ins_116304`), Granite State (`ins_116308`), and Oklahoma Student Loan Authority (`ins_116945`). Firstmark (`ins_116295` ) will display as $0 if there is an autopay program in effect.
     * @type {number}
     * @memberof StudentLoan
     */
    minimum_payment_amount?: number | null;
    /**
     * The due date for the next payment. The due date is `null` if a payment is not expected. A payment is not expected if `loan_status.type` is `deferment`, `in_school`, `consolidated`, `paid in full`, or `transferred`. Dates are returned in an ISO 8601 format (YYYY-MM-DD).
     * @type {string}
     * @memberof StudentLoan
     */
    next_payment_due_date?: string | null;
    /**
     * The date on which the loan was initially lent. Dates are returned in an ISO 8601 format (YYYY-MM-DD).
     * @type {string}
     * @memberof StudentLoan
     */
    origination_date?: string | null;
    /**
     * The original principal balance of the loan.
     * @type {number}
     * @memberof StudentLoan
     */
    origination_principal_amount?: number | null;
    /**
     * The total dollar amount of the accrued interest balance. For Sallie Mae ( `ins_116944`), this amount is included in the current balance of the loan, so this field will return as `null`.
     * @type {number}
     * @memberof StudentLoan
     */
    outstanding_interest_amount?: number | null;
    /**
     * The relevant account number that should be used to reference this loan for payments. In the majority of cases, `payment_reference_number` will match a`ccount_number,` but in some institutions, such as Great Lakes (`ins_116861`), it will be different.
     * @type {string}
     * @memberof StudentLoan
     */
    payment_reference_number?: string | null;
    /**
     *
     * @type {PSLFStatus}
     * @memberof StudentLoan
     */
    pslf_status?: PSLFStatus;
    /**
     *
     * @type {StudentRepaymentPlan}
     * @memberof StudentLoan
     */
    repayment_plan?: StudentRepaymentPlan;
    /**
     * The sequence number of the student loan. Heartland ECSI (`ins_116948`) does not make this field available.
     * @type {string}
     * @memberof StudentLoan
     */
    sequence_number?: string | null;
    /**
     *
     * @type {ServicerAddressData}
     * @memberof StudentLoan
     */
    servicer_address?: ServicerAddressData;
    /**
     * The year to date (YTD) interest paid. Availability for this field is limited.
     * @type {number}
     * @memberof StudentLoan
     */
    ytd_interest_paid?: number | null;
    /**
     * The year to date (YTD) principal paid. Availability for this field is limited.
     * @type {number}
     * @memberof StudentLoan
     */
    ytd_principal_paid?: number | null;
}
/**
 * Student loan repayment information used to configure Sandbox test data for the Liabilities product
 * @export
 * @interface StudentLoanRepaymentModel
 */
export interface StudentLoanRepaymentModel {
    /**
     * The only currently supported value for this field is `standard`.
     * @type {string}
     * @memberof StudentLoanRepaymentModel
     */
    type: string;
    /**
     * Configures the number of months before repayment starts.
     * @type {number}
     * @memberof StudentLoanRepaymentModel
     */
    non_repayment_months: number;
    /**
     * Configures the number of months of repayments before the loan is paid off.
     * @type {number}
     * @memberof StudentLoanRepaymentModel
     */
    repayment_months: number;
}
/**
 * An object representing the status of the student loan
 * @export
 * @interface StudentLoanStatus
 */
export interface StudentLoanStatus {
    /**
     * The date until which the loan will be in its current status. Dates are returned in an ISO 8601 format (YYYY-MM-DD).
     * @type {string}
     * @memberof StudentLoanStatus
     */
    end_date?: string | null;
    /**
     * Possible values: `\"cancelled\"`, `\"charged off\"`, `\"claim\"`, `\"consolidated\"`, `\"deferment\"`, `\"delinquent\"`, `\"discharged\"`, `\"extension\"`, `\"forbearance\"`, `\"in grace\"`, `\"in military\"`, `\"in school\"`, `\"not fully disbursed\"`, `\"other\"`, `\"paid in full\"`, `\"refunded\"`, `\"repayment\"`, or `transferred`.
     * @type {string}
     * @memberof StudentLoanStatus
     */
    type?: string | null;
}
/**
 * An object representing the repayment plan for the student loan
 * @export
 * @interface StudentRepaymentPlan
 */
export interface StudentRepaymentPlan {
    /**
     * The description of the repayment plan as provided by the servicer.
     * @type {string}
     * @memberof StudentRepaymentPlan
     */
    description?: string | null;
    /**
     * Possible values are: `\"extended graduated\"`, `\"extended standard\"`, `\"graduated\"`, `\"income-contingent repayment\"`, `\"income-based repayment\"`, `\"interest only\"`, `\"other\"`, `\"pay as you earn\"`, `\"revised pay as you earn\"`, or `\"standard\"`.
     * @type {string}
     * @memberof StudentRepaymentPlan
     */
    type?: string | null;
}
/**
 * A representation of a transaction
 * @export
 * @interface Transaction
 */
export interface Transaction {
    /**
     * Please use the `payment_channel` field, `transaction_type` will be deprecated in the future.  `digital:` transactions that took place online.  `place:` transactions that were made at a physical location.  `special:` transactions that relate to banks, e.g. fees or deposits.  `unresolved:` transactions that do not fit into the other three types.
     * @type {string}
     * @memberof Transaction
     * @deprecated
     */
    transaction_type?: string;
    /**
     * The unique ID of the transaction. Like all Plaid identifiers, the `transaction_id` is case sensitive.
     * @type {string}
     * @memberof Transaction
     */
    transaction_id?: string;
    /**
     * The name of the account owner. This field is not typically populated and only relevant when dealing with sub-accounts.
     * @type {string}
     * @memberof Transaction
     */
    account_owner?: string | null;
    /**
     * The ID of a posted transaction\'s associated pending transaction, where applicable.
     * @type {string}
     * @memberof Transaction
     */
    pending_transaction_id?: string | null;
    /**
     * When `true`, identifies the transaction as pending or unsettled. Pending transaction details (name, type, amount, category ID) may change before they are settled.
     * @type {boolean}
     * @memberof Transaction
     */
    pending?: boolean;
    /**
     * The channel used to make a payment. Possible values are:  `online:` transactions that took place online.  `in store:` transactions that were made at a physical location.  `other:` transactions that relate to banks, e.g. fees or deposits.  This field replaces the `transaction_type` field.
     * @type {string}
     * @memberof Transaction
     */
    payment_channel?: string;
    /**
     *
     * @type {PaymentMeta}
     * @memberof Transaction
     */
    payment_meta?: PaymentMeta;
    /**
     * The merchant name or transaction description.   If the `transaction` object was returned by a Transactions endpoint such as `/transactions/get`, this field will always appear. If the `transaction` object was returned by an Assets endpoint such as `/assets/get/` or `/assets/pdf/get`, this field will only appear in an Asset Report with Insights.
     * @type {string}
     * @memberof Transaction
     */
    name?: string;
    /**
     * The merchant name, as extracted by Plaid from the `name` field.
     * @type {string}
     * @memberof Transaction
     */
    merchant_name?: string | null;
    /**
     *
     * @type {Location}
     * @memberof Transaction
     */
    location?: Location;
    /**
     * The date that the transaction was authorized. Dates are returned in an ISO 8601 format ( `YYYY-MM-DD` ).
     * @type {string}
     * @memberof Transaction
     */
    authorized_date?: string | null;
    /**
     * For pending transactions, the date that the transaction occurred; for posted transactions, the date that the transaction posted. Both dates are returned in an ISO 8601 format ( `YYYY-MM-DD` ).
     * @type {string}
     * @memberof Transaction
     */
    date?: string;
    /**
     * The ID of the category to which this transaction belongs. See [Categories](https://plaid.com/docs/#category-overview).   If the `transaction` object was returned by an Assets endpoint such as `/assets/get/` or `/assets/pdf/get`, this field will only appear in an Asset Report with Insights.
     * @type {string}
     * @memberof Transaction
     */
    category_id?: string;
    /**
     * A hierarchical array of the categories to which this transaction belongs. See [Categories](https://plaid.com/docs/#category-overview).   If the `transaction` object was returned by an Assets endpoint such as `/assets/get/` or `/assets/pdf/get`, this field will only appear in an Asset Report with Insights.
     * @type {Array<string>}
     * @memberof Transaction
     */
    category?: Array<string> | null;
    /**
     * The unofficial currency code associated with the transaction. Always `null` if `iso_currency_code` is non-`null`. Unofficial currency codes are used for currencies that do not have official ISO currency codes, such as cryptocurrencies and the currencies of certain countries.  See the [currency code schema](/docs-beta/api/accounts#currency-code-schema) for a full listing of supported `iso_currency_code`s.
     * @type {string}
     * @memberof Transaction
     */
    unofficial_currency_code?: string | null;
    /**
     * The ISO-4217 currency code of the transaction. Always `null` if `unofficial_currency_code` is non-null.
     * @type {string}
     * @memberof Transaction
     */
    iso_currency_code?: string | null;
    /**
     * The settled value of the transaction, denominated in the account\'s currency, as stated in `iso_currency_code` or `unofficial_currency_code`. Positive values when money moves out of the account; negative values when money moves in. For example, debit card purchases are positive; credit card payments, direct deposits, and refunds are negative.
     * @type {number}
     * @memberof Transaction
     */
    amount?: number;
    /**
     * The ID of the account in which this transaction occurred.
     * @type {string}
     * @memberof Transaction
     */
    account_id?: string;
    /**
     *
     * @type {TransactionCode}
     * @memberof Transaction
     */
    transaction_code?: TransactionCode | null;
}
/**
 * An identifier classifying the transaction type.   This field is only populated for European institutions. For institutions in the US and Canada, this field is set to `null`.  `adjustment:` Bank adjustment `atm:` Cash deposit or withdrawal via an automated teller machine `bank charge:` Charge or fee levied by the institution `bill payment`: Payment of a bill `cash:` Cash deposit or withdrawal `cashback:` Cash withdrawal while making a debit card purchase `cheque:` Document ordering the payment of money to another person or organization `direct debit:` Automatic withdrawal of funds initiated by a third party at a regular interval `interest:` Interest earned or incurred `purchase:` Purchase made with a debit or credit card `standing order:` Payment instructed by the account holder to a third party at a regular interval `transfer:` Transfer of money between accounts
 * @export
 * @enum {string}
 */
export declare enum TransactionCode {
    Adjustment = "adjustment",
    Atm = "atm",
    BankCharge = "bank charge",
    BillPayment = "bill payment",
    Cash = "cash",
    Cashback = "cashback",
    Cheque = "cheque",
    DirectDebit = "direct debit",
    Interest = "interest",
    Purchase = "purchase",
    StandingOrder = "standing order",
    Transfer = "transfer"
}
/**
 * Data to populate as test transaction data. If not specified, random transactions will be generated instead.
 * @export
 * @interface TransactionOverride
 */
export interface TransactionOverride {
    /**
     * The date of the transaction, in ISO8601 (YYYY-MM-DD) format. Transaction dates in the past or present will result in posted transactions; transaction dates in the future will result in pending transactions. Transactions in Sandbox will move from pending to posted once their transaction date has been reached.
     * @type {string}
     * @memberof TransactionOverride
     */
    transaction_date: string;
    /**
     * The date the transaction posted, in ISO8601 (YYYY-MM-DD) format
     * @type {string}
     * @memberof TransactionOverride
     */
    posted_date: string;
    /**
     * The transaction amount. Can be negative.
     * @type {number}
     * @memberof TransactionOverride
     */
    amount: number;
    /**
     * The transaction description.
     * @type {string}
     * @memberof TransactionOverride
     */
    description: string;
    /**
     * The ISO-4217 format currency code for the transaction.
     * @type {string}
     * @memberof TransactionOverride
     */
    currency?: string;
}
/**
 *
 * @export
 * @interface TransactionsGetRequest
 */
export interface TransactionsGetRequest {
    /**
     * Your Plaid API `client_id`.
     * @type {string}
     * @memberof TransactionsGetRequest
     */
    client_id: string;
    /**
     *
     * @type {TransactionsGetRequestOptions}
     * @memberof TransactionsGetRequest
     */
    options?: TransactionsGetRequestOptions;
    /**
     * The access token associated with the Item data is being requested for
     * @type {string}
     * @memberof TransactionsGetRequest
     */
    access_token: string;
    /**
     * Your Plaid API secret
     * @type {string}
     * @memberof TransactionsGetRequest
     */
    secret: string;
    /**
     * The earliest date for which data should be returned. Dates should be formatted as YYYY-MM-DD.
     * @type {string}
     * @memberof TransactionsGetRequest
     */
    start_date: string;
    /**
     * The latest date for which data should be returned. Dates should be formatted as YYYY-MM-DD.
     * @type {string}
     * @memberof TransactionsGetRequest
     */
    end_date: string;
}
/**
 * Optional configuration options to be used with the request. If specified, `options` must not be `null`.
 * @export
 * @interface TransactionsGetRequestOptions
 */
export interface TransactionsGetRequestOptions {
    /**
     * A list of `account_ids` to retrieve for the Item  Note: An error will be returned if a provided `account_id` is not associated with the Item.
     * @type {Array<string>}
     * @memberof TransactionsGetRequestOptions
     */
    account_ids?: Array<string>;
    /**
     * The number of transactions to fetch. The maximum value of `count` is 500. The default value is 100.
     * @type {number}
     * @memberof TransactionsGetRequestOptions
     */
    count: number;
    /**
     * The number of transactions to skip. The default value is 0.
     * @type {number}
     * @memberof TransactionsGetRequestOptions
     */
    offset: number;
}
/**
 *
 * @export
 * @interface TransactionsGetResponse
 */
export interface TransactionsGetResponse {
    /**
     * An array containing the `accounts` associated with the Item for which transactions are being returned. Each transaction can be mapped to its corresponding account via the `account_id` field.
     * @type {Array<Account>}
     * @memberof TransactionsGetResponse
     */
    accounts?: Array<Account>;
    /**
     * An array containing transactions from the account. Transactions are returned in reverse chronological order, with the most recent at the beginning of the array. The maximum number of transactions returned is determined by the `count` parameter.
     * @type {Array<Transaction>}
     * @memberof TransactionsGetResponse
     */
    transactions?: Array<Transaction>;
    /**
     * The total number of transactions available within the date range specified. If `total_transactions` is larger than the size of the `transactions` array, more transactions are available and can be fetched via manipulating the `offset` parameter.
     * @type {number}
     * @memberof TransactionsGetResponse
     */
    total_transactions?: number;
    /**
     *
     * @type {Item}
     * @memberof TransactionsGetResponse
     */
    item?: Item;
    /**
     * A unique identifier for the request, which can be used for troubleshooting. This identifier, like all Plaid identifiers, is case sensitive.
     * @type {string}
     * @memberof TransactionsGetResponse
     */
    request_id?: string;
}
/**
 *
 * @export
 * @interface TransactionsRefreshRequest
 */
export interface TransactionsRefreshRequest {
    /**
     * Your Plaid API `client_id`.
     * @type {string}
     * @memberof TransactionsRefreshRequest
     */
    client_id: string;
    /**
     * The access token associated with the Item data is being requested for.
     * @type {string}
     * @memberof TransactionsRefreshRequest
     */
    access_token: string;
    /**
     * Your Plaid API `secret`.
     * @type {string}
     * @memberof TransactionsRefreshRequest
     */
    secret: string;
}
/**
 *
 * @export
 * @interface TransactionsRefreshResponse
 */
export interface TransactionsRefreshResponse {
    /**
     * A unique identifier for the request, which can be used for troubleshooting. This identifier, like all Plaid identifiers, is case sensitive.
     * @type {string}
     * @memberof TransactionsRefreshResponse
     */
    request_id?: string;
}
/**
 * Fired when transaction(s) for an Item are deleted. The deleted transaction IDs are included in the webhook payload. Plaid will typically check for deleted transaction data several times a day.
 * @export
 * @interface TransactionsRemovedWebhook
 */
export interface TransactionsRemovedWebhook {
    /**
     * `TRANSACTIONS`
     * @type {string}
     * @memberof TransactionsRemovedWebhook
     */
    webhook_type?: string;
    /**
     * `TRANSACTIONS_REMOVED`
     * @type {string}
     * @memberof TransactionsRemovedWebhook
     */
    webhook_code?: string;
    /**
     *
     * @type {Error}
     * @memberof TransactionsRemovedWebhook
     */
    error?: Error | null;
    /**
     * An array of `transaction_ids` corresponding to the removed transactions
     * @type {Array<string>}
     * @memberof TransactionsRemovedWebhook
     */
    removed_transactions?: Array<string>;
    /**
     * The `item_id` of the Item associated with this webhook, warning, or error
     * @type {string}
     * @memberof TransactionsRemovedWebhook
     */
    item_id?: string;
}
/**
 * Custom test accounts are configured with a JSON configuration object formulated according to the schema below. All fields are optional. Sending an empty object as a configuration will result in an account configured with random balances and transaction history.
 * @export
 * @interface UserCustomPassword
 */
export interface UserCustomPassword {
    /**
     * The version of the password schema to use, possible values are 1 or 2. The default value is 2. You should only specify 1 if you know it is necessary for your test suite.
     * @type {string}
     * @memberof UserCustomPassword
     */
    version?: string | null;
    /**
     * A seed, in the form of a string, that will be used to randomly generate account and transaction data, if this data is not specified using the `override_accounts` argument. If no seed is specified, the randomly generated data will be different each time.  Note that transactions data is generated relative to the Item\'s creation date. Different Items created on different dates with the same seed for transactions data will have different dates for the transactions. The number of days between each transaction and the Item creation will remain constant. For example, an Item created on December 15 might show a transaction on December 14. An Item created on December 20, using the same seed, would show that same transaction occurring on December 19.
     * @type {string}
     * @memberof UserCustomPassword
     */
    seed?: string;
    /**
     * An array of account overrides to configure the accounts for the Item. By default, if no override is specified, transactions and account data will be randomly generated based on the account type and subtype, and other products will have fixed or empty data.
     * @type {Array<OverrideAccounts>}
     * @memberof UserCustomPassword
     */
    override_accounts?: Array<OverrideAccounts>;
    /**
     *
     * @type {MFA}
     * @memberof UserCustomPassword
     */
    mfa?: MFA;
    /**
     * You may trigger a reCAPTCHA in Plaid Link in the Sandbox environment by using the recaptcha field. Possible values are `good` or `bad`. A value of `good` will result in successful Item creation and `bad` will result in a `RECAPTCHA_BAD` error to simulate a failed reCAPTCHA. Both values require the reCAPTCHA to be manually solved within Plaid Link.
     * @type {string}
     * @memberof UserCustomPassword
     */
    recaptcha?: string;
    /**
     * An error code to force on Item creation. Possible values are:  `\"INSTITUTION_NOT_RESPONDING\"` `\"INSTITUTION_NO_LONGER_SUPPORTED\"` `\"INVALID_CREDENTIALS\"` `\"INVALID_MFA\"` `\"ITEM_LOCKED\"` `\"ITEM_LOGIN_REQUIRED\"` `\"ITEM_NOT_SUPPORTED\"` `\"INVALID_LINK_TOKEN\"` `\"MFA_NOT_SUPPORTED\"` `\"NO_ACCOUNTS\"` `\"PLAID_ERROR\"` `\"PRODUCTS_NOT_SUPPORTED\"` `\"USER_SETUP_REQUIRED\"`
     * @type {string}
     * @memberof UserCustomPassword
     */
    force_error?: string;
}
/**
 * The `USER_PERMISSION_REVOKED` webhook is fired to when an end user has used the [my.plaid.com portal](https://my.plaid.com) to revoke the permission that they previously granted to access an Item. Once access to an Item has been revoked, it cannot be restored. If the user subsequently returns to your application, a new Item must be created for the user.
 * @export
 * @interface UserPermissionRevokedWebhook
 */
export interface UserPermissionRevokedWebhook {
    /**
     * `ITEM`
     * @type {string}
     * @memberof UserPermissionRevokedWebhook
     */
    webhook_type?: string;
    /**
     * `USER_PERMISSION_REVOKED`
     * @type {string}
     * @memberof UserPermissionRevokedWebhook
     */
    webhook_code?: string;
    /**
     * The `item_id` of the Item associated with this webhook, warning, or error
     * @type {string}
     * @memberof UserPermissionRevokedWebhook
     */
    item_id?: string;
    /**
     *
     * @type {Error}
     * @memberof UserPermissionRevokedWebhook
     */
    error?: Error | null;
}
/**
 * Fired when an Item was not verified via micro-deposits after seven days since the micro-deposit was made.
 * @export
 * @interface VerificationExpiredWebhook
 */
export interface VerificationExpiredWebhook {
    /**
     * `AUTH`
     * @type {string}
     * @memberof VerificationExpiredWebhook
     */
    webhook_type?: string;
    /**
     * `VERIFICATION_EXPIRED`
     * @type {string}
     * @memberof VerificationExpiredWebhook
     */
    webhook_code?: string;
    /**
     * The `item_id` of the Item associated with this webhook, warning, or error
     * @type {string}
     * @memberof VerificationExpiredWebhook
     */
    item_id?: string;
    /**
     * The `account_id` of the account associated with the webhook
     * @type {string}
     * @memberof VerificationExpiredWebhook
     */
    account_id?: string;
}
/**
 * It is possible for an Asset Report to be returned with missing account owner information. In such cases, the Asset Report will contain warning data in the response, indicating why obtaining the owner information failed.
 * @export
 * @interface Warning
 */
export interface Warning {
    /**
     * The warning type, which will always be `ASSET_REPORT_WARNING`
     * @type {string}
     * @memberof Warning
     */
    warning_type?: string;
    /**
     * The warning code identifies a specific kind of warning. Currently, the only possible warning code is `OWNERS_UNAVAILABLE`, which indicates that account-owner information is not available.
     * @type {string}
     * @memberof Warning
     */
    warning_code?: string;
    /**
     *
     * @type {Cause}
     * @memberof Warning
     */
    cause?: Cause;
}
/**
 * Fired when an Item\'s webhook is updated. This will be sent to the newly specified webhook.
 * @export
 * @interface WebhookUpdateAcknowledgedWebhook
 */
export interface WebhookUpdateAcknowledgedWebhook {
    /**
     * `ITEM`
     * @type {string}
     * @memberof WebhookUpdateAcknowledgedWebhook
     */
    webhook_type?: string;
    /**
     * `WEBHOOK_UPDATE_ACKNOWLEDGED`
     * @type {string}
     * @memberof WebhookUpdateAcknowledgedWebhook
     */
    webhook_code?: string;
    /**
     * The `item_id` of the Item associated with this webhook, warning, or error
     * @type {string}
     * @memberof WebhookUpdateAcknowledgedWebhook
     */
    item_id?: string;
    /**
     * The new webhook URL
     * @type {string}
     * @memberof WebhookUpdateAcknowledgedWebhook
     */
    new_webhook_url?: string;
    /**
     *
     * @type {Error}
     * @memberof WebhookUpdateAcknowledgedWebhook
     */
    error?: Error | null;
}
/**
 *
 * @export
 * @interface WebhookVerificationKeyGetRequest
 */
export interface WebhookVerificationKeyGetRequest {
    /**
     * Your Plaid API `client_id`.
     * @type {string}
     * @memberof WebhookVerificationKeyGetRequest
     */
    client_id: string;
    /**
     * Your Plaid API `secret`.
     * @type {string}
     * @memberof WebhookVerificationKeyGetRequest
     */
    secret: string;
    /**
     * The key ID ( `kid` ) from the JWT header.
     * @type {string}
     * @memberof WebhookVerificationKeyGetRequest
     */
    key_id: string;
}
/**
 *
 * @export
 * @interface WebhookVerificationKeyGetResponse
 */
export interface WebhookVerificationKeyGetResponse {
    /**
     * A JSON Web Key (JWK) that can be used in conjunction with [JWT libraries](https://jwt.io/#libraries-io) to verify Plaid webhooks
     * @type {object}
     * @memberof WebhookVerificationKeyGetResponse
     */
    key?: object;
    /**
     * A unique identifier for the request, which can be used for troubleshooting. This identifier, like all Plaid identifiers, is case sensitive.
     * @type {string}
     * @memberof WebhookVerificationKeyGetResponse
     */
    request_id?: string;
}
/**
 * PlaidApi - axios parameter creator
 * @export
 */
export declare const PlaidApiAxiosParamCreator: (configuration?: Configuration) => {
    /**
     * The `/accounts/get`  endpoint can be used to retrieve information for any linked Item. Note that some information is nullable. Plaid will only return active bank accounts, i.e. accounts that are not closed and are capable of carrying a balance.
     * @summary Retrieve accounts
     * @param {AccountsGetRequest} accountsGetRequest
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    accountsGet: (accountsGetRequest: AccountsGetRequest, options?: any) => Promise<RequestArgs>;
    /**
     * Plaid can provide an Audit Copy of any Asset Report directly to a participating third party on your behalf. For example, Plaid can supply an Audit Copy directly to Fannie Mae on your behalf if you participate in the Day 1 Certaintyâ„¢ program. An Audit Copy contains the same underlying data as the Asset Report.   To grant access to an Audit Copy, use the `/asset_report/audit_copy/create` endpoint to create an `audit_copy_token` and then pass that token to the third party who needs access. Each third party has its own `auditor_id`, for example `fannie_mae`. Youâ€™ll need to create a separate Audit Copy for each third party to whom you want to grant access to the Report.
     * @summary Create Asset Report Audit Copy
     * @param {AssetReportAuditCopyCreateRequest} assetReportAuditCopyCreateRequest
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    assetReportAuditCopyCreate: (assetReportAuditCopyCreateRequest: AssetReportAuditCopyCreateRequest, options?: any) => Promise<RequestArgs>;
    /**
     *
     * @summary Get an Asset Report Audit Copy
     * @param {AssetReportAuditCopyGetRequest} assetReportAuditCopyGetRequest
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    assetReportAuditCopyGet: (assetReportAuditCopyGetRequest: AssetReportAuditCopyGetRequest, options?: any) => Promise<RequestArgs>;
    /**
     * The `/asset_report/audit_copy/remove` endpoint allows you to remove an Audit Copy. Removing an Audit Copy invalidates the `audit_copy_token` associated with it, meaning both you and any third parties holding the token will no longer be able to use it to access Report data. Items associated with the Asset Report, the Asset Report itself and other Audit Copies of it are not affected and will remain accessible after removing the given Audit Copy.
     * @summary Remove Asset Report Audit Copy
     * @param {AssetReportAuditCopyRemoveRequest} assetReportAuditCopyRemoveRequest
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    assetReportAuditCopyRemove: (assetReportAuditCopyRemoveRequest: AssetReportAuditCopyRemoveRequest, options?: any) => Promise<RequestArgs>;
    /**
     * The `/asset_report/create` endpoint initiates the process of creating an Asset Report, which can then be retrieved by passing the `asset_report_token` return value to the `/asset_report/get` or `/asset_report/pdf/get` endpoints.   The Asset Report takes some time to be created and is not available immediately after calling `/asset_report/create`. When the Asset Report is ready to be retrieved using `/asset_report/get` or `/asset_report/pdf/get`, Plaid will fire a `PRODUCT_READY` webhook. For full details of the webhook schema, see [Asset Report webhooks](/docs-beta/api/webhooks/#Assets-webhooks).  The `/asset_report/create` endpoint creates an Asset Report at a moment in time. Asset Reports are immutable. To get an updated Asset Report, use the `/asset_report/refresh` endpoint.
     * @summary Create an Asset Report
     * @param {AssetReportCreateRequest} assetReportCreateRequest
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    assetReportCreate: (assetReportCreateRequest: AssetReportCreateRequest, options?: any) => Promise<RequestArgs>;
    /**
     * By default, an Asset Report will contain all of the accounts on a given Item. In some cases, you may not want the Asset Report to contain all accounts. For example, you might have the end user choose which accounts are relevant in Link using the Select Account view, which you can enable in the dashboard. Or, you might always exclude certain account types or subtypes, which you can identify by using the `/accounts/get` endpoint. To narrow an Asset Report to only a subset of accounts, use the `/asset_report/filter` endpoint.  To exclude certain Accounts from an Asset Report, first use the `/asset_report/create` endpoint to create the report, then send the `asset_report_token` along with a list of `account_ids` to exclude to the `/asset_report/filter` endpoint, to create a new Asset Report which contains only a subset of the original Asset Report\'s data.  Because Asset Reports are immutable, calling `/asset_report/filter` does not alter the original Asset Report in any way; rather, `/asset_report/filter` creates a new Asset Report with a new token and id. Asset Reports created via `/asset_report/filter` do not contain new Asset data, and are not billed.  Plaid will fire a [`PRODUCT_READY`](/docs-beta/api/webhooks) webhook once generation of the filtered Asset Report has completed.
     * @summary Filter Asset Report
     * @param {AssetReportFilterRequest} assetReportFilterRequest
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    assetReportFilter: (assetReportFilterRequest: AssetReportFilterRequest, options?: any) => Promise<RequestArgs>;
    /**
     * The `/asset_report/get` endpoint retrieves the Asset Report in JSON format. Before calling `/asset_report/get`, you must first create the Asset Report using `/asset_report/create` (or filter an Asset Report using `/asset_report/filter`) and then wait for the [`PRODUCT_READY`](/docs-beta/api/webhooks) webhook to fire, indicating that the Report is ready to be retrieved.  By default, an Asset Report includes transaction descriptions as returned by the bank, as opposed to parsed and categorized by Plaid. You can also receive cleaned and categorized transactions, as well as additional insights like merchant name or location information. We call this an Asset Report with Insights. An Asset Report with Insights provides transaction category, location, and merchant information in addition to the transaction strings provided in a standard Asset Report.  To retrieve an Asset Report with Insights, call the `/asset_report/get` endpoint with `include_insights` set to `true`. Note that you will need to [contact us](https://dashboard.plaid.com/support) to get access to this feature.
     * @summary Get an Asset Report
     * @param {AssetReportGetRequest} assetReportGetRequest
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    assetReportGet: (assetReportGetRequest: AssetReportGetRequest, options?: any) => Promise<RequestArgs>;
    /**
     * The `/asset_report/pdf/get` endpoint retrieves the Asset Report in PDF format. Before calling `/asset_report/pdf/get`, you must first create the Asset Report using `/asset_report/create` (or filter an Asset Report using `/asset_report/filter`) and then wait for the [`PRODUCT_READY`](/docs-beta/api/webhooks) webhook to fire, indicating that the Report is ready to be retrieved.  By default, an Asset Report includes transaction descriptions as returned by the bank, as opposed to parsed and categorized by Plaid. You can also receive cleaned and categorized transactions, as well as additional insights like merchant name or location information. We call this an Asset Report with Insights. An Asset Report with Insights provides transaction category, location, and merchant information in addition to the transaction strings provided in a standard Asset Report.  To retrieve an Asset Report with Insights, call the `/asset_report/pdf/get` endpoint with `include_insights` set to `true`. Note that you will need to [contact us](https://dashboard.plaid.com/support) to get access to this feature.  The response to `/asset_report/pdf/get` is the PDF binary data. The `request_id`  is returned in the `Plaid-Request-ID` header.  [View a sample PDF Asset Report with Insights](https://plaid.com/documents/sample-asset-report.pdf).
     * @summary Get a PDF Asset Report
     * @param {AssetReportPDFGetRequest} assetReportPDFGetRequest
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    assetReportPDFGet: (assetReportPDFGetRequest: AssetReportPDFGetRequest, options?: any) => Promise<RequestArgs>;
    /**
     * An Asset Report is an immutable snapshot of a user\'s assets. In order to \"refresh\" an Asset Report you created previously, you can use the `/asset_report/refresh` endpoint to create a new Asset Report based on the old one, but with the most recent data available.  The new Asset Report will contain the same Items as the original Report, as well as the same filters applied by any call to `/asset_report/filter`. By default, the new Asset Report will also use the same parameters you submitted with your original `/asset_report/create` request, but the original `days_requested` value and the values of any parameters in the `options` object can be overridden with new values. To change these arguments, simply supply new values for them in your request to `/asset_report/refresh`. Submit an empty string (\"\") for any previously-populated fields you would like set as empty.
     * @summary Refresh an Asset Report
     * @param {AssetReportRefreshRequest} assetReportRefreshRequest
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    assetReportRefresh: (assetReportRefreshRequest: AssetReportRefreshRequest, options?: any) => Promise<RequestArgs>;
    /**
     * The `/item/remove` endpoint allows you to invalidate an `access_token`, meaning you will not be able to create new Asset Reports with it. Removing an Item does not affect any Asset Reports or Audit Copies you have already created, which will remain accessible until you remove them specifically.  The `/asset_report/remove` endpoint allows you to remove an Asset Report. Removing an Asset Report invalidates its `asset_report_token`, meaning you will no longer be able to use it to access Report data or create new Audit Copies. Removing an Asset Report does not affect the underlying Items, but does invalidate any `audit_copy_tokens` associated with the Asset Report.
     * @summary Delete an Asset Report
     * @param {AssetReportRemoveRequest} assetReportRemoveRequest
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    assetReportRemove: (assetReportRemoveRequest: AssetReportRemoveRequest, options?: any) => Promise<RequestArgs>;
    /**
     * The `/auth/get` endpoint returns the bank account and bank identification numbers (such as routing numbers, for US accounts) associated with an Item\'s checking and savings accounts, along with high-level account data and balances when available.  Note: This request may take some time to complete if `auth` was not specified as an initial product when creating the Item. This is because Plaid must communicate directly with the institution to retrieve the data.
     * @summary Fetch auth data
     * @param {AuthGetRequest} authGetRequest
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    authGet: (authGetRequest: AuthGetRequest, options?: any) => Promise<RequestArgs>;
    /**
     * The `/accounts/balance/get` endpoint returns the real-time balance for each of an Item\'s accounts. While other endpoints may return a balance object, only `/accounts/balance/get` forces the available and current balance fields to be refreshed rather than cached. This endpoint can be used for existing Items that were added via any of Plaidâ€™s other products. This endpoint can be used as long as Link has been initialized with any other product, `balance` itself is not a product that can be used to initialize Link.
     * @summary Fetch real-time balance data
     * @param {BalanceGetRequest} balanceGetRequest
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    balanceGet: (balanceGetRequest: BalanceGetRequest, options?: any) => Promise<RequestArgs>;
    /**
     * Send a request to the `/categories/get`  endpoint to get detailed information on categories returned by Plaid. This endpoint does not require authentication.
     * @summary Fetch Categories
     * @param {object} body
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    categoriesGet: (body: object, options?: any) => Promise<RequestArgs>;
    /**
     * This endpoint creates a Deposit Switch entity which will be persisted throughout the lifecycle of the switch.
     * @summary Create a Deposit Switch
     * @param {DepositSwitchCreateRequest} depositSwitchCreateRequest
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    depositSwitchCreate: (depositSwitchCreateRequest: DepositSwitchCreateRequest, options?: any) => Promise<RequestArgs>;
    /**
     * This endpoint returns information related to how the consumer has configured their payroll allocation and the state of the switch. You can use this information to build logic related to the Consumerâ€™s direct deposit allocation preferences.
     * @summary Get a Deposit Switch
     * @param {DepositSwitchGetRequest} depositSwitchGetRequest
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    depositSwitchGet: (depositSwitchGetRequest: DepositSwitchGetRequest, options?: any) => Promise<RequestArgs>;
    /**
     * In order for the consumer to take action, you will need to create a public token representing the Deposit Switch. This token is used to initialize Link. It can be used one time and expires after 30 minutes.
     * @summary Create a Deposit Switch token
     * @param {DepositSwitchTokenCreateRequest} depositSwitchTokenCreateRequest
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    depositSwitchTokenCreate: (depositSwitchTokenCreateRequest: DepositSwitchTokenCreateRequest, options?: any) => Promise<RequestArgs>;
    /**
     * The `/identity/get` endpoint allows you to retrieve various account holder information on file with the financial institution, including names, emails, phone numbers, and addresses. Only name data is guaranteed to be returned; other fields will be empty arrays if not provided by the institution.  Note: This request may take some time to complete if identity was not specified as an initial product when creating the Item. This is because Plaid must communicate directly with the institution to retrieve the data.
     * @summary Fetch identity data
     * @param {IdentityGetRequest} identityGetRequest
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    identityGet: (identityGetRequest: IdentityGetRequest, options?: any) => Promise<RequestArgs>;
    /**
     * Returns a JSON response containing details on all financial institutions currently supported by Plaid. Because Plaid supports thousands of institutions, results are paginated.  This data changes frequently. If you store it locally on your system, be sure to update it regularly.
     * @summary Get details of all supported institutions
     * @param {InstitutionsGetRequest} institutionsGetRequest
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    institutionsGet: (institutionsGetRequest: InstitutionsGetRequest, options?: any) => Promise<RequestArgs>;
    /**
     * Returns a JSON response containing details on a specified financial institution currently supported by Plaid.
     * @summary Get details of an institution
     * @param {InstitutionsGetByIdRequest} institutionsGetByIdRequest
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    institutionsGetByID: (institutionsGetByIdRequest: InstitutionsGetByIdRequest, options?: any) => Promise<RequestArgs>;
    /**
     * Returns a JSON response containing details for all institutions that match the query parameters
     * @summary Search institutions
     * @param {InstitutionSearchRequest} institutionSearchRequest
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    institutionsSearch: (institutionSearchRequest: InstitutionSearchRequest, options?: any) => Promise<RequestArgs>;
    /**
     * The `/investments/holdings/get` endpoint allows developers to receive user-authorized stock position data for `investment`-type accounts.
     * @summary Get Investment holdings
     * @param {InvestmentsHoldingsGetRequest} investmentsHoldingsGetRequest
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    investmentsHoldingsGet: (investmentsHoldingsGetRequest: InvestmentsHoldingsGetRequest, options?: any) => Promise<RequestArgs>;
    /**
     * The `/investments/transactions/get` endpoint allows developers to retrieve user-authorized transaction data for investment accounts.   Transactions are returned in reverse-chronological order, and the sequence of transaction ordering is stable and will not shift.  Due to the potentially large number of investment transactions associated with an Item, results are paginated. Manipulate the count and offset parameters in conjunction with the `total_investment_transactions` response body field to fetch all available investment transactions.
     * @summary Get investment transactions
     * @param {InvestmentsTransactionsGetRequest} investmentsTransactionsGetRequest
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    investmentsTransactionsGet: (investmentsTransactionsGetRequest: InvestmentsTransactionsGetRequest, options?: any) => Promise<RequestArgs>;
    /**
     * By default, the `access_token` associated with an Item does not expire and should be stored in a persistent, secure manner.  You can use the `/item/access_token/invalidate` endpoint to rotate the `access_token` associated with an Item. The endpoint returns a new `access_token` and immediately invalidates the previous `access_token`.
     * @summary Invalidate access_token
     * @param {ItemAccessTokenInvalidateRequest} itemAccessTokenInvalidateRequest
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    itemAccessTokenInvalidate: (itemAccessTokenInvalidateRequest: ItemAccessTokenInvalidateRequest, options?: any) => Promise<RequestArgs>;
    /**
     * Returns information about the status of an Item.
     * @summary Fetch an Item
     * @param {ItemGetRequest} itemGetRequest
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    itemGet: (itemGetRequest: ItemGetRequest, options?: any) => Promise<RequestArgs>;
    /**
     * `/item/import` creates an Item via your Plaid Exchange Integration and returns an `access_token`. As part of an `/item/import` request, you will include a User ID (`user_auth.user_id`) and Authentication Token (`user_auth.auth_token`) that enable data aggregation through your Plaid Exchange API endpoints. These authentication principals are to be chosen by you.  Upon creating an Item via `/item/import`, Plaid will automatically begin an extraction of that Item through the Plaid Exchange infrastructure you have already integrated. This will automatically generate the Plaid native account ID for the account the user will switch their direct deposit to (`target_account_id`).
     * @summary Import Item
     * @param {ItemImportRequest} itemImportRequest
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    itemImport: (itemImportRequest: ItemImportRequest, options?: any) => Promise<RequestArgs>;
    /**
     * Exchange a Link `public_token` for an API `access_token`. Link hands off the `public_token` client-side via the `onSuccess` callback once a user has successfully created an Item. The `public_token` is ephemeral and expires after 30 minutes.   The response also includes an `item_id` that should be stored with the `access_token`. The `item_id` is used to identify an Item in a webhook. The `item_id` can also be retrieved by making an `/item/get` request.
     * @summary Exchange public token for an access token
     * @param {ItemPublicTokenExchangeRequest} itemPublicTokenExchangeRequest
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    itemPublicTokenExchange: (itemPublicTokenExchangeRequest: ItemPublicTokenExchangeRequest, options?: any) => Promise<RequestArgs>;
    /**
     * The `/item/remove`  endpoint allows you to remove an Item. Once removed, the `access_token`  associated with the Item is no longer valid and cannot be used to access any data that was associated with the Item.  Note that in the Development environment, issuing an `/item/remove`  request will not decrement your live credential count.
     * @summary Remove an Item
     * @param {ItemRemoveRequest} itemRemoveRequest
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    itemRemove: (itemRemoveRequest: ItemRemoveRequest, options?: any) => Promise<RequestArgs>;
    /**
     * The POST `/item/webhook/update` allows you to update the webhook URL associated with an Item. This request triggers a [`WEBHOOK_UPDATE_ACKNOWLEDGED`](/docs-beta/webhooks/#item-webhook-url-updated) webhook to the newly specified webhook URL.
     * @summary Update Webhook URL
     * @param {ItemWebhookUpdateRequest} itemWebhookUpdateRequest
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    itemWebhookUpdate: (itemWebhookUpdateRequest: ItemWebhookUpdateRequest, options?: any) => Promise<RequestArgs>;
    /**
     * The `/liabilities/get` endpoint returns various details about an Item with loan or credit accounts. Liabilities is supported for US and Canada accounts only. Currently supported account types are account type `credit` with account subtype `credit card` or `paypal`, and account type `loan` with account subtype `student`. To limit accounts listed in Link to types and subtypes supported by Liabilities, you can use the `account_filter` parameter when [creating a Link token](/docs-beta/api/tokens/#linktokencreate).   The types of information returned by Liabilities can include balances and due dates, loan terms, and account details such as original loan amount and guarantor. Data is refreshed approximately once per day; the latest data can be retrieved by calling `/liabilities/get`.  Note: This request may take some time to complete if `liabilities` was not specified as an initial product when creating the Item. This is because Plaid must communicate directly with the institution to retrieve the additional data.
     * @summary Fetch Liabilities data
     * @param {LiabilitiesGetRequest} liabilitiesGetRequest
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    liabilitiesGet: (liabilitiesGetRequest: LiabilitiesGetRequest, options?: any) => Promise<RequestArgs>;
    /**
     * The `/link/token/create` endpoint creates a `link_token`, which is required as a parameter when initializing Link. Once Link has been initialized, it returns a `public_token`, which can then be exchanged for an `access_token` via `/item/public_token/exchange` as part of the main Link flow.   A `link_token` generated by `/link/token/create` is also used to initialize other Link flows, such as the update mode flow for tokens with expired credentials, or the Payment Initiation (Europe) flow.
     * @summary Create Link Token
     * @param {LinkTokenCreateRequest} linkTokenCreateRequest
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    linkTokenCreate: (linkTokenCreateRequest: LinkTokenCreateRequest, options?: any) => Promise<RequestArgs>;
    /**
     * The `/link/token/get` endpoint gets information about a previously-created `link_token` using the `/link/token/create` endpoint. It can be useful for debugging purposes.
     * @summary Get Link Token
     * @param {LinkTokenGetRequest} linkTokenGetRequest
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    linkTokenGet: (linkTokenGetRequest: LinkTokenGetRequest, options?: any) => Promise<RequestArgs>;
    /**
     * After creating a payment recipient, you can use the `/payment_initiation/payment/create` endpoint to create a payment to that recipient.  Payment can be one-time or standing order (recurring) and can be denominated in either EUR or GBP.  In general, EUR-denominated payments will be sent via SEPA Credit Transfer and GBP-denominated payments will be sent via the Faster Payments network, but the payment network used will be determined by the institution. Payments sent via Faster Payments will typically arrive immediately, while payments sent via SEPA Credit Transfer will typically arrive in one business day.  Standing orders (recurring payments) must be denominated in GBP and can only be sent to recipients in the UK. Once created, standing order payments will continue indefinitely and cannot be modified or canceled via the API. To end or modify a standing order payment, the end user should contact their bank.
     * @summary Create a payment
     * @param {PaymentInitiationPaymentCreateRequest} paymentInitiationPaymentCreateRequest
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    paymentInitiationPaymentCreate: (paymentInitiationPaymentCreateRequest: PaymentInitiationPaymentCreateRequest, options?: any) => Promise<RequestArgs>;
    /**
     * The `/payment_initiation/payment/list` endpoint can be used to retrieve all created payments. By default, the 10 most recent payments are returned. You can request more payments and paginate through the results using the optional `count` and `cursor` parameters.
     * @summary List payments
     * @param {PaymentInitiationPaymentListRequest} paymentInitiationPaymentListRequest
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    paymentInitiationPaymentList: (paymentInitiationPaymentListRequest: PaymentInitiationPaymentListRequest, options?: any) => Promise<RequestArgs>;
    /**
     * Create a payment recipient for payment initiation.  The recipient must be in Europe, within a country that is a member of the Single Euro Payment Area (SEPA).  For a standing order (recurring) payment, the recipient must be in the UK.  The endpoint is idempotent: if a developer has already made a request with the same payment details, Plaid will return the same `recipient_id`.   In the Sandbox environment, you can use the `/payment_initiation/recipient/create` endpoint to generate recipients. Programmatic recipient creation in the Development and Production environments can be done after approval by Plaid\'s compliance team. Please [contact sales](https://plaid.com/contact/) for approval.
     * @summary Create payment recipient
     * @param {PaymentInitiationRecipientCreateRequest} paymentInitiationRecipientCreateRequest
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    paymentInitiationRecipientCreate: (paymentInitiationRecipientCreateRequest: PaymentInitiationRecipientCreateRequest, options?: any) => Promise<RequestArgs>;
    /**
     * Get details about a payment recipient you have previously created.
     * @summary Get payment recipient
     * @param {PaymentInitiationRecipientGetRequest} paymentInitiationRecipientGetRequest
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    paymentInitiationRecipientGet: (paymentInitiationRecipientGetRequest: PaymentInitiationRecipientGetRequest, options?: any) => Promise<RequestArgs>;
    /**
     * The `/payment_initiation/recipient/list` endpoint list the payment recipients that you have previously created.
     * @summary List payment recipients
     * @param {PaymentInitiationRecipientListRequest} paymentInitiationRecipientListRequest
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    paymentInitiationRecipientList: (paymentInitiationRecipientListRequest: PaymentInitiationRecipientListRequest, options?: any) => Promise<RequestArgs>;
    /**
     * The `/payment_initiation/payment/get` endpoint can be used to check the status of a payment, as well as to receive basic information such as recipient and payment amount. In the case of standing orders, the `/payment_initiation/payment/get` endpoint will provide information about the status of the overall standing order itself; the API cannot be used to retrieve payment status for individual payments within a standing order.
     * @summary Get payment details
     * @param {PaymentIntiationPaymentGetRequest} paymentIntiationPaymentGetRequest
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    paymentIntiationPaymentGet: (paymentIntiationPaymentGetRequest: PaymentIntiationPaymentGetRequest, options?: any) => Promise<RequestArgs>;
    /**
     * Used to create a token suitable for sending to Apex to enable Plaid-Apex integrations.
     * @summary Create Apex bank account token
     * @param {ProcessorApexProcessorTokenCreateRequest} processorApexProcessorTokenCreateRequest
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    processorApexProcessorTokenCreate: (processorApexProcessorTokenCreateRequest: ProcessorApexProcessorTokenCreateRequest, options?: any) => Promise<RequestArgs>;
    /**
     * The `/processor/auth/get` endpoint returns the bank account and bank identification number (such as the routing number, for US accounts), for a checking or savings account that\'s associated with a given `processor_token`. The endpoint also returns high-level account data and balances when available.
     * @summary Get Auth data
     * @param {ProcessorAuthGetRequest} processorAuthGetRequest
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    processorAuthGet: (processorAuthGetRequest: ProcessorAuthGetRequest, options?: any) => Promise<RequestArgs>;
    /**
     * The `/processor/balance/get` endpoint returns the real-time balance for each of an Item\'s accounts. While other endpoints may return a balance object, only `/processor/balance/get` forces the available and current balance fields to be refreshed rather than cached.
     * @summary Get Balance data
     * @param {ProcessorBalanceGetRequest} processorBalanceGetRequest The &#x60;/processor/balance/get&#x60; endpoint returns the real-time balance for the account associated with a given &#x60;processor_token&#x60;.  The current balance is the total amount of funds in the account. The available balance is the current balance less any outstanding holds or debits that have not yet posted to the account.  Note that not all institutions calculate the available balance. In the event that available balance is unavailable from the institution, Plaid will return an available balance value of &#x60;null&#x60;.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    processorBalanceGet: (processorBalanceGetRequest: ProcessorBalanceGetRequest, options?: any) => Promise<RequestArgs>;
    /**
     * The `/processor/identity/get` endpoint allows you to retrieve various account holder information on file with the financial institution, including names, emails, phone numbers, and addresses.
     * @summary Fetch Identity data
     * @param {ProcessorIdentityGetRequest} processorIdentityGetRequest
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    processorIdentityGet: (processorIdentityGetRequest: ProcessorIdentityGetRequest, options?: any) => Promise<RequestArgs>;
    /**
     * Used to create a token suitable for sending to Stripe to enable Plaid-Stripe integrations.
     * @summary Create Stripe bank account token
     * @param {ProcessorStripeBankAccountTokenCreateRequest} processorStripeBankAccountTokenCreateRequest
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    processorStripeBankAccountTokenCreate: (processorStripeBankAccountTokenCreateRequest: ProcessorStripeBankAccountTokenCreateRequest, options?: any) => Promise<RequestArgs>;
    /**
     * Used to create a token suitable for sending to one of Plaid\'s partners to enable integrations. Note that Stripe partnerships use bank account tokens instead; see `/processor/stripe/bank_account_token/create` for creating tokens for use with Stripe integrations.
     * @summary Create processor token
     * @param {ProcessorTokenCreateRequest} processorTokenCreateRequest
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    processorTokenCreate: (processorTokenCreateRequest: ProcessorTokenCreateRequest, options?: any) => Promise<RequestArgs>;
    /**
     * The `/sandbox/item/fire_webhook` endpoint is used to test that code correctly handles webhooks. Calling this endpoint triggers a Transactions `DEFAULT_UPDATE` webhook to be fired for a given Sandbox Item. If the Item does not support Transactions, a `SANDBOX_PRODUCT_NOT_ENABLED` error will result.
     * @summary Fire a test webhook
     * @param {SandboxItemFireWebhookRequest} sandboxItemFireWebhookRequest
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    sandboxItemFireWebhook: (sandboxItemFireWebhookRequest: SandboxItemFireWebhookRequest, options?: any) => Promise<RequestArgs>;
    /**
     * `/sandbox/item/reset_login/` forces an Item into an `ITEM_LOGIN_REQUIRED` state in order to simulate an Item whose login is no longer valid. This makes it easy to test Link\'s [update mode](/docs-beta/link/update-mode) flow in the Sandbox environment.  After calling `/sandbox/item/reset_login`, You can then use Plaid Link update mode to restore the Item to a good state. An `ITEM_LOGIN_REQUIRED` webhook will also be fired after a call to this endpoint, if one is associated with the Item.   In the Sandbox, Items will transition to an `ITEM_LOGIN_REQUIRED` error state automatically after 30 days, even if this endpoint is not called.
     * @summary Force a Sandbox Item into an error state
     * @param {SandboxItemResetLoginRequest} sandboxItemResetLoginRequest
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    sandboxItemResetLogin: (sandboxItemResetLoginRequest: SandboxItemResetLoginRequest, options?: any) => Promise<RequestArgs>;
    /**
     * The `/sandbox/item/set_verification_status` endpoint can be used to change the verification status of an Item in in the Sandbox in order to simulate the Automated Micro-deposit flow.   Note that not all Plaid developer accounts are enabled for micro-deposit based verification by default. Your account must be enabled for this feature in order to test it in Sandbox. To enable this features or check your status, contact your account manager or [submit a product access Support ticket](https://dashboard.plaid.com/support/new/product-and-development/product-troubleshooting/request-product-access).  For more information on testing Automated Micro-deposits in Sandbox, see [Auth full coverage testing](/docs-beta/auth/coverage/testing#).
     * @summary Set verification status for Sandbox account
     * @param {SandboxItemSetVerificationStatusRequest} sandboxItemSetVerificationStatusRequest
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    sandboxItemSetVerificationStatus: (sandboxItemSetVerificationStatusRequest: SandboxItemSetVerificationStatusRequest, options?: any) => Promise<RequestArgs>;
    /**
     * Use the `/sandbox/public_token/create`  endpoint to create a valid `public_token`  for an arbitrary institution ID, initial products, and test credentials. The created `public_token` maps to a new Sandbox Item. You can then call `/item/public_token/exchange` to exchange the `public_token` for an `access_token` and perform all API actions. `/sandbox/public_token/create` can also be used with the [`user_custom` test username](/docs-beta/sandbox/user-custom) to generate a test account with custom data.
     * @summary Create a test Item
     * @param {SandboxPublicTokenCreateRequest} sandboxPublicTokenCreateRequest
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    sandboxPublicTokenCreate: (sandboxPublicTokenCreateRequest: SandboxPublicTokenCreateRequest, options?: any) => Promise<RequestArgs>;
    /**
     * The `/transactions/get` endpoint allows developers to receive user-authorized transaction data for credit, depository, and some loan-type accounts (the list of loan-type accounts supported is the same as for Liabilities; for details, see the `/liabilities/get` endpoint). For transaction history from investments accounts, use the [Investments endpoint](/docs-beta/api/products#investments) instead. Transaction data is standardized across financial institutions, and in many cases transactions are linked to a clean name, entity type, location, and category. Similarly, account data is standardized and returned with a clean name, number, balance, and other meta information where available.   Transactions are returned in reverse-chronological order, and the sequence of transaction ordering is stable and will not shift. Transactions are immutable but can be removed altogether by the institution; a removed transaction will no longer appear in `/transactions/get`.  Due to the potentially large number of transactions associated with an Item, results are paginated. Manipulate the `count` and `offset` parameters in conjunction with the `total_transactions` response body field to fetch all available transactions.  Note that data may not be immediately available to `/transactions/get`. Plaid will begin to prepare transactions data upon Item link, if Link was initialized with `transactions`, or upon the first call to `/transactions/get`, if it wasn\'t. To be alerted when transaction data is ready to be fetched, listen for the [`INITIAL_UPDATE`](/docs-beta/api/webhooks#transactions-initial_update) and [`HISTORICAL_UPDATE`](/docs-beta/api/webhooks#transactions-historical_update) webhooks. If no transaction history is ready when `/transactions/get` is called, it will return a `PRODUCT_NOT_READY` error.
     * @summary Fetch transaction data
     * @param {TransactionsGetRequest} transactionsGetRequest
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    transactionsGet: (transactionsGetRequest: TransactionsGetRequest, options?: any) => Promise<RequestArgs>;
    /**
     * `/transactions/refresh` is an optional endpoint for users of the Transactions product. It initiates an on-demand extraction to fetch the newest transactions for an Item. This on-demand extraction takes place in addition to the periodic extractions that automatically occur multiple times a day for any Transactions-enabled Item. If changes to transactions are discovered after calling `/transactions/refresh`, Plaid will fire a webhook: [`TRANSACTIONS_REMOVED`](/docs-beta/api/webhooks#deleted-transactions-detected) will be fired if any removed transactions are detected, and [`DEFAULT_UPDATE`](/docs-beta/api/webhooks#transactions-default_update) will be fired if any new transactions are detected. New transactions can be fetched by calling `/transactions/get`.  Access to `/transactions/refresh` in Production is specific to certain pricing plans. If you cannot access `/transactions/refresh` in Production, [contact Sales](https://www.plaid.com/contact) for assistance.
     * @summary Refresh transaction data
     * @param {TransactionsRefreshRequest} transactionsRefreshRequest
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    transactionsRefresh: (transactionsRefreshRequest: TransactionsRefreshRequest, options?: any) => Promise<RequestArgs>;
    /**
     * Plaid signs all outgoing webhooks and provides JSON Web Tokens (JWTs) so that you can verify the authenticity of any incoming webhooks to your application. A message signature is included in the `Plaid-Verification` header.  The `/webhook_verification_key/get` endpoint provides a JSON Web Key (JWK) that can be used to verify a JWT.
     * @summary Get webhook verification key
     * @param {WebhookVerificationKeyGetRequest} webhookVerificationKeyGetRequest
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    webhookVerificationKeyGet: (webhookVerificationKeyGetRequest: WebhookVerificationKeyGetRequest, options?: any) => Promise<RequestArgs>;
};
/**
 * PlaidApi - functional programming interface
 * @export
 */
export declare const PlaidApiFp: (configuration?: Configuration) => {
    /**
     * The `/accounts/get`  endpoint can be used to retrieve information for any linked Item. Note that some information is nullable. Plaid will only return active bank accounts, i.e. accounts that are not closed and are capable of carrying a balance.
     * @summary Retrieve accounts
     * @param {AccountsGetRequest} accountsGetRequest
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    accountsGet(accountsGetRequest: AccountsGetRequest, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<AccountsGetResponse>>;
    /**
     * Plaid can provide an Audit Copy of any Asset Report directly to a participating third party on your behalf. For example, Plaid can supply an Audit Copy directly to Fannie Mae on your behalf if you participate in the Day 1 Certaintyâ„¢ program. An Audit Copy contains the same underlying data as the Asset Report.   To grant access to an Audit Copy, use the `/asset_report/audit_copy/create` endpoint to create an `audit_copy_token` and then pass that token to the third party who needs access. Each third party has its own `auditor_id`, for example `fannie_mae`. Youâ€™ll need to create a separate Audit Copy for each third party to whom you want to grant access to the Report.
     * @summary Create Asset Report Audit Copy
     * @param {AssetReportAuditCopyCreateRequest} assetReportAuditCopyCreateRequest
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    assetReportAuditCopyCreate(assetReportAuditCopyCreateRequest: AssetReportAuditCopyCreateRequest, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<AssetReportAuditCopyCreateResponse>>;
    /**
     *
     * @summary Get an Asset Report Audit Copy
     * @param {AssetReportAuditCopyGetRequest} assetReportAuditCopyGetRequest
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    assetReportAuditCopyGet(assetReportAuditCopyGetRequest: AssetReportAuditCopyGetRequest, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<AssetReportGetResponse>>;
    /**
     * The `/asset_report/audit_copy/remove` endpoint allows you to remove an Audit Copy. Removing an Audit Copy invalidates the `audit_copy_token` associated with it, meaning both you and any third parties holding the token will no longer be able to use it to access Report data. Items associated with the Asset Report, the Asset Report itself and other Audit Copies of it are not affected and will remain accessible after removing the given Audit Copy.
     * @summary Remove Asset Report Audit Copy
     * @param {AssetReportAuditCopyRemoveRequest} assetReportAuditCopyRemoveRequest
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    assetReportAuditCopyRemove(assetReportAuditCopyRemoveRequest: AssetReportAuditCopyRemoveRequest, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<AssetReportAuditCopyRemoveResponse>>;
    /**
     * The `/asset_report/create` endpoint initiates the process of creating an Asset Report, which can then be retrieved by passing the `asset_report_token` return value to the `/asset_report/get` or `/asset_report/pdf/get` endpoints.   The Asset Report takes some time to be created and is not available immediately after calling `/asset_report/create`. When the Asset Report is ready to be retrieved using `/asset_report/get` or `/asset_report/pdf/get`, Plaid will fire a `PRODUCT_READY` webhook. For full details of the webhook schema, see [Asset Report webhooks](/docs-beta/api/webhooks/#Assets-webhooks).  The `/asset_report/create` endpoint creates an Asset Report at a moment in time. Asset Reports are immutable. To get an updated Asset Report, use the `/asset_report/refresh` endpoint.
     * @summary Create an Asset Report
     * @param {AssetReportCreateRequest} assetReportCreateRequest
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    assetReportCreate(assetReportCreateRequest: AssetReportCreateRequest, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<AssetReportCreateResponse>>;
    /**
     * By default, an Asset Report will contain all of the accounts on a given Item. In some cases, you may not want the Asset Report to contain all accounts. For example, you might have the end user choose which accounts are relevant in Link using the Select Account view, which you can enable in the dashboard. Or, you might always exclude certain account types or subtypes, which you can identify by using the `/accounts/get` endpoint. To narrow an Asset Report to only a subset of accounts, use the `/asset_report/filter` endpoint.  To exclude certain Accounts from an Asset Report, first use the `/asset_report/create` endpoint to create the report, then send the `asset_report_token` along with a list of `account_ids` to exclude to the `/asset_report/filter` endpoint, to create a new Asset Report which contains only a subset of the original Asset Report\'s data.  Because Asset Reports are immutable, calling `/asset_report/filter` does not alter the original Asset Report in any way; rather, `/asset_report/filter` creates a new Asset Report with a new token and id. Asset Reports created via `/asset_report/filter` do not contain new Asset data, and are not billed.  Plaid will fire a [`PRODUCT_READY`](/docs-beta/api/webhooks) webhook once generation of the filtered Asset Report has completed.
     * @summary Filter Asset Report
     * @param {AssetReportFilterRequest} assetReportFilterRequest
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    assetReportFilter(assetReportFilterRequest: AssetReportFilterRequest, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<AssetReportFilterResponse>>;
    /**
     * The `/asset_report/get` endpoint retrieves the Asset Report in JSON format. Before calling `/asset_report/get`, you must first create the Asset Report using `/asset_report/create` (or filter an Asset Report using `/asset_report/filter`) and then wait for the [`PRODUCT_READY`](/docs-beta/api/webhooks) webhook to fire, indicating that the Report is ready to be retrieved.  By default, an Asset Report includes transaction descriptions as returned by the bank, as opposed to parsed and categorized by Plaid. You can also receive cleaned and categorized transactions, as well as additional insights like merchant name or location information. We call this an Asset Report with Insights. An Asset Report with Insights provides transaction category, location, and merchant information in addition to the transaction strings provided in a standard Asset Report.  To retrieve an Asset Report with Insights, call the `/asset_report/get` endpoint with `include_insights` set to `true`. Note that you will need to [contact us](https://dashboard.plaid.com/support) to get access to this feature.
     * @summary Get an Asset Report
     * @param {AssetReportGetRequest} assetReportGetRequest
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    assetReportGet(assetReportGetRequest: AssetReportGetRequest, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<AssetReportGetResponse>>;
    /**
     * The `/asset_report/pdf/get` endpoint retrieves the Asset Report in PDF format. Before calling `/asset_report/pdf/get`, you must first create the Asset Report using `/asset_report/create` (or filter an Asset Report using `/asset_report/filter`) and then wait for the [`PRODUCT_READY`](/docs-beta/api/webhooks) webhook to fire, indicating that the Report is ready to be retrieved.  By default, an Asset Report includes transaction descriptions as returned by the bank, as opposed to parsed and categorized by Plaid. You can also receive cleaned and categorized transactions, as well as additional insights like merchant name or location information. We call this an Asset Report with Insights. An Asset Report with Insights provides transaction category, location, and merchant information in addition to the transaction strings provided in a standard Asset Report.  To retrieve an Asset Report with Insights, call the `/asset_report/pdf/get` endpoint with `include_insights` set to `true`. Note that you will need to [contact us](https://dashboard.plaid.com/support) to get access to this feature.  The response to `/asset_report/pdf/get` is the PDF binary data. The `request_id`  is returned in the `Plaid-Request-ID` header.  [View a sample PDF Asset Report with Insights](https://plaid.com/documents/sample-asset-report.pdf).
     * @summary Get a PDF Asset Report
     * @param {AssetReportPDFGetRequest} assetReportPDFGetRequest
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    assetReportPDFGet(assetReportPDFGetRequest: AssetReportPDFGetRequest, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<any>>;
    /**
     * An Asset Report is an immutable snapshot of a user\'s assets. In order to \"refresh\" an Asset Report you created previously, you can use the `/asset_report/refresh` endpoint to create a new Asset Report based on the old one, but with the most recent data available.  The new Asset Report will contain the same Items as the original Report, as well as the same filters applied by any call to `/asset_report/filter`. By default, the new Asset Report will also use the same parameters you submitted with your original `/asset_report/create` request, but the original `days_requested` value and the values of any parameters in the `options` object can be overridden with new values. To change these arguments, simply supply new values for them in your request to `/asset_report/refresh`. Submit an empty string (\"\") for any previously-populated fields you would like set as empty.
     * @summary Refresh an Asset Report
     * @param {AssetReportRefreshRequest} assetReportRefreshRequest
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    assetReportRefresh(assetReportRefreshRequest: AssetReportRefreshRequest, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<AssetReportRefreshResponse>>;
    /**
     * The `/item/remove` endpoint allows you to invalidate an `access_token`, meaning you will not be able to create new Asset Reports with it. Removing an Item does not affect any Asset Reports or Audit Copies you have already created, which will remain accessible until you remove them specifically.  The `/asset_report/remove` endpoint allows you to remove an Asset Report. Removing an Asset Report invalidates its `asset_report_token`, meaning you will no longer be able to use it to access Report data or create new Audit Copies. Removing an Asset Report does not affect the underlying Items, but does invalidate any `audit_copy_tokens` associated with the Asset Report.
     * @summary Delete an Asset Report
     * @param {AssetReportRemoveRequest} assetReportRemoveRequest
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    assetReportRemove(assetReportRemoveRequest: AssetReportRemoveRequest, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<AssetReportRemoveResponse>>;
    /**
     * The `/auth/get` endpoint returns the bank account and bank identification numbers (such as routing numbers, for US accounts) associated with an Item\'s checking and savings accounts, along with high-level account data and balances when available.  Note: This request may take some time to complete if `auth` was not specified as an initial product when creating the Item. This is because Plaid must communicate directly with the institution to retrieve the data.
     * @summary Fetch auth data
     * @param {AuthGetRequest} authGetRequest
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    authGet(authGetRequest: AuthGetRequest, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<AuthGetResponse>>;
    /**
     * The `/accounts/balance/get` endpoint returns the real-time balance for each of an Item\'s accounts. While other endpoints may return a balance object, only `/accounts/balance/get` forces the available and current balance fields to be refreshed rather than cached. This endpoint can be used for existing Items that were added via any of Plaidâ€™s other products. This endpoint can be used as long as Link has been initialized with any other product, `balance` itself is not a product that can be used to initialize Link.
     * @summary Fetch real-time balance data
     * @param {BalanceGetRequest} balanceGetRequest
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    balanceGet(balanceGetRequest: BalanceGetRequest, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<BalanceGetResponse>>;
    /**
     * Send a request to the `/categories/get`  endpoint to get detailed information on categories returned by Plaid. This endpoint does not require authentication.
     * @summary Fetch Categories
     * @param {object} body
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    categoriesGet(body: object, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<CategoriesGetResponse>>;
    /**
     * This endpoint creates a Deposit Switch entity which will be persisted throughout the lifecycle of the switch.
     * @summary Create a Deposit Switch
     * @param {DepositSwitchCreateRequest} depositSwitchCreateRequest
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    depositSwitchCreate(depositSwitchCreateRequest: DepositSwitchCreateRequest, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<DepositSwitchCreateResponse>>;
    /**
     * This endpoint returns information related to how the consumer has configured their payroll allocation and the state of the switch. You can use this information to build logic related to the Consumerâ€™s direct deposit allocation preferences.
     * @summary Get a Deposit Switch
     * @param {DepositSwitchGetRequest} depositSwitchGetRequest
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    depositSwitchGet(depositSwitchGetRequest: DepositSwitchGetRequest, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<DepositSwitchGetResponse>>;
    /**
     * In order for the consumer to take action, you will need to create a public token representing the Deposit Switch. This token is used to initialize Link. It can be used one time and expires after 30 minutes.
     * @summary Create a Deposit Switch token
     * @param {DepositSwitchTokenCreateRequest} depositSwitchTokenCreateRequest
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    depositSwitchTokenCreate(depositSwitchTokenCreateRequest: DepositSwitchTokenCreateRequest, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<DepositSwitchTokenCreateResponse>>;
    /**
     * The `/identity/get` endpoint allows you to retrieve various account holder information on file with the financial institution, including names, emails, phone numbers, and addresses. Only name data is guaranteed to be returned; other fields will be empty arrays if not provided by the institution.  Note: This request may take some time to complete if identity was not specified as an initial product when creating the Item. This is because Plaid must communicate directly with the institution to retrieve the data.
     * @summary Fetch identity data
     * @param {IdentityGetRequest} identityGetRequest
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    identityGet(identityGetRequest: IdentityGetRequest, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<IdentityGetResponse>>;
    /**
     * Returns a JSON response containing details on all financial institutions currently supported by Plaid. Because Plaid supports thousands of institutions, results are paginated.  This data changes frequently. If you store it locally on your system, be sure to update it regularly.
     * @summary Get details of all supported institutions
     * @param {InstitutionsGetRequest} institutionsGetRequest
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    institutionsGet(institutionsGetRequest: InstitutionsGetRequest, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<InstitutionsGetResponse>>;
    /**
     * Returns a JSON response containing details on a specified financial institution currently supported by Plaid.
     * @summary Get details of an institution
     * @param {InstitutionsGetByIdRequest} institutionsGetByIdRequest
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    institutionsGetByID(institutionsGetByIdRequest: InstitutionsGetByIdRequest, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<InstitutionsGetByIdResponse>>;
    /**
     * Returns a JSON response containing details for all institutions that match the query parameters
     * @summary Search institutions
     * @param {InstitutionSearchRequest} institutionSearchRequest
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    institutionsSearch(institutionSearchRequest: InstitutionSearchRequest, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<InstitutionSearchResponse>>;
    /**
     * The `/investments/holdings/get` endpoint allows developers to receive user-authorized stock position data for `investment`-type accounts.
     * @summary Get Investment holdings
     * @param {InvestmentsHoldingsGetRequest} investmentsHoldingsGetRequest
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    investmentsHoldingsGet(investmentsHoldingsGetRequest: InvestmentsHoldingsGetRequest, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<InvestmentsHoldingsGetResponse>>;
    /**
     * The `/investments/transactions/get` endpoint allows developers to retrieve user-authorized transaction data for investment accounts.   Transactions are returned in reverse-chronological order, and the sequence of transaction ordering is stable and will not shift.  Due to the potentially large number of investment transactions associated with an Item, results are paginated. Manipulate the count and offset parameters in conjunction with the `total_investment_transactions` response body field to fetch all available investment transactions.
     * @summary Get investment transactions
     * @param {InvestmentsTransactionsGetRequest} investmentsTransactionsGetRequest
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    investmentsTransactionsGet(investmentsTransactionsGetRequest: InvestmentsTransactionsGetRequest, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<InvestmentsTransactionsGetResponse>>;
    /**
     * By default, the `access_token` associated with an Item does not expire and should be stored in a persistent, secure manner.  You can use the `/item/access_token/invalidate` endpoint to rotate the `access_token` associated with an Item. The endpoint returns a new `access_token` and immediately invalidates the previous `access_token`.
     * @summary Invalidate access_token
     * @param {ItemAccessTokenInvalidateRequest} itemAccessTokenInvalidateRequest
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    itemAccessTokenInvalidate(itemAccessTokenInvalidateRequest: ItemAccessTokenInvalidateRequest, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<ItemAccessTokenInvalidateResponse>>;
    /**
     * Returns information about the status of an Item.
     * @summary Fetch an Item
     * @param {ItemGetRequest} itemGetRequest
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    itemGet(itemGetRequest: ItemGetRequest, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<ItemGetResponse>>;
    /**
     * `/item/import` creates an Item via your Plaid Exchange Integration and returns an `access_token`. As part of an `/item/import` request, you will include a User ID (`user_auth.user_id`) and Authentication Token (`user_auth.auth_token`) that enable data aggregation through your Plaid Exchange API endpoints. These authentication principals are to be chosen by you.  Upon creating an Item via `/item/import`, Plaid will automatically begin an extraction of that Item through the Plaid Exchange infrastructure you have already integrated. This will automatically generate the Plaid native account ID for the account the user will switch their direct deposit to (`target_account_id`).
     * @summary Import Item
     * @param {ItemImportRequest} itemImportRequest
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    itemImport(itemImportRequest: ItemImportRequest, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<ItemImportResponse>>;
    /**
     * Exchange a Link `public_token` for an API `access_token`. Link hands off the `public_token` client-side via the `onSuccess` callback once a user has successfully created an Item. The `public_token` is ephemeral and expires after 30 minutes.   The response also includes an `item_id` that should be stored with the `access_token`. The `item_id` is used to identify an Item in a webhook. The `item_id` can also be retrieved by making an `/item/get` request.
     * @summary Exchange public token for an access token
     * @param {ItemPublicTokenExchangeRequest} itemPublicTokenExchangeRequest
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    itemPublicTokenExchange(itemPublicTokenExchangeRequest: ItemPublicTokenExchangeRequest, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<ItemPublicTokenExchangeResponse>>;
    /**
     * The `/item/remove`  endpoint allows you to remove an Item. Once removed, the `access_token`  associated with the Item is no longer valid and cannot be used to access any data that was associated with the Item.  Note that in the Development environment, issuing an `/item/remove`  request will not decrement your live credential count.
     * @summary Remove an Item
     * @param {ItemRemoveRequest} itemRemoveRequest
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    itemRemove(itemRemoveRequest: ItemRemoveRequest, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<ItemRemoveResponse>>;
    /**
     * The POST `/item/webhook/update` allows you to update the webhook URL associated with an Item. This request triggers a [`WEBHOOK_UPDATE_ACKNOWLEDGED`](/docs-beta/webhooks/#item-webhook-url-updated) webhook to the newly specified webhook URL.
     * @summary Update Webhook URL
     * @param {ItemWebhookUpdateRequest} itemWebhookUpdateRequest
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    itemWebhookUpdate(itemWebhookUpdateRequest: ItemWebhookUpdateRequest, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<ItemWebhookUpdateResponse>>;
    /**
     * The `/liabilities/get` endpoint returns various details about an Item with loan or credit accounts. Liabilities is supported for US and Canada accounts only. Currently supported account types are account type `credit` with account subtype `credit card` or `paypal`, and account type `loan` with account subtype `student`. To limit accounts listed in Link to types and subtypes supported by Liabilities, you can use the `account_filter` parameter when [creating a Link token](/docs-beta/api/tokens/#linktokencreate).   The types of information returned by Liabilities can include balances and due dates, loan terms, and account details such as original loan amount and guarantor. Data is refreshed approximately once per day; the latest data can be retrieved by calling `/liabilities/get`.  Note: This request may take some time to complete if `liabilities` was not specified as an initial product when creating the Item. This is because Plaid must communicate directly with the institution to retrieve the additional data.
     * @summary Fetch Liabilities data
     * @param {LiabilitiesGetRequest} liabilitiesGetRequest
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    liabilitiesGet(liabilitiesGetRequest: LiabilitiesGetRequest, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<LiabilitiesGetResponse>>;
    /**
     * The `/link/token/create` endpoint creates a `link_token`, which is required as a parameter when initializing Link. Once Link has been initialized, it returns a `public_token`, which can then be exchanged for an `access_token` via `/item/public_token/exchange` as part of the main Link flow.   A `link_token` generated by `/link/token/create` is also used to initialize other Link flows, such as the update mode flow for tokens with expired credentials, or the Payment Initiation (Europe) flow.
     * @summary Create Link Token
     * @param {LinkTokenCreateRequest} linkTokenCreateRequest
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    linkTokenCreate(linkTokenCreateRequest: LinkTokenCreateRequest, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<LinkTokenCreateResponse>>;
    /**
     * The `/link/token/get` endpoint gets information about a previously-created `link_token` using the `/link/token/create` endpoint. It can be useful for debugging purposes.
     * @summary Get Link Token
     * @param {LinkTokenGetRequest} linkTokenGetRequest
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    linkTokenGet(linkTokenGetRequest: LinkTokenGetRequest, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<LinkTokenGetResponse>>;
    /**
     * After creating a payment recipient, you can use the `/payment_initiation/payment/create` endpoint to create a payment to that recipient.  Payment can be one-time or standing order (recurring) and can be denominated in either EUR or GBP.  In general, EUR-denominated payments will be sent via SEPA Credit Transfer and GBP-denominated payments will be sent via the Faster Payments network, but the payment network used will be determined by the institution. Payments sent via Faster Payments will typically arrive immediately, while payments sent via SEPA Credit Transfer will typically arrive in one business day.  Standing orders (recurring payments) must be denominated in GBP and can only be sent to recipients in the UK. Once created, standing order payments will continue indefinitely and cannot be modified or canceled via the API. To end or modify a standing order payment, the end user should contact their bank.
     * @summary Create a payment
     * @param {PaymentInitiationPaymentCreateRequest} paymentInitiationPaymentCreateRequest
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    paymentInitiationPaymentCreate(paymentInitiationPaymentCreateRequest: PaymentInitiationPaymentCreateRequest, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<PaymentInitiationPaymentCreateResponse>>;
    /**
     * The `/payment_initiation/payment/list` endpoint can be used to retrieve all created payments. By default, the 10 most recent payments are returned. You can request more payments and paginate through the results using the optional `count` and `cursor` parameters.
     * @summary List payments
     * @param {PaymentInitiationPaymentListRequest} paymentInitiationPaymentListRequest
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    paymentInitiationPaymentList(paymentInitiationPaymentListRequest: PaymentInitiationPaymentListRequest, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<PaymentInitiationPaymentListResponse>>;
    /**
     * Create a payment recipient for payment initiation.  The recipient must be in Europe, within a country that is a member of the Single Euro Payment Area (SEPA).  For a standing order (recurring) payment, the recipient must be in the UK.  The endpoint is idempotent: if a developer has already made a request with the same payment details, Plaid will return the same `recipient_id`.   In the Sandbox environment, you can use the `/payment_initiation/recipient/create` endpoint to generate recipients. Programmatic recipient creation in the Development and Production environments can be done after approval by Plaid\'s compliance team. Please [contact sales](https://plaid.com/contact/) for approval.
     * @summary Create payment recipient
     * @param {PaymentInitiationRecipientCreateRequest} paymentInitiationRecipientCreateRequest
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    paymentInitiationRecipientCreate(paymentInitiationRecipientCreateRequest: PaymentInitiationRecipientCreateRequest, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<PaymentInitiationRecipientCreateResponse>>;
    /**
     * Get details about a payment recipient you have previously created.
     * @summary Get payment recipient
     * @param {PaymentInitiationRecipientGetRequest} paymentInitiationRecipientGetRequest
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    paymentInitiationRecipientGet(paymentInitiationRecipientGetRequest: PaymentInitiationRecipientGetRequest, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<PaymentInitiationRecipientGetResponse>>;
    /**
     * The `/payment_initiation/recipient/list` endpoint list the payment recipients that you have previously created.
     * @summary List payment recipients
     * @param {PaymentInitiationRecipientListRequest} paymentInitiationRecipientListRequest
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    paymentInitiationRecipientList(paymentInitiationRecipientListRequest: PaymentInitiationRecipientListRequest, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<PaymentInitiationRecipientListResponse>>;
    /**
     * The `/payment_initiation/payment/get` endpoint can be used to check the status of a payment, as well as to receive basic information such as recipient and payment amount. In the case of standing orders, the `/payment_initiation/payment/get` endpoint will provide information about the status of the overall standing order itself; the API cannot be used to retrieve payment status for individual payments within a standing order.
     * @summary Get payment details
     * @param {PaymentIntiationPaymentGetRequest} paymentIntiationPaymentGetRequest
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    paymentIntiationPaymentGet(paymentIntiationPaymentGetRequest: PaymentIntiationPaymentGetRequest, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<PaymentIntiationPaymentGetResponse>>;
    /**
     * Used to create a token suitable for sending to Apex to enable Plaid-Apex integrations.
     * @summary Create Apex bank account token
     * @param {ProcessorApexProcessorTokenCreateRequest} processorApexProcessorTokenCreateRequest
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    processorApexProcessorTokenCreate(processorApexProcessorTokenCreateRequest: ProcessorApexProcessorTokenCreateRequest, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<ProcessorTokenCreateResponse>>;
    /**
     * The `/processor/auth/get` endpoint returns the bank account and bank identification number (such as the routing number, for US accounts), for a checking or savings account that\'s associated with a given `processor_token`. The endpoint also returns high-level account data and balances when available.
     * @summary Get Auth data
     * @param {ProcessorAuthGetRequest} processorAuthGetRequest
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    processorAuthGet(processorAuthGetRequest: ProcessorAuthGetRequest, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<ProcessorAuthGetResponse>>;
    /**
     * The `/processor/balance/get` endpoint returns the real-time balance for each of an Item\'s accounts. While other endpoints may return a balance object, only `/processor/balance/get` forces the available and current balance fields to be refreshed rather than cached.
     * @summary Get Balance data
     * @param {ProcessorBalanceGetRequest} processorBalanceGetRequest The &#x60;/processor/balance/get&#x60; endpoint returns the real-time balance for the account associated with a given &#x60;processor_token&#x60;.  The current balance is the total amount of funds in the account. The available balance is the current balance less any outstanding holds or debits that have not yet posted to the account.  Note that not all institutions calculate the available balance. In the event that available balance is unavailable from the institution, Plaid will return an available balance value of &#x60;null&#x60;.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    processorBalanceGet(processorBalanceGetRequest: ProcessorBalanceGetRequest, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<ProcessorBalanceGetResponse>>;
    /**
     * The `/processor/identity/get` endpoint allows you to retrieve various account holder information on file with the financial institution, including names, emails, phone numbers, and addresses.
     * @summary Fetch Identity data
     * @param {ProcessorIdentityGetRequest} processorIdentityGetRequest
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    processorIdentityGet(processorIdentityGetRequest: ProcessorIdentityGetRequest, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<ProcessorIdentityGetResponse>>;
    /**
     * Used to create a token suitable for sending to Stripe to enable Plaid-Stripe integrations.
     * @summary Create Stripe bank account token
     * @param {ProcessorStripeBankAccountTokenCreateRequest} processorStripeBankAccountTokenCreateRequest
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    processorStripeBankAccountTokenCreate(processorStripeBankAccountTokenCreateRequest: ProcessorStripeBankAccountTokenCreateRequest, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<ProcessorStripeBankAccountTokenCreateResponse>>;
    /**
     * Used to create a token suitable for sending to one of Plaid\'s partners to enable integrations. Note that Stripe partnerships use bank account tokens instead; see `/processor/stripe/bank_account_token/create` for creating tokens for use with Stripe integrations.
     * @summary Create processor token
     * @param {ProcessorTokenCreateRequest} processorTokenCreateRequest
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    processorTokenCreate(processorTokenCreateRequest: ProcessorTokenCreateRequest, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<ProcessorTokenCreateResponse>>;
    /**
     * The `/sandbox/item/fire_webhook` endpoint is used to test that code correctly handles webhooks. Calling this endpoint triggers a Transactions `DEFAULT_UPDATE` webhook to be fired for a given Sandbox Item. If the Item does not support Transactions, a `SANDBOX_PRODUCT_NOT_ENABLED` error will result.
     * @summary Fire a test webhook
     * @param {SandboxItemFireWebhookRequest} sandboxItemFireWebhookRequest
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    sandboxItemFireWebhook(sandboxItemFireWebhookRequest: SandboxItemFireWebhookRequest, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<SandboxItemFireWebhookResponse>>;
    /**
     * `/sandbox/item/reset_login/` forces an Item into an `ITEM_LOGIN_REQUIRED` state in order to simulate an Item whose login is no longer valid. This makes it easy to test Link\'s [update mode](/docs-beta/link/update-mode) flow in the Sandbox environment.  After calling `/sandbox/item/reset_login`, You can then use Plaid Link update mode to restore the Item to a good state. An `ITEM_LOGIN_REQUIRED` webhook will also be fired after a call to this endpoint, if one is associated with the Item.   In the Sandbox, Items will transition to an `ITEM_LOGIN_REQUIRED` error state automatically after 30 days, even if this endpoint is not called.
     * @summary Force a Sandbox Item into an error state
     * @param {SandboxItemResetLoginRequest} sandboxItemResetLoginRequest
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    sandboxItemResetLogin(sandboxItemResetLoginRequest: SandboxItemResetLoginRequest, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<SandboxItemResetLoginResponse>>;
    /**
     * The `/sandbox/item/set_verification_status` endpoint can be used to change the verification status of an Item in in the Sandbox in order to simulate the Automated Micro-deposit flow.   Note that not all Plaid developer accounts are enabled for micro-deposit based verification by default. Your account must be enabled for this feature in order to test it in Sandbox. To enable this features or check your status, contact your account manager or [submit a product access Support ticket](https://dashboard.plaid.com/support/new/product-and-development/product-troubleshooting/request-product-access).  For more information on testing Automated Micro-deposits in Sandbox, see [Auth full coverage testing](/docs-beta/auth/coverage/testing#).
     * @summary Set verification status for Sandbox account
     * @param {SandboxItemSetVerificationStatusRequest} sandboxItemSetVerificationStatusRequest
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    sandboxItemSetVerificationStatus(sandboxItemSetVerificationStatusRequest: SandboxItemSetVerificationStatusRequest, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<SandboxItemSetVerificationStatusResponse>>;
    /**
     * Use the `/sandbox/public_token/create`  endpoint to create a valid `public_token`  for an arbitrary institution ID, initial products, and test credentials. The created `public_token` maps to a new Sandbox Item. You can then call `/item/public_token/exchange` to exchange the `public_token` for an `access_token` and perform all API actions. `/sandbox/public_token/create` can also be used with the [`user_custom` test username](/docs-beta/sandbox/user-custom) to generate a test account with custom data.
     * @summary Create a test Item
     * @param {SandboxPublicTokenCreateRequest} sandboxPublicTokenCreateRequest
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    sandboxPublicTokenCreate(sandboxPublicTokenCreateRequest: SandboxPublicTokenCreateRequest, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<SandboxPublicTokenCreateResponse>>;
    /**
     * The `/transactions/get` endpoint allows developers to receive user-authorized transaction data for credit, depository, and some loan-type accounts (the list of loan-type accounts supported is the same as for Liabilities; for details, see the `/liabilities/get` endpoint). For transaction history from investments accounts, use the [Investments endpoint](/docs-beta/api/products#investments) instead. Transaction data is standardized across financial institutions, and in many cases transactions are linked to a clean name, entity type, location, and category. Similarly, account data is standardized and returned with a clean name, number, balance, and other meta information where available.   Transactions are returned in reverse-chronological order, and the sequence of transaction ordering is stable and will not shift. Transactions are immutable but can be removed altogether by the institution; a removed transaction will no longer appear in `/transactions/get`.  Due to the potentially large number of transactions associated with an Item, results are paginated. Manipulate the `count` and `offset` parameters in conjunction with the `total_transactions` response body field to fetch all available transactions.  Note that data may not be immediately available to `/transactions/get`. Plaid will begin to prepare transactions data upon Item link, if Link was initialized with `transactions`, or upon the first call to `/transactions/get`, if it wasn\'t. To be alerted when transaction data is ready to be fetched, listen for the [`INITIAL_UPDATE`](/docs-beta/api/webhooks#transactions-initial_update) and [`HISTORICAL_UPDATE`](/docs-beta/api/webhooks#transactions-historical_update) webhooks. If no transaction history is ready when `/transactions/get` is called, it will return a `PRODUCT_NOT_READY` error.
     * @summary Fetch transaction data
     * @param {TransactionsGetRequest} transactionsGetRequest
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    transactionsGet(transactionsGetRequest: TransactionsGetRequest, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<TransactionsGetResponse>>;
    /**
     * `/transactions/refresh` is an optional endpoint for users of the Transactions product. It initiates an on-demand extraction to fetch the newest transactions for an Item. This on-demand extraction takes place in addition to the periodic extractions that automatically occur multiple times a day for any Transactions-enabled Item. If changes to transactions are discovered after calling `/transactions/refresh`, Plaid will fire a webhook: [`TRANSACTIONS_REMOVED`](/docs-beta/api/webhooks#deleted-transactions-detected) will be fired if any removed transactions are detected, and [`DEFAULT_UPDATE`](/docs-beta/api/webhooks#transactions-default_update) will be fired if any new transactions are detected. New transactions can be fetched by calling `/transactions/get`.  Access to `/transactions/refresh` in Production is specific to certain pricing plans. If you cannot access `/transactions/refresh` in Production, [contact Sales](https://www.plaid.com/contact) for assistance.
     * @summary Refresh transaction data
     * @param {TransactionsRefreshRequest} transactionsRefreshRequest
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    transactionsRefresh(transactionsRefreshRequest: TransactionsRefreshRequest, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<TransactionsRefreshResponse>>;
    /**
     * Plaid signs all outgoing webhooks and provides JSON Web Tokens (JWTs) so that you can verify the authenticity of any incoming webhooks to your application. A message signature is included in the `Plaid-Verification` header.  The `/webhook_verification_key/get` endpoint provides a JSON Web Key (JWK) that can be used to verify a JWT.
     * @summary Get webhook verification key
     * @param {WebhookVerificationKeyGetRequest} webhookVerificationKeyGetRequest
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    webhookVerificationKeyGet(webhookVerificationKeyGetRequest: WebhookVerificationKeyGetRequest, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<WebhookVerificationKeyGetResponse>>;
};
/**
 * PlaidApi - factory interface
 * @export
 */
export declare const PlaidApiFactory: (configuration?: Configuration, basePath?: string, axios?: AxiosInstance) => {
    /**
     * The `/accounts/get`  endpoint can be used to retrieve information for any linked Item. Note that some information is nullable. Plaid will only return active bank accounts, i.e. accounts that are not closed and are capable of carrying a balance.
     * @summary Retrieve accounts
     * @param {AccountsGetRequest} accountsGetRequest
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    accountsGet(accountsGetRequest: AccountsGetRequest, options?: any): AxiosPromise<AccountsGetResponse>;
    /**
     * Plaid can provide an Audit Copy of any Asset Report directly to a participating third party on your behalf. For example, Plaid can supply an Audit Copy directly to Fannie Mae on your behalf if you participate in the Day 1 Certaintyâ„¢ program. An Audit Copy contains the same underlying data as the Asset Report.   To grant access to an Audit Copy, use the `/asset_report/audit_copy/create` endpoint to create an `audit_copy_token` and then pass that token to the third party who needs access. Each third party has its own `auditor_id`, for example `fannie_mae`. Youâ€™ll need to create a separate Audit Copy for each third party to whom you want to grant access to the Report.
     * @summary Create Asset Report Audit Copy
     * @param {AssetReportAuditCopyCreateRequest} assetReportAuditCopyCreateRequest
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    assetReportAuditCopyCreate(assetReportAuditCopyCreateRequest: AssetReportAuditCopyCreateRequest, options?: any): AxiosPromise<AssetReportAuditCopyCreateResponse>;
    /**
     *
     * @summary Get an Asset Report Audit Copy
     * @param {AssetReportAuditCopyGetRequest} assetReportAuditCopyGetRequest
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    assetReportAuditCopyGet(assetReportAuditCopyGetRequest: AssetReportAuditCopyGetRequest, options?: any): AxiosPromise<AssetReportGetResponse>;
    /**
     * The `/asset_report/audit_copy/remove` endpoint allows you to remove an Audit Copy. Removing an Audit Copy invalidates the `audit_copy_token` associated with it, meaning both you and any third parties holding the token will no longer be able to use it to access Report data. Items associated with the Asset Report, the Asset Report itself and other Audit Copies of it are not affected and will remain accessible after removing the given Audit Copy.
     * @summary Remove Asset Report Audit Copy
     * @param {AssetReportAuditCopyRemoveRequest} assetReportAuditCopyRemoveRequest
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    assetReportAuditCopyRemove(assetReportAuditCopyRemoveRequest: AssetReportAuditCopyRemoveRequest, options?: any): AxiosPromise<AssetReportAuditCopyRemoveResponse>;
    /**
     * The `/asset_report/create` endpoint initiates the process of creating an Asset Report, which can then be retrieved by passing the `asset_report_token` return value to the `/asset_report/get` or `/asset_report/pdf/get` endpoints.   The Asset Report takes some time to be created and is not available immediately after calling `/asset_report/create`. When the Asset Report is ready to be retrieved using `/asset_report/get` or `/asset_report/pdf/get`, Plaid will fire a `PRODUCT_READY` webhook. For full details of the webhook schema, see [Asset Report webhooks](/docs-beta/api/webhooks/#Assets-webhooks).  The `/asset_report/create` endpoint creates an Asset Report at a moment in time. Asset Reports are immutable. To get an updated Asset Report, use the `/asset_report/refresh` endpoint.
     * @summary Create an Asset Report
     * @param {AssetReportCreateRequest} assetReportCreateRequest
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    assetReportCreate(assetReportCreateRequest: AssetReportCreateRequest, options?: any): AxiosPromise<AssetReportCreateResponse>;
    /**
     * By default, an Asset Report will contain all of the accounts on a given Item. In some cases, you may not want the Asset Report to contain all accounts. For example, you might have the end user choose which accounts are relevant in Link using the Select Account view, which you can enable in the dashboard. Or, you might always exclude certain account types or subtypes, which you can identify by using the `/accounts/get` endpoint. To narrow an Asset Report to only a subset of accounts, use the `/asset_report/filter` endpoint.  To exclude certain Accounts from an Asset Report, first use the `/asset_report/create` endpoint to create the report, then send the `asset_report_token` along with a list of `account_ids` to exclude to the `/asset_report/filter` endpoint, to create a new Asset Report which contains only a subset of the original Asset Report\'s data.  Because Asset Reports are immutable, calling `/asset_report/filter` does not alter the original Asset Report in any way; rather, `/asset_report/filter` creates a new Asset Report with a new token and id. Asset Reports created via `/asset_report/filter` do not contain new Asset data, and are not billed.  Plaid will fire a [`PRODUCT_READY`](/docs-beta/api/webhooks) webhook once generation of the filtered Asset Report has completed.
     * @summary Filter Asset Report
     * @param {AssetReportFilterRequest} assetReportFilterRequest
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    assetReportFilter(assetReportFilterRequest: AssetReportFilterRequest, options?: any): AxiosPromise<AssetReportFilterResponse>;
    /**
     * The `/asset_report/get` endpoint retrieves the Asset Report in JSON format. Before calling `/asset_report/get`, you must first create the Asset Report using `/asset_report/create` (or filter an Asset Report using `/asset_report/filter`) and then wait for the [`PRODUCT_READY`](/docs-beta/api/webhooks) webhook to fire, indicating that the Report is ready to be retrieved.  By default, an Asset Report includes transaction descriptions as returned by the bank, as opposed to parsed and categorized by Plaid. You can also receive cleaned and categorized transactions, as well as additional insights like merchant name or location information. We call this an Asset Report with Insights. An Asset Report with Insights provides transaction category, location, and merchant information in addition to the transaction strings provided in a standard Asset Report.  To retrieve an Asset Report with Insights, call the `/asset_report/get` endpoint with `include_insights` set to `true`. Note that you will need to [contact us](https://dashboard.plaid.com/support) to get access to this feature.
     * @summary Get an Asset Report
     * @param {AssetReportGetRequest} assetReportGetRequest
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    assetReportGet(assetReportGetRequest: AssetReportGetRequest, options?: any): AxiosPromise<AssetReportGetResponse>;
    /**
     * The `/asset_report/pdf/get` endpoint retrieves the Asset Report in PDF format. Before calling `/asset_report/pdf/get`, you must first create the Asset Report using `/asset_report/create` (or filter an Asset Report using `/asset_report/filter`) and then wait for the [`PRODUCT_READY`](/docs-beta/api/webhooks) webhook to fire, indicating that the Report is ready to be retrieved.  By default, an Asset Report includes transaction descriptions as returned by the bank, as opposed to parsed and categorized by Plaid. You can also receive cleaned and categorized transactions, as well as additional insights like merchant name or location information. We call this an Asset Report with Insights. An Asset Report with Insights provides transaction category, location, and merchant information in addition to the transaction strings provided in a standard Asset Report.  To retrieve an Asset Report with Insights, call the `/asset_report/pdf/get` endpoint with `include_insights` set to `true`. Note that you will need to [contact us](https://dashboard.plaid.com/support) to get access to this feature.  The response to `/asset_report/pdf/get` is the PDF binary data. The `request_id`  is returned in the `Plaid-Request-ID` header.  [View a sample PDF Asset Report with Insights](https://plaid.com/documents/sample-asset-report.pdf).
     * @summary Get a PDF Asset Report
     * @param {AssetReportPDFGetRequest} assetReportPDFGetRequest
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    assetReportPDFGet(assetReportPDFGetRequest: AssetReportPDFGetRequest, options?: any): AxiosPromise<any>;
    /**
     * An Asset Report is an immutable snapshot of a user\'s assets. In order to \"refresh\" an Asset Report you created previously, you can use the `/asset_report/refresh` endpoint to create a new Asset Report based on the old one, but with the most recent data available.  The new Asset Report will contain the same Items as the original Report, as well as the same filters applied by any call to `/asset_report/filter`. By default, the new Asset Report will also use the same parameters you submitted with your original `/asset_report/create` request, but the original `days_requested` value and the values of any parameters in the `options` object can be overridden with new values. To change these arguments, simply supply new values for them in your request to `/asset_report/refresh`. Submit an empty string (\"\") for any previously-populated fields you would like set as empty.
     * @summary Refresh an Asset Report
     * @param {AssetReportRefreshRequest} assetReportRefreshRequest
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    assetReportRefresh(assetReportRefreshRequest: AssetReportRefreshRequest, options?: any): AxiosPromise<AssetReportRefreshResponse>;
    /**
     * The `/item/remove` endpoint allows you to invalidate an `access_token`, meaning you will not be able to create new Asset Reports with it. Removing an Item does not affect any Asset Reports or Audit Copies you have already created, which will remain accessible until you remove them specifically.  The `/asset_report/remove` endpoint allows you to remove an Asset Report. Removing an Asset Report invalidates its `asset_report_token`, meaning you will no longer be able to use it to access Report data or create new Audit Copies. Removing an Asset Report does not affect the underlying Items, but does invalidate any `audit_copy_tokens` associated with the Asset Report.
     * @summary Delete an Asset Report
     * @param {AssetReportRemoveRequest} assetReportRemoveRequest
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    assetReportRemove(assetReportRemoveRequest: AssetReportRemoveRequest, options?: any): AxiosPromise<AssetReportRemoveResponse>;
    /**
     * The `/auth/get` endpoint returns the bank account and bank identification numbers (such as routing numbers, for US accounts) associated with an Item\'s checking and savings accounts, along with high-level account data and balances when available.  Note: This request may take some time to complete if `auth` was not specified as an initial product when creating the Item. This is because Plaid must communicate directly with the institution to retrieve the data.
     * @summary Fetch auth data
     * @param {AuthGetRequest} authGetRequest
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    authGet(authGetRequest: AuthGetRequest, options?: any): AxiosPromise<AuthGetResponse>;
    /**
     * The `/accounts/balance/get` endpoint returns the real-time balance for each of an Item\'s accounts. While other endpoints may return a balance object, only `/accounts/balance/get` forces the available and current balance fields to be refreshed rather than cached. This endpoint can be used for existing Items that were added via any of Plaidâ€™s other products. This endpoint can be used as long as Link has been initialized with any other product, `balance` itself is not a product that can be used to initialize Link.
     * @summary Fetch real-time balance data
     * @param {BalanceGetRequest} balanceGetRequest
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    balanceGet(balanceGetRequest: BalanceGetRequest, options?: any): AxiosPromise<BalanceGetResponse>;
    /**
     * Send a request to the `/categories/get`  endpoint to get detailed information on categories returned by Plaid. This endpoint does not require authentication.
     * @summary Fetch Categories
     * @param {object} body
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    categoriesGet(body: object, options?: any): AxiosPromise<CategoriesGetResponse>;
    /**
     * This endpoint creates a Deposit Switch entity which will be persisted throughout the lifecycle of the switch.
     * @summary Create a Deposit Switch
     * @param {DepositSwitchCreateRequest} depositSwitchCreateRequest
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    depositSwitchCreate(depositSwitchCreateRequest: DepositSwitchCreateRequest, options?: any): AxiosPromise<DepositSwitchCreateResponse>;
    /**
     * This endpoint returns information related to how the consumer has configured their payroll allocation and the state of the switch. You can use this information to build logic related to the Consumerâ€™s direct deposit allocation preferences.
     * @summary Get a Deposit Switch
     * @param {DepositSwitchGetRequest} depositSwitchGetRequest
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    depositSwitchGet(depositSwitchGetRequest: DepositSwitchGetRequest, options?: any): AxiosPromise<DepositSwitchGetResponse>;
    /**
     * In order for the consumer to take action, you will need to create a public token representing the Deposit Switch. This token is used to initialize Link. It can be used one time and expires after 30 minutes.
     * @summary Create a Deposit Switch token
     * @param {DepositSwitchTokenCreateRequest} depositSwitchTokenCreateRequest
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    depositSwitchTokenCreate(depositSwitchTokenCreateRequest: DepositSwitchTokenCreateRequest, options?: any): AxiosPromise<DepositSwitchTokenCreateResponse>;
    /**
     * The `/identity/get` endpoint allows you to retrieve various account holder information on file with the financial institution, including names, emails, phone numbers, and addresses. Only name data is guaranteed to be returned; other fields will be empty arrays if not provided by the institution.  Note: This request may take some time to complete if identity was not specified as an initial product when creating the Item. This is because Plaid must communicate directly with the institution to retrieve the data.
     * @summary Fetch identity data
     * @param {IdentityGetRequest} identityGetRequest
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    identityGet(identityGetRequest: IdentityGetRequest, options?: any): AxiosPromise<IdentityGetResponse>;
    /**
     * Returns a JSON response containing details on all financial institutions currently supported by Plaid. Because Plaid supports thousands of institutions, results are paginated.  This data changes frequently. If you store it locally on your system, be sure to update it regularly.
     * @summary Get details of all supported institutions
     * @param {InstitutionsGetRequest} institutionsGetRequest
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    institutionsGet(institutionsGetRequest: InstitutionsGetRequest, options?: any): AxiosPromise<InstitutionsGetResponse>;
    /**
     * Returns a JSON response containing details on a specified financial institution currently supported by Plaid.
     * @summary Get details of an institution
     * @param {InstitutionsGetByIdRequest} institutionsGetByIdRequest
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    institutionsGetByID(institutionsGetByIdRequest: InstitutionsGetByIdRequest, options?: any): AxiosPromise<InstitutionsGetByIdResponse>;
    /**
     * Returns a JSON response containing details for all institutions that match the query parameters
     * @summary Search institutions
     * @param {InstitutionSearchRequest} institutionSearchRequest
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    institutionsSearch(institutionSearchRequest: InstitutionSearchRequest, options?: any): AxiosPromise<InstitutionSearchResponse>;
    /**
     * The `/investments/holdings/get` endpoint allows developers to receive user-authorized stock position data for `investment`-type accounts.
     * @summary Get Investment holdings
     * @param {InvestmentsHoldingsGetRequest} investmentsHoldingsGetRequest
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    investmentsHoldingsGet(investmentsHoldingsGetRequest: InvestmentsHoldingsGetRequest, options?: any): AxiosPromise<InvestmentsHoldingsGetResponse>;
    /**
     * The `/investments/transactions/get` endpoint allows developers to retrieve user-authorized transaction data for investment accounts.   Transactions are returned in reverse-chronological order, and the sequence of transaction ordering is stable and will not shift.  Due to the potentially large number of investment transactions associated with an Item, results are paginated. Manipulate the count and offset parameters in conjunction with the `total_investment_transactions` response body field to fetch all available investment transactions.
     * @summary Get investment transactions
     * @param {InvestmentsTransactionsGetRequest} investmentsTransactionsGetRequest
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    investmentsTransactionsGet(investmentsTransactionsGetRequest: InvestmentsTransactionsGetRequest, options?: any): AxiosPromise<InvestmentsTransactionsGetResponse>;
    /**
     * By default, the `access_token` associated with an Item does not expire and should be stored in a persistent, secure manner.  You can use the `/item/access_token/invalidate` endpoint to rotate the `access_token` associated with an Item. The endpoint returns a new `access_token` and immediately invalidates the previous `access_token`.
     * @summary Invalidate access_token
     * @param {ItemAccessTokenInvalidateRequest} itemAccessTokenInvalidateRequest
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    itemAccessTokenInvalidate(itemAccessTokenInvalidateRequest: ItemAccessTokenInvalidateRequest, options?: any): AxiosPromise<ItemAccessTokenInvalidateResponse>;
    /**
     * Returns information about the status of an Item.
     * @summary Fetch an Item
     * @param {ItemGetRequest} itemGetRequest
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    itemGet(itemGetRequest: ItemGetRequest, options?: any): AxiosPromise<ItemGetResponse>;
    /**
     * `/item/import` creates an Item via your Plaid Exchange Integration and returns an `access_token`. As part of an `/item/import` request, you will include a User ID (`user_auth.user_id`) and Authentication Token (`user_auth.auth_token`) that enable data aggregation through your Plaid Exchange API endpoints. These authentication principals are to be chosen by you.  Upon creating an Item via `/item/import`, Plaid will automatically begin an extraction of that Item through the Plaid Exchange infrastructure you have already integrated. This will automatically generate the Plaid native account ID for the account the user will switch their direct deposit to (`target_account_id`).
     * @summary Import Item
     * @param {ItemImportRequest} itemImportRequest
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    itemImport(itemImportRequest: ItemImportRequest, options?: any): AxiosPromise<ItemImportResponse>;
    /**
     * Exchange a Link `public_token` for an API `access_token`. Link hands off the `public_token` client-side via the `onSuccess` callback once a user has successfully created an Item. The `public_token` is ephemeral and expires after 30 minutes.   The response also includes an `item_id` that should be stored with the `access_token`. The `item_id` is used to identify an Item in a webhook. The `item_id` can also be retrieved by making an `/item/get` request.
     * @summary Exchange public token for an access token
     * @param {ItemPublicTokenExchangeRequest} itemPublicTokenExchangeRequest
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    itemPublicTokenExchange(itemPublicTokenExchangeRequest: ItemPublicTokenExchangeRequest, options?: any): AxiosPromise<ItemPublicTokenExchangeResponse>;
    /**
     * The `/item/remove`  endpoint allows you to remove an Item. Once removed, the `access_token`  associated with the Item is no longer valid and cannot be used to access any data that was associated with the Item.  Note that in the Development environment, issuing an `/item/remove`  request will not decrement your live credential count.
     * @summary Remove an Item
     * @param {ItemRemoveRequest} itemRemoveRequest
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    itemRemove(itemRemoveRequest: ItemRemoveRequest, options?: any): AxiosPromise<ItemRemoveResponse>;
    /**
     * The POST `/item/webhook/update` allows you to update the webhook URL associated with an Item. This request triggers a [`WEBHOOK_UPDATE_ACKNOWLEDGED`](/docs-beta/webhooks/#item-webhook-url-updated) webhook to the newly specified webhook URL.
     * @summary Update Webhook URL
     * @param {ItemWebhookUpdateRequest} itemWebhookUpdateRequest
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    itemWebhookUpdate(itemWebhookUpdateRequest: ItemWebhookUpdateRequest, options?: any): AxiosPromise<ItemWebhookUpdateResponse>;
    /**
     * The `/liabilities/get` endpoint returns various details about an Item with loan or credit accounts. Liabilities is supported for US and Canada accounts only. Currently supported account types are account type `credit` with account subtype `credit card` or `paypal`, and account type `loan` with account subtype `student`. To limit accounts listed in Link to types and subtypes supported by Liabilities, you can use the `account_filter` parameter when [creating a Link token](/docs-beta/api/tokens/#linktokencreate).   The types of information returned by Liabilities can include balances and due dates, loan terms, and account details such as original loan amount and guarantor. Data is refreshed approximately once per day; the latest data can be retrieved by calling `/liabilities/get`.  Note: This request may take some time to complete if `liabilities` was not specified as an initial product when creating the Item. This is because Plaid must communicate directly with the institution to retrieve the additional data.
     * @summary Fetch Liabilities data
     * @param {LiabilitiesGetRequest} liabilitiesGetRequest
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    liabilitiesGet(liabilitiesGetRequest: LiabilitiesGetRequest, options?: any): AxiosPromise<LiabilitiesGetResponse>;
    /**
     * The `/link/token/create` endpoint creates a `link_token`, which is required as a parameter when initializing Link. Once Link has been initialized, it returns a `public_token`, which can then be exchanged for an `access_token` via `/item/public_token/exchange` as part of the main Link flow.   A `link_token` generated by `/link/token/create` is also used to initialize other Link flows, such as the update mode flow for tokens with expired credentials, or the Payment Initiation (Europe) flow.
     * @summary Create Link Token
     * @param {LinkTokenCreateRequest} linkTokenCreateRequest
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    linkTokenCreate(linkTokenCreateRequest: LinkTokenCreateRequest, options?: any): AxiosPromise<LinkTokenCreateResponse>;
    /**
     * The `/link/token/get` endpoint gets information about a previously-created `link_token` using the `/link/token/create` endpoint. It can be useful for debugging purposes.
     * @summary Get Link Token
     * @param {LinkTokenGetRequest} linkTokenGetRequest
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    linkTokenGet(linkTokenGetRequest: LinkTokenGetRequest, options?: any): AxiosPromise<LinkTokenGetResponse>;
    /**
     * After creating a payment recipient, you can use the `/payment_initiation/payment/create` endpoint to create a payment to that recipient.  Payment can be one-time or standing order (recurring) and can be denominated in either EUR or GBP.  In general, EUR-denominated payments will be sent via SEPA Credit Transfer and GBP-denominated payments will be sent via the Faster Payments network, but the payment network used will be determined by the institution. Payments sent via Faster Payments will typically arrive immediately, while payments sent via SEPA Credit Transfer will typically arrive in one business day.  Standing orders (recurring payments) must be denominated in GBP and can only be sent to recipients in the UK. Once created, standing order payments will continue indefinitely and cannot be modified or canceled via the API. To end or modify a standing order payment, the end user should contact their bank.
     * @summary Create a payment
     * @param {PaymentInitiationPaymentCreateRequest} paymentInitiationPaymentCreateRequest
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    paymentInitiationPaymentCreate(paymentInitiationPaymentCreateRequest: PaymentInitiationPaymentCreateRequest, options?: any): AxiosPromise<PaymentInitiationPaymentCreateResponse>;
    /**
     * The `/payment_initiation/payment/list` endpoint can be used to retrieve all created payments. By default, the 10 most recent payments are returned. You can request more payments and paginate through the results using the optional `count` and `cursor` parameters.
     * @summary List payments
     * @param {PaymentInitiationPaymentListRequest} paymentInitiationPaymentListRequest
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    paymentInitiationPaymentList(paymentInitiationPaymentListRequest: PaymentInitiationPaymentListRequest, options?: any): AxiosPromise<PaymentInitiationPaymentListResponse>;
    /**
     * Create a payment recipient for payment initiation.  The recipient must be in Europe, within a country that is a member of the Single Euro Payment Area (SEPA).  For a standing order (recurring) payment, the recipient must be in the UK.  The endpoint is idempotent: if a developer has already made a request with the same payment details, Plaid will return the same `recipient_id`.   In the Sandbox environment, you can use the `/payment_initiation/recipient/create` endpoint to generate recipients. Programmatic recipient creation in the Development and Production environments can be done after approval by Plaid\'s compliance team. Please [contact sales](https://plaid.com/contact/) for approval.
     * @summary Create payment recipient
     * @param {PaymentInitiationRecipientCreateRequest} paymentInitiationRecipientCreateRequest
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    paymentInitiationRecipientCreate(paymentInitiationRecipientCreateRequest: PaymentInitiationRecipientCreateRequest, options?: any): AxiosPromise<PaymentInitiationRecipientCreateResponse>;
    /**
     * Get details about a payment recipient you have previously created.
     * @summary Get payment recipient
     * @param {PaymentInitiationRecipientGetRequest} paymentInitiationRecipientGetRequest
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    paymentInitiationRecipientGet(paymentInitiationRecipientGetRequest: PaymentInitiationRecipientGetRequest, options?: any): AxiosPromise<PaymentInitiationRecipientGetResponse>;
    /**
     * The `/payment_initiation/recipient/list` endpoint list the payment recipients that you have previously created.
     * @summary List payment recipients
     * @param {PaymentInitiationRecipientListRequest} paymentInitiationRecipientListRequest
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    paymentInitiationRecipientList(paymentInitiationRecipientListRequest: PaymentInitiationRecipientListRequest, options?: any): AxiosPromise<PaymentInitiationRecipientListResponse>;
    /**
     * The `/payment_initiation/payment/get` endpoint can be used to check the status of a payment, as well as to receive basic information such as recipient and payment amount. In the case of standing orders, the `/payment_initiation/payment/get` endpoint will provide information about the status of the overall standing order itself; the API cannot be used to retrieve payment status for individual payments within a standing order.
     * @summary Get payment details
     * @param {PaymentIntiationPaymentGetRequest} paymentIntiationPaymentGetRequest
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    paymentIntiationPaymentGet(paymentIntiationPaymentGetRequest: PaymentIntiationPaymentGetRequest, options?: any): AxiosPromise<PaymentIntiationPaymentGetResponse>;
    /**
     * Used to create a token suitable for sending to Apex to enable Plaid-Apex integrations.
     * @summary Create Apex bank account token
     * @param {ProcessorApexProcessorTokenCreateRequest} processorApexProcessorTokenCreateRequest
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    processorApexProcessorTokenCreate(processorApexProcessorTokenCreateRequest: ProcessorApexProcessorTokenCreateRequest, options?: any): AxiosPromise<ProcessorTokenCreateResponse>;
    /**
     * The `/processor/auth/get` endpoint returns the bank account and bank identification number (such as the routing number, for US accounts), for a checking or savings account that\'s associated with a given `processor_token`. The endpoint also returns high-level account data and balances when available.
     * @summary Get Auth data
     * @param {ProcessorAuthGetRequest} processorAuthGetRequest
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    processorAuthGet(processorAuthGetRequest: ProcessorAuthGetRequest, options?: any): AxiosPromise<ProcessorAuthGetResponse>;
    /**
     * The `/processor/balance/get` endpoint returns the real-time balance for each of an Item\'s accounts. While other endpoints may return a balance object, only `/processor/balance/get` forces the available and current balance fields to be refreshed rather than cached.
     * @summary Get Balance data
     * @param {ProcessorBalanceGetRequest} processorBalanceGetRequest The &#x60;/processor/balance/get&#x60; endpoint returns the real-time balance for the account associated with a given &#x60;processor_token&#x60;.  The current balance is the total amount of funds in the account. The available balance is the current balance less any outstanding holds or debits that have not yet posted to the account.  Note that not all institutions calculate the available balance. In the event that available balance is unavailable from the institution, Plaid will return an available balance value of &#x60;null&#x60;.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    processorBalanceGet(processorBalanceGetRequest: ProcessorBalanceGetRequest, options?: any): AxiosPromise<ProcessorBalanceGetResponse>;
    /**
     * The `/processor/identity/get` endpoint allows you to retrieve various account holder information on file with the financial institution, including names, emails, phone numbers, and addresses.
     * @summary Fetch Identity data
     * @param {ProcessorIdentityGetRequest} processorIdentityGetRequest
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    processorIdentityGet(processorIdentityGetRequest: ProcessorIdentityGetRequest, options?: any): AxiosPromise<ProcessorIdentityGetResponse>;
    /**
     * Used to create a token suitable for sending to Stripe to enable Plaid-Stripe integrations.
     * @summary Create Stripe bank account token
     * @param {ProcessorStripeBankAccountTokenCreateRequest} processorStripeBankAccountTokenCreateRequest
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    processorStripeBankAccountTokenCreate(processorStripeBankAccountTokenCreateRequest: ProcessorStripeBankAccountTokenCreateRequest, options?: any): AxiosPromise<ProcessorStripeBankAccountTokenCreateResponse>;
    /**
     * Used to create a token suitable for sending to one of Plaid\'s partners to enable integrations. Note that Stripe partnerships use bank account tokens instead; see `/processor/stripe/bank_account_token/create` for creating tokens for use with Stripe integrations.
     * @summary Create processor token
     * @param {ProcessorTokenCreateRequest} processorTokenCreateRequest
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    processorTokenCreate(processorTokenCreateRequest: ProcessorTokenCreateRequest, options?: any): AxiosPromise<ProcessorTokenCreateResponse>;
    /**
     * The `/sandbox/item/fire_webhook` endpoint is used to test that code correctly handles webhooks. Calling this endpoint triggers a Transactions `DEFAULT_UPDATE` webhook to be fired for a given Sandbox Item. If the Item does not support Transactions, a `SANDBOX_PRODUCT_NOT_ENABLED` error will result.
     * @summary Fire a test webhook
     * @param {SandboxItemFireWebhookRequest} sandboxItemFireWebhookRequest
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    sandboxItemFireWebhook(sandboxItemFireWebhookRequest: SandboxItemFireWebhookRequest, options?: any): AxiosPromise<SandboxItemFireWebhookResponse>;
    /**
     * `/sandbox/item/reset_login/` forces an Item into an `ITEM_LOGIN_REQUIRED` state in order to simulate an Item whose login is no longer valid. This makes it easy to test Link\'s [update mode](/docs-beta/link/update-mode) flow in the Sandbox environment.  After calling `/sandbox/item/reset_login`, You can then use Plaid Link update mode to restore the Item to a good state. An `ITEM_LOGIN_REQUIRED` webhook will also be fired after a call to this endpoint, if one is associated with the Item.   In the Sandbox, Items will transition to an `ITEM_LOGIN_REQUIRED` error state automatically after 30 days, even if this endpoint is not called.
     * @summary Force a Sandbox Item into an error state
     * @param {SandboxItemResetLoginRequest} sandboxItemResetLoginRequest
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    sandboxItemResetLogin(sandboxItemResetLoginRequest: SandboxItemResetLoginRequest, options?: any): AxiosPromise<SandboxItemResetLoginResponse>;
    /**
     * The `/sandbox/item/set_verification_status` endpoint can be used to change the verification status of an Item in in the Sandbox in order to simulate the Automated Micro-deposit flow.   Note that not all Plaid developer accounts are enabled for micro-deposit based verification by default. Your account must be enabled for this feature in order to test it in Sandbox. To enable this features or check your status, contact your account manager or [submit a product access Support ticket](https://dashboard.plaid.com/support/new/product-and-development/product-troubleshooting/request-product-access).  For more information on testing Automated Micro-deposits in Sandbox, see [Auth full coverage testing](/docs-beta/auth/coverage/testing#).
     * @summary Set verification status for Sandbox account
     * @param {SandboxItemSetVerificationStatusRequest} sandboxItemSetVerificationStatusRequest
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    sandboxItemSetVerificationStatus(sandboxItemSetVerificationStatusRequest: SandboxItemSetVerificationStatusRequest, options?: any): AxiosPromise<SandboxItemSetVerificationStatusResponse>;
    /**
     * Use the `/sandbox/public_token/create`  endpoint to create a valid `public_token`  for an arbitrary institution ID, initial products, and test credentials. The created `public_token` maps to a new Sandbox Item. You can then call `/item/public_token/exchange` to exchange the `public_token` for an `access_token` and perform all API actions. `/sandbox/public_token/create` can also be used with the [`user_custom` test username](/docs-beta/sandbox/user-custom) to generate a test account with custom data.
     * @summary Create a test Item
     * @param {SandboxPublicTokenCreateRequest} sandboxPublicTokenCreateRequest
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    sandboxPublicTokenCreate(sandboxPublicTokenCreateRequest: SandboxPublicTokenCreateRequest, options?: any): AxiosPromise<SandboxPublicTokenCreateResponse>;
    /**
     * The `/transactions/get` endpoint allows developers to receive user-authorized transaction data for credit, depository, and some loan-type accounts (the list of loan-type accounts supported is the same as for Liabilities; for details, see the `/liabilities/get` endpoint). For transaction history from investments accounts, use the [Investments endpoint](/docs-beta/api/products#investments) instead. Transaction data is standardized across financial institutions, and in many cases transactions are linked to a clean name, entity type, location, and category. Similarly, account data is standardized and returned with a clean name, number, balance, and other meta information where available.   Transactions are returned in reverse-chronological order, and the sequence of transaction ordering is stable and will not shift. Transactions are immutable but can be removed altogether by the institution; a removed transaction will no longer appear in `/transactions/get`.  Due to the potentially large number of transactions associated with an Item, results are paginated. Manipulate the `count` and `offset` parameters in conjunction with the `total_transactions` response body field to fetch all available transactions.  Note that data may not be immediately available to `/transactions/get`. Plaid will begin to prepare transactions data upon Item link, if Link was initialized with `transactions`, or upon the first call to `/transactions/get`, if it wasn\'t. To be alerted when transaction data is ready to be fetched, listen for the [`INITIAL_UPDATE`](/docs-beta/api/webhooks#transactions-initial_update) and [`HISTORICAL_UPDATE`](/docs-beta/api/webhooks#transactions-historical_update) webhooks. If no transaction history is ready when `/transactions/get` is called, it will return a `PRODUCT_NOT_READY` error.
     * @summary Fetch transaction data
     * @param {TransactionsGetRequest} transactionsGetRequest
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    transactionsGet(transactionsGetRequest: TransactionsGetRequest, options?: any): AxiosPromise<TransactionsGetResponse>;
    /**
     * `/transactions/refresh` is an optional endpoint for users of the Transactions product. It initiates an on-demand extraction to fetch the newest transactions for an Item. This on-demand extraction takes place in addition to the periodic extractions that automatically occur multiple times a day for any Transactions-enabled Item. If changes to transactions are discovered after calling `/transactions/refresh`, Plaid will fire a webhook: [`TRANSACTIONS_REMOVED`](/docs-beta/api/webhooks#deleted-transactions-detected) will be fired if any removed transactions are detected, and [`DEFAULT_UPDATE`](/docs-beta/api/webhooks#transactions-default_update) will be fired if any new transactions are detected. New transactions can be fetched by calling `/transactions/get`.  Access to `/transactions/refresh` in Production is specific to certain pricing plans. If you cannot access `/transactions/refresh` in Production, [contact Sales](https://www.plaid.com/contact) for assistance.
     * @summary Refresh transaction data
     * @param {TransactionsRefreshRequest} transactionsRefreshRequest
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    transactionsRefresh(transactionsRefreshRequest: TransactionsRefreshRequest, options?: any): AxiosPromise<TransactionsRefreshResponse>;
    /**
     * Plaid signs all outgoing webhooks and provides JSON Web Tokens (JWTs) so that you can verify the authenticity of any incoming webhooks to your application. A message signature is included in the `Plaid-Verification` header.  The `/webhook_verification_key/get` endpoint provides a JSON Web Key (JWK) that can be used to verify a JWT.
     * @summary Get webhook verification key
     * @param {WebhookVerificationKeyGetRequest} webhookVerificationKeyGetRequest
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    webhookVerificationKeyGet(webhookVerificationKeyGetRequest: WebhookVerificationKeyGetRequest, options?: any): AxiosPromise<WebhookVerificationKeyGetResponse>;
};
/**
 * PlaidApi - object-oriented interface
 * @export
 * @class PlaidApi
 * @extends {BaseAPI}
 */
export declare class PlaidApi extends BaseAPI {
    /**
     * The `/accounts/get`  endpoint can be used to retrieve information for any linked Item. Note that some information is nullable. Plaid will only return active bank accounts, i.e. accounts that are not closed and are capable of carrying a balance.
     * @summary Retrieve accounts
     * @param {AccountsGetRequest} accountsGetRequest
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof PlaidApi
     */
    accountsGet(accountsGetRequest: AccountsGetRequest, options?: any): Promise<import("axios").AxiosResponse<AccountsGetResponse>>;
    /**
     * Plaid can provide an Audit Copy of any Asset Report directly to a participating third party on your behalf. For example, Plaid can supply an Audit Copy directly to Fannie Mae on your behalf if you participate in the Day 1 Certaintyâ„¢ program. An Audit Copy contains the same underlying data as the Asset Report.   To grant access to an Audit Copy, use the `/asset_report/audit_copy/create` endpoint to create an `audit_copy_token` and then pass that token to the third party who needs access. Each third party has its own `auditor_id`, for example `fannie_mae`. Youâ€™ll need to create a separate Audit Copy for each third party to whom you want to grant access to the Report.
     * @summary Create Asset Report Audit Copy
     * @param {AssetReportAuditCopyCreateRequest} assetReportAuditCopyCreateRequest
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof PlaidApi
     */
    assetReportAuditCopyCreate(assetReportAuditCopyCreateRequest: AssetReportAuditCopyCreateRequest, options?: any): Promise<import("axios").AxiosResponse<AssetReportAuditCopyCreateResponse>>;
    /**
     *
     * @summary Get an Asset Report Audit Copy
     * @param {AssetReportAuditCopyGetRequest} assetReportAuditCopyGetRequest
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof PlaidApi
     */
    assetReportAuditCopyGet(assetReportAuditCopyGetRequest: AssetReportAuditCopyGetRequest, options?: any): Promise<import("axios").AxiosResponse<AssetReportGetResponse>>;
    /**
     * The `/asset_report/audit_copy/remove` endpoint allows you to remove an Audit Copy. Removing an Audit Copy invalidates the `audit_copy_token` associated with it, meaning both you and any third parties holding the token will no longer be able to use it to access Report data. Items associated with the Asset Report, the Asset Report itself and other Audit Copies of it are not affected and will remain accessible after removing the given Audit Copy.
     * @summary Remove Asset Report Audit Copy
     * @param {AssetReportAuditCopyRemoveRequest} assetReportAuditCopyRemoveRequest
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof PlaidApi
     */
    assetReportAuditCopyRemove(assetReportAuditCopyRemoveRequest: AssetReportAuditCopyRemoveRequest, options?: any): Promise<import("axios").AxiosResponse<AssetReportAuditCopyRemoveResponse>>;
    /**
     * The `/asset_report/create` endpoint initiates the process of creating an Asset Report, which can then be retrieved by passing the `asset_report_token` return value to the `/asset_report/get` or `/asset_report/pdf/get` endpoints.   The Asset Report takes some time to be created and is not available immediately after calling `/asset_report/create`. When the Asset Report is ready to be retrieved using `/asset_report/get` or `/asset_report/pdf/get`, Plaid will fire a `PRODUCT_READY` webhook. For full details of the webhook schema, see [Asset Report webhooks](/docs-beta/api/webhooks/#Assets-webhooks).  The `/asset_report/create` endpoint creates an Asset Report at a moment in time. Asset Reports are immutable. To get an updated Asset Report, use the `/asset_report/refresh` endpoint.
     * @summary Create an Asset Report
     * @param {AssetReportCreateRequest} assetReportCreateRequest
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof PlaidApi
     */
    assetReportCreate(assetReportCreateRequest: AssetReportCreateRequest, options?: any): Promise<import("axios").AxiosResponse<AssetReportCreateResponse>>;
    /**
     * By default, an Asset Report will contain all of the accounts on a given Item. In some cases, you may not want the Asset Report to contain all accounts. For example, you might have the end user choose which accounts are relevant in Link using the Select Account view, which you can enable in the dashboard. Or, you might always exclude certain account types or subtypes, which you can identify by using the `/accounts/get` endpoint. To narrow an Asset Report to only a subset of accounts, use the `/asset_report/filter` endpoint.  To exclude certain Accounts from an Asset Report, first use the `/asset_report/create` endpoint to create the report, then send the `asset_report_token` along with a list of `account_ids` to exclude to the `/asset_report/filter` endpoint, to create a new Asset Report which contains only a subset of the original Asset Report\'s data.  Because Asset Reports are immutable, calling `/asset_report/filter` does not alter the original Asset Report in any way; rather, `/asset_report/filter` creates a new Asset Report with a new token and id. Asset Reports created via `/asset_report/filter` do not contain new Asset data, and are not billed.  Plaid will fire a [`PRODUCT_READY`](/docs-beta/api/webhooks) webhook once generation of the filtered Asset Report has completed.
     * @summary Filter Asset Report
     * @param {AssetReportFilterRequest} assetReportFilterRequest
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof PlaidApi
     */
    assetReportFilter(assetReportFilterRequest: AssetReportFilterRequest, options?: any): Promise<import("axios").AxiosResponse<AssetReportFilterResponse>>;
    /**
     * The `/asset_report/get` endpoint retrieves the Asset Report in JSON format. Before calling `/asset_report/get`, you must first create the Asset Report using `/asset_report/create` (or filter an Asset Report using `/asset_report/filter`) and then wait for the [`PRODUCT_READY`](/docs-beta/api/webhooks) webhook to fire, indicating that the Report is ready to be retrieved.  By default, an Asset Report includes transaction descriptions as returned by the bank, as opposed to parsed and categorized by Plaid. You can also receive cleaned and categorized transactions, as well as additional insights like merchant name or location information. We call this an Asset Report with Insights. An Asset Report with Insights provides transaction category, location, and merchant information in addition to the transaction strings provided in a standard Asset Report.  To retrieve an Asset Report with Insights, call the `/asset_report/get` endpoint with `include_insights` set to `true`. Note that you will need to [contact us](https://dashboard.plaid.com/support) to get access to this feature.
     * @summary Get an Asset Report
     * @param {AssetReportGetRequest} assetReportGetRequest
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof PlaidApi
     */
    assetReportGet(assetReportGetRequest: AssetReportGetRequest, options?: any): Promise<import("axios").AxiosResponse<AssetReportGetResponse>>;
    /**
     * The `/asset_report/pdf/get` endpoint retrieves the Asset Report in PDF format. Before calling `/asset_report/pdf/get`, you must first create the Asset Report using `/asset_report/create` (or filter an Asset Report using `/asset_report/filter`) and then wait for the [`PRODUCT_READY`](/docs-beta/api/webhooks) webhook to fire, indicating that the Report is ready to be retrieved.  By default, an Asset Report includes transaction descriptions as returned by the bank, as opposed to parsed and categorized by Plaid. You can also receive cleaned and categorized transactions, as well as additional insights like merchant name or location information. We call this an Asset Report with Insights. An Asset Report with Insights provides transaction category, location, and merchant information in addition to the transaction strings provided in a standard Asset Report.  To retrieve an Asset Report with Insights, call the `/asset_report/pdf/get` endpoint with `include_insights` set to `true`. Note that you will need to [contact us](https://dashboard.plaid.com/support) to get access to this feature.  The response to `/asset_report/pdf/get` is the PDF binary data. The `request_id`  is returned in the `Plaid-Request-ID` header.  [View a sample PDF Asset Report with Insights](https://plaid.com/documents/sample-asset-report.pdf).
     * @summary Get a PDF Asset Report
     * @param {AssetReportPDFGetRequest} assetReportPDFGetRequest
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof PlaidApi
     */
    assetReportPDFGet(assetReportPDFGetRequest: AssetReportPDFGetRequest, options?: any): Promise<import("axios").AxiosResponse<any>>;
    /**
     * An Asset Report is an immutable snapshot of a user\'s assets. In order to \"refresh\" an Asset Report you created previously, you can use the `/asset_report/refresh` endpoint to create a new Asset Report based on the old one, but with the most recent data available.  The new Asset Report will contain the same Items as the original Report, as well as the same filters applied by any call to `/asset_report/filter`. By default, the new Asset Report will also use the same parameters you submitted with your original `/asset_report/create` request, but the original `days_requested` value and the values of any parameters in the `options` object can be overridden with new values. To change these arguments, simply supply new values for them in your request to `/asset_report/refresh`. Submit an empty string (\"\") for any previously-populated fields you would like set as empty.
     * @summary Refresh an Asset Report
     * @param {AssetReportRefreshRequest} assetReportRefreshRequest
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof PlaidApi
     */
    assetReportRefresh(assetReportRefreshRequest: AssetReportRefreshRequest, options?: any): Promise<import("axios").AxiosResponse<AssetReportRefreshResponse>>;
    /**
     * The `/item/remove` endpoint allows you to invalidate an `access_token`, meaning you will not be able to create new Asset Reports with it. Removing an Item does not affect any Asset Reports or Audit Copies you have already created, which will remain accessible until you remove them specifically.  The `/asset_report/remove` endpoint allows you to remove an Asset Report. Removing an Asset Report invalidates its `asset_report_token`, meaning you will no longer be able to use it to access Report data or create new Audit Copies. Removing an Asset Report does not affect the underlying Items, but does invalidate any `audit_copy_tokens` associated with the Asset Report.
     * @summary Delete an Asset Report
     * @param {AssetReportRemoveRequest} assetReportRemoveRequest
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof PlaidApi
     */
    assetReportRemove(assetReportRemoveRequest: AssetReportRemoveRequest, options?: any): Promise<import("axios").AxiosResponse<AssetReportRemoveResponse>>;
    /**
     * The `/auth/get` endpoint returns the bank account and bank identification numbers (such as routing numbers, for US accounts) associated with an Item\'s checking and savings accounts, along with high-level account data and balances when available.  Note: This request may take some time to complete if `auth` was not specified as an initial product when creating the Item. This is because Plaid must communicate directly with the institution to retrieve the data.
     * @summary Fetch auth data
     * @param {AuthGetRequest} authGetRequest
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof PlaidApi
     */
    authGet(authGetRequest: AuthGetRequest, options?: any): Promise<import("axios").AxiosResponse<AuthGetResponse>>;
    /**
     * The `/accounts/balance/get` endpoint returns the real-time balance for each of an Item\'s accounts. While other endpoints may return a balance object, only `/accounts/balance/get` forces the available and current balance fields to be refreshed rather than cached. This endpoint can be used for existing Items that were added via any of Plaidâ€™s other products. This endpoint can be used as long as Link has been initialized with any other product, `balance` itself is not a product that can be used to initialize Link.
     * @summary Fetch real-time balance data
     * @param {BalanceGetRequest} balanceGetRequest
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof PlaidApi
     */
    balanceGet(balanceGetRequest: BalanceGetRequest, options?: any): Promise<import("axios").AxiosResponse<BalanceGetResponse>>;
    /**
     * Send a request to the `/categories/get`  endpoint to get detailed information on categories returned by Plaid. This endpoint does not require authentication.
     * @summary Fetch Categories
     * @param {object} body
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof PlaidApi
     */
    categoriesGet(body: object, options?: any): Promise<import("axios").AxiosResponse<CategoriesGetResponse>>;
    /**
     * This endpoint creates a Deposit Switch entity which will be persisted throughout the lifecycle of the switch.
     * @summary Create a Deposit Switch
     * @param {DepositSwitchCreateRequest} depositSwitchCreateRequest
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof PlaidApi
     */
    depositSwitchCreate(depositSwitchCreateRequest: DepositSwitchCreateRequest, options?: any): Promise<import("axios").AxiosResponse<DepositSwitchCreateResponse>>;
    /**
     * This endpoint returns information related to how the consumer has configured their payroll allocation and the state of the switch. You can use this information to build logic related to the Consumerâ€™s direct deposit allocation preferences.
     * @summary Get a Deposit Switch
     * @param {DepositSwitchGetRequest} depositSwitchGetRequest
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof PlaidApi
     */
    depositSwitchGet(depositSwitchGetRequest: DepositSwitchGetRequest, options?: any): Promise<import("axios").AxiosResponse<DepositSwitchGetResponse>>;
    /**
     * In order for the consumer to take action, you will need to create a public token representing the Deposit Switch. This token is used to initialize Link. It can be used one time and expires after 30 minutes.
     * @summary Create a Deposit Switch token
     * @param {DepositSwitchTokenCreateRequest} depositSwitchTokenCreateRequest
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof PlaidApi
     */
    depositSwitchTokenCreate(depositSwitchTokenCreateRequest: DepositSwitchTokenCreateRequest, options?: any): Promise<import("axios").AxiosResponse<DepositSwitchTokenCreateResponse>>;
    /**
     * The `/identity/get` endpoint allows you to retrieve various account holder information on file with the financial institution, including names, emails, phone numbers, and addresses. Only name data is guaranteed to be returned; other fields will be empty arrays if not provided by the institution.  Note: This request may take some time to complete if identity was not specified as an initial product when creating the Item. This is because Plaid must communicate directly with the institution to retrieve the data.
     * @summary Fetch identity data
     * @param {IdentityGetRequest} identityGetRequest
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof PlaidApi
     */
    identityGet(identityGetRequest: IdentityGetRequest, options?: any): Promise<import("axios").AxiosResponse<IdentityGetResponse>>;
    /**
     * Returns a JSON response containing details on all financial institutions currently supported by Plaid. Because Plaid supports thousands of institutions, results are paginated.  This data changes frequently. If you store it locally on your system, be sure to update it regularly.
     * @summary Get details of all supported institutions
     * @param {InstitutionsGetRequest} institutionsGetRequest
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof PlaidApi
     */
    institutionsGet(institutionsGetRequest: InstitutionsGetRequest, options?: any): Promise<import("axios").AxiosResponse<InstitutionsGetResponse>>;
    /**
     * Returns a JSON response containing details on a specified financial institution currently supported by Plaid.
     * @summary Get details of an institution
     * @param {InstitutionsGetByIdRequest} institutionsGetByIdRequest
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof PlaidApi
     */
    institutionsGetByID(institutionsGetByIdRequest: InstitutionsGetByIdRequest, options?: any): Promise<import("axios").AxiosResponse<InstitutionsGetByIdResponse>>;
    /**
     * Returns a JSON response containing details for all institutions that match the query parameters
     * @summary Search institutions
     * @param {InstitutionSearchRequest} institutionSearchRequest
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof PlaidApi
     */
    institutionsSearch(institutionSearchRequest: InstitutionSearchRequest, options?: any): Promise<import("axios").AxiosResponse<InstitutionSearchResponse>>;
    /**
     * The `/investments/holdings/get` endpoint allows developers to receive user-authorized stock position data for `investment`-type accounts.
     * @summary Get Investment holdings
     * @param {InvestmentsHoldingsGetRequest} investmentsHoldingsGetRequest
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof PlaidApi
     */
    investmentsHoldingsGet(investmentsHoldingsGetRequest: InvestmentsHoldingsGetRequest, options?: any): Promise<import("axios").AxiosResponse<InvestmentsHoldingsGetResponse>>;
    /**
     * The `/investments/transactions/get` endpoint allows developers to retrieve user-authorized transaction data for investment accounts.   Transactions are returned in reverse-chronological order, and the sequence of transaction ordering is stable and will not shift.  Due to the potentially large number of investment transactions associated with an Item, results are paginated. Manipulate the count and offset parameters in conjunction with the `total_investment_transactions` response body field to fetch all available investment transactions.
     * @summary Get investment transactions
     * @param {InvestmentsTransactionsGetRequest} investmentsTransactionsGetRequest
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof PlaidApi
     */
    investmentsTransactionsGet(investmentsTransactionsGetRequest: InvestmentsTransactionsGetRequest, options?: any): Promise<import("axios").AxiosResponse<InvestmentsTransactionsGetResponse>>;
    /**
     * By default, the `access_token` associated with an Item does not expire and should be stored in a persistent, secure manner.  You can use the `/item/access_token/invalidate` endpoint to rotate the `access_token` associated with an Item. The endpoint returns a new `access_token` and immediately invalidates the previous `access_token`.
     * @summary Invalidate access_token
     * @param {ItemAccessTokenInvalidateRequest} itemAccessTokenInvalidateRequest
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof PlaidApi
     */
    itemAccessTokenInvalidate(itemAccessTokenInvalidateRequest: ItemAccessTokenInvalidateRequest, options?: any): Promise<import("axios").AxiosResponse<ItemAccessTokenInvalidateResponse>>;
    /**
     * Returns information about the status of an Item.
     * @summary Fetch an Item
     * @param {ItemGetRequest} itemGetRequest
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof PlaidApi
     */
    itemGet(itemGetRequest: ItemGetRequest, options?: any): Promise<import("axios").AxiosResponse<ItemGetResponse>>;
    /**
     * `/item/import` creates an Item via your Plaid Exchange Integration and returns an `access_token`. As part of an `/item/import` request, you will include a User ID (`user_auth.user_id`) and Authentication Token (`user_auth.auth_token`) that enable data aggregation through your Plaid Exchange API endpoints. These authentication principals are to be chosen by you.  Upon creating an Item via `/item/import`, Plaid will automatically begin an extraction of that Item through the Plaid Exchange infrastructure you have already integrated. This will automatically generate the Plaid native account ID for the account the user will switch their direct deposit to (`target_account_id`).
     * @summary Import Item
     * @param {ItemImportRequest} itemImportRequest
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof PlaidApi
     */
    itemImport(itemImportRequest: ItemImportRequest, options?: any): Promise<import("axios").AxiosResponse<ItemImportResponse>>;
    /**
     * Exchange a Link `public_token` for an API `access_token`. Link hands off the `public_token` client-side via the `onSuccess` callback once a user has successfully created an Item. The `public_token` is ephemeral and expires after 30 minutes.   The response also includes an `item_id` that should be stored with the `access_token`. The `item_id` is used to identify an Item in a webhook. The `item_id` can also be retrieved by making an `/item/get` request.
     * @summary Exchange public token for an access token
     * @param {ItemPublicTokenExchangeRequest} itemPublicTokenExchangeRequest
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof PlaidApi
     */
    itemPublicTokenExchange(itemPublicTokenExchangeRequest: ItemPublicTokenExchangeRequest, options?: any): Promise<import("axios").AxiosResponse<ItemPublicTokenExchangeResponse>>;
    /**
     * The `/item/remove`  endpoint allows you to remove an Item. Once removed, the `access_token`  associated with the Item is no longer valid and cannot be used to access any data that was associated with the Item.  Note that in the Development environment, issuing an `/item/remove`  request will not decrement your live credential count.
     * @summary Remove an Item
     * @param {ItemRemoveRequest} itemRemoveRequest
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof PlaidApi
     */
    itemRemove(itemRemoveRequest: ItemRemoveRequest, options?: any): Promise<import("axios").AxiosResponse<ItemRemoveResponse>>;
    /**
     * The POST `/item/webhook/update` allows you to update the webhook URL associated with an Item. This request triggers a [`WEBHOOK_UPDATE_ACKNOWLEDGED`](/docs-beta/webhooks/#item-webhook-url-updated) webhook to the newly specified webhook URL.
     * @summary Update Webhook URL
     * @param {ItemWebhookUpdateRequest} itemWebhookUpdateRequest
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof PlaidApi
     */
    itemWebhookUpdate(itemWebhookUpdateRequest: ItemWebhookUpdateRequest, options?: any): Promise<import("axios").AxiosResponse<ItemWebhookUpdateResponse>>;
    /**
     * The `/liabilities/get` endpoint returns various details about an Item with loan or credit accounts. Liabilities is supported for US and Canada accounts only. Currently supported account types are account type `credit` with account subtype `credit card` or `paypal`, and account type `loan` with account subtype `student`. To limit accounts listed in Link to types and subtypes supported by Liabilities, you can use the `account_filter` parameter when [creating a Link token](/docs-beta/api/tokens/#linktokencreate).   The types of information returned by Liabilities can include balances and due dates, loan terms, and account details such as original loan amount and guarantor. Data is refreshed approximately once per day; the latest data can be retrieved by calling `/liabilities/get`.  Note: This request may take some time to complete if `liabilities` was not specified as an initial product when creating the Item. This is because Plaid must communicate directly with the institution to retrieve the additional data.
     * @summary Fetch Liabilities data
     * @param {LiabilitiesGetRequest} liabilitiesGetRequest
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof PlaidApi
     */
    liabilitiesGet(liabilitiesGetRequest: LiabilitiesGetRequest, options?: any): Promise<import("axios").AxiosResponse<LiabilitiesGetResponse>>;
    /**
     * The `/link/token/create` endpoint creates a `link_token`, which is required as a parameter when initializing Link. Once Link has been initialized, it returns a `public_token`, which can then be exchanged for an `access_token` via `/item/public_token/exchange` as part of the main Link flow.   A `link_token` generated by `/link/token/create` is also used to initialize other Link flows, such as the update mode flow for tokens with expired credentials, or the Payment Initiation (Europe) flow.
     * @summary Create Link Token
     * @param {LinkTokenCreateRequest} linkTokenCreateRequest
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof PlaidApi
     */
    linkTokenCreate(linkTokenCreateRequest: LinkTokenCreateRequest, options?: any): Promise<import("axios").AxiosResponse<LinkTokenCreateResponse>>;
    /**
     * The `/link/token/get` endpoint gets information about a previously-created `link_token` using the `/link/token/create` endpoint. It can be useful for debugging purposes.
     * @summary Get Link Token
     * @param {LinkTokenGetRequest} linkTokenGetRequest
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof PlaidApi
     */
    linkTokenGet(linkTokenGetRequest: LinkTokenGetRequest, options?: any): Promise<import("axios").AxiosResponse<LinkTokenGetResponse>>;
    /**
     * After creating a payment recipient, you can use the `/payment_initiation/payment/create` endpoint to create a payment to that recipient.  Payment can be one-time or standing order (recurring) and can be denominated in either EUR or GBP.  In general, EUR-denominated payments will be sent via SEPA Credit Transfer and GBP-denominated payments will be sent via the Faster Payments network, but the payment network used will be determined by the institution. Payments sent via Faster Payments will typically arrive immediately, while payments sent via SEPA Credit Transfer will typically arrive in one business day.  Standing orders (recurring payments) must be denominated in GBP and can only be sent to recipients in the UK. Once created, standing order payments will continue indefinitely and cannot be modified or canceled via the API. To end or modify a standing order payment, the end user should contact their bank.
     * @summary Create a payment
     * @param {PaymentInitiationPaymentCreateRequest} paymentInitiationPaymentCreateRequest
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof PlaidApi
     */
    paymentInitiationPaymentCreate(paymentInitiationPaymentCreateRequest: PaymentInitiationPaymentCreateRequest, options?: any): Promise<import("axios").AxiosResponse<PaymentInitiationPaymentCreateResponse>>;
    /**
     * The `/payment_initiation/payment/list` endpoint can be used to retrieve all created payments. By default, the 10 most recent payments are returned. You can request more payments and paginate through the results using the optional `count` and `cursor` parameters.
     * @summary List payments
     * @param {PaymentInitiationPaymentListRequest} paymentInitiationPaymentListRequest
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof PlaidApi
     */
    paymentInitiationPaymentList(paymentInitiationPaymentListRequest: PaymentInitiationPaymentListRequest, options?: any): Promise<import("axios").AxiosResponse<PaymentInitiationPaymentListResponse>>;
    /**
     * Create a payment recipient for payment initiation.  The recipient must be in Europe, within a country that is a member of the Single Euro Payment Area (SEPA).  For a standing order (recurring) payment, the recipient must be in the UK.  The endpoint is idempotent: if a developer has already made a request with the same payment details, Plaid will return the same `recipient_id`.   In the Sandbox environment, you can use the `/payment_initiation/recipient/create` endpoint to generate recipients. Programmatic recipient creation in the Development and Production environments can be done after approval by Plaid\'s compliance team. Please [contact sales](https://plaid.com/contact/) for approval.
     * @summary Create payment recipient
     * @param {PaymentInitiationRecipientCreateRequest} paymentInitiationRecipientCreateRequest
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof PlaidApi
     */
    paymentInitiationRecipientCreate(paymentInitiationRecipientCreateRequest: PaymentInitiationRecipientCreateRequest, options?: any): Promise<import("axios").AxiosResponse<PaymentInitiationRecipientCreateResponse>>;
    /**
     * Get details about a payment recipient you have previously created.
     * @summary Get payment recipient
     * @param {PaymentInitiationRecipientGetRequest} paymentInitiationRecipientGetRequest
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof PlaidApi
     */
    paymentInitiationRecipientGet(paymentInitiationRecipientGetRequest: PaymentInitiationRecipientGetRequest, options?: any): Promise<import("axios").AxiosResponse<PaymentInitiationRecipientGetResponse>>;
    /**
     * The `/payment_initiation/recipient/list` endpoint list the payment recipients that you have previously created.
     * @summary List payment recipients
     * @param {PaymentInitiationRecipientListRequest} paymentInitiationRecipientListRequest
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof PlaidApi
     */
    paymentInitiationRecipientList(paymentInitiationRecipientListRequest: PaymentInitiationRecipientListRequest, options?: any): Promise<import("axios").AxiosResponse<PaymentInitiationRecipientListResponse>>;
    /**
     * The `/payment_initiation/payment/get` endpoint can be used to check the status of a payment, as well as to receive basic information such as recipient and payment amount. In the case of standing orders, the `/payment_initiation/payment/get` endpoint will provide information about the status of the overall standing order itself; the API cannot be used to retrieve payment status for individual payments within a standing order.
     * @summary Get payment details
     * @param {PaymentIntiationPaymentGetRequest} paymentIntiationPaymentGetRequest
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof PlaidApi
     */
    paymentIntiationPaymentGet(paymentIntiationPaymentGetRequest: PaymentIntiationPaymentGetRequest, options?: any): Promise<import("axios").AxiosResponse<PaymentIntiationPaymentGetResponse>>;
    /**
     * Used to create a token suitable for sending to Apex to enable Plaid-Apex integrations.
     * @summary Create Apex bank account token
     * @param {ProcessorApexProcessorTokenCreateRequest} processorApexProcessorTokenCreateRequest
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof PlaidApi
     */
    processorApexProcessorTokenCreate(processorApexProcessorTokenCreateRequest: ProcessorApexProcessorTokenCreateRequest, options?: any): Promise<import("axios").AxiosResponse<ProcessorTokenCreateResponse>>;
    /**
     * The `/processor/auth/get` endpoint returns the bank account and bank identification number (such as the routing number, for US accounts), for a checking or savings account that\'s associated with a given `processor_token`. The endpoint also returns high-level account data and balances when available.
     * @summary Get Auth data
     * @param {ProcessorAuthGetRequest} processorAuthGetRequest
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof PlaidApi
     */
    processorAuthGet(processorAuthGetRequest: ProcessorAuthGetRequest, options?: any): Promise<import("axios").AxiosResponse<ProcessorAuthGetResponse>>;
    /**
     * The `/processor/balance/get` endpoint returns the real-time balance for each of an Item\'s accounts. While other endpoints may return a balance object, only `/processor/balance/get` forces the available and current balance fields to be refreshed rather than cached.
     * @summary Get Balance data
     * @param {ProcessorBalanceGetRequest} processorBalanceGetRequest The &#x60;/processor/balance/get&#x60; endpoint returns the real-time balance for the account associated with a given &#x60;processor_token&#x60;.  The current balance is the total amount of funds in the account. The available balance is the current balance less any outstanding holds or debits that have not yet posted to the account.  Note that not all institutions calculate the available balance. In the event that available balance is unavailable from the institution, Plaid will return an available balance value of &#x60;null&#x60;.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof PlaidApi
     */
    processorBalanceGet(processorBalanceGetRequest: ProcessorBalanceGetRequest, options?: any): Promise<import("axios").AxiosResponse<ProcessorBalanceGetResponse>>;
    /**
     * The `/processor/identity/get` endpoint allows you to retrieve various account holder information on file with the financial institution, including names, emails, phone numbers, and addresses.
     * @summary Fetch Identity data
     * @param {ProcessorIdentityGetRequest} processorIdentityGetRequest
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof PlaidApi
     */
    processorIdentityGet(processorIdentityGetRequest: ProcessorIdentityGetRequest, options?: any): Promise<import("axios").AxiosResponse<ProcessorIdentityGetResponse>>;
    /**
     * Used to create a token suitable for sending to Stripe to enable Plaid-Stripe integrations.
     * @summary Create Stripe bank account token
     * @param {ProcessorStripeBankAccountTokenCreateRequest} processorStripeBankAccountTokenCreateRequest
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof PlaidApi
     */
    processorStripeBankAccountTokenCreate(processorStripeBankAccountTokenCreateRequest: ProcessorStripeBankAccountTokenCreateRequest, options?: any): Promise<import("axios").AxiosResponse<ProcessorStripeBankAccountTokenCreateResponse>>;
    /**
     * Used to create a token suitable for sending to one of Plaid\'s partners to enable integrations. Note that Stripe partnerships use bank account tokens instead; see `/processor/stripe/bank_account_token/create` for creating tokens for use with Stripe integrations.
     * @summary Create processor token
     * @param {ProcessorTokenCreateRequest} processorTokenCreateRequest
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof PlaidApi
     */
    processorTokenCreate(processorTokenCreateRequest: ProcessorTokenCreateRequest, options?: any): Promise<import("axios").AxiosResponse<ProcessorTokenCreateResponse>>;
    /**
     * The `/sandbox/item/fire_webhook` endpoint is used to test that code correctly handles webhooks. Calling this endpoint triggers a Transactions `DEFAULT_UPDATE` webhook to be fired for a given Sandbox Item. If the Item does not support Transactions, a `SANDBOX_PRODUCT_NOT_ENABLED` error will result.
     * @summary Fire a test webhook
     * @param {SandboxItemFireWebhookRequest} sandboxItemFireWebhookRequest
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof PlaidApi
     */
    sandboxItemFireWebhook(sandboxItemFireWebhookRequest: SandboxItemFireWebhookRequest, options?: any): Promise<import("axios").AxiosResponse<SandboxItemFireWebhookResponse>>;
    /**
     * `/sandbox/item/reset_login/` forces an Item into an `ITEM_LOGIN_REQUIRED` state in order to simulate an Item whose login is no longer valid. This makes it easy to test Link\'s [update mode](/docs-beta/link/update-mode) flow in the Sandbox environment.  After calling `/sandbox/item/reset_login`, You can then use Plaid Link update mode to restore the Item to a good state. An `ITEM_LOGIN_REQUIRED` webhook will also be fired after a call to this endpoint, if one is associated with the Item.   In the Sandbox, Items will transition to an `ITEM_LOGIN_REQUIRED` error state automatically after 30 days, even if this endpoint is not called.
     * @summary Force a Sandbox Item into an error state
     * @param {SandboxItemResetLoginRequest} sandboxItemResetLoginRequest
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof PlaidApi
     */
    sandboxItemResetLogin(sandboxItemResetLoginRequest: SandboxItemResetLoginRequest, options?: any): Promise<import("axios").AxiosResponse<SandboxItemResetLoginResponse>>;
    /**
     * The `/sandbox/item/set_verification_status` endpoint can be used to change the verification status of an Item in in the Sandbox in order to simulate the Automated Micro-deposit flow.   Note that not all Plaid developer accounts are enabled for micro-deposit based verification by default. Your account must be enabled for this feature in order to test it in Sandbox. To enable this features or check your status, contact your account manager or [submit a product access Support ticket](https://dashboard.plaid.com/support/new/product-and-development/product-troubleshooting/request-product-access).  For more information on testing Automated Micro-deposits in Sandbox, see [Auth full coverage testing](/docs-beta/auth/coverage/testing#).
     * @summary Set verification status for Sandbox account
     * @param {SandboxItemSetVerificationStatusRequest} sandboxItemSetVerificationStatusRequest
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof PlaidApi
     */
    sandboxItemSetVerificationStatus(sandboxItemSetVerificationStatusRequest: SandboxItemSetVerificationStatusRequest, options?: any): Promise<import("axios").AxiosResponse<SandboxItemSetVerificationStatusResponse>>;
    /**
     * Use the `/sandbox/public_token/create`  endpoint to create a valid `public_token`  for an arbitrary institution ID, initial products, and test credentials. The created `public_token` maps to a new Sandbox Item. You can then call `/item/public_token/exchange` to exchange the `public_token` for an `access_token` and perform all API actions. `/sandbox/public_token/create` can also be used with the [`user_custom` test username](/docs-beta/sandbox/user-custom) to generate a test account with custom data.
     * @summary Create a test Item
     * @param {SandboxPublicTokenCreateRequest} sandboxPublicTokenCreateRequest
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof PlaidApi
     */
    sandboxPublicTokenCreate(sandboxPublicTokenCreateRequest: SandboxPublicTokenCreateRequest, options?: any): Promise<import("axios").AxiosResponse<SandboxPublicTokenCreateResponse>>;
    /**
     * The `/transactions/get` endpoint allows developers to receive user-authorized transaction data for credit, depository, and some loan-type accounts (the list of loan-type accounts supported is the same as for Liabilities; for details, see the `/liabilities/get` endpoint). For transaction history from investments accounts, use the [Investments endpoint](/docs-beta/api/products#investments) instead. Transaction data is standardized across financial institutions, and in many cases transactions are linked to a clean name, entity type, location, and category. Similarly, account data is standardized and returned with a clean name, number, balance, and other meta information where available.   Transactions are returned in reverse-chronological order, and the sequence of transaction ordering is stable and will not shift. Transactions are immutable but can be removed altogether by the institution; a removed transaction will no longer appear in `/transactions/get`.  Due to the potentially large number of transactions associated with an Item, results are paginated. Manipulate the `count` and `offset` parameters in conjunction with the `total_transactions` response body field to fetch all available transactions.  Note that data may not be immediately available to `/transactions/get`. Plaid will begin to prepare transactions data upon Item link, if Link was initialized with `transactions`, or upon the first call to `/transactions/get`, if it wasn\'t. To be alerted when transaction data is ready to be fetched, listen for the [`INITIAL_UPDATE`](/docs-beta/api/webhooks#transactions-initial_update) and [`HISTORICAL_UPDATE`](/docs-beta/api/webhooks#transactions-historical_update) webhooks. If no transaction history is ready when `/transactions/get` is called, it will return a `PRODUCT_NOT_READY` error.
     * @summary Fetch transaction data
     * @param {TransactionsGetRequest} transactionsGetRequest
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof PlaidApi
     */
    transactionsGet(transactionsGetRequest: TransactionsGetRequest, options?: any): Promise<import("axios").AxiosResponse<TransactionsGetResponse>>;
    /**
     * `/transactions/refresh` is an optional endpoint for users of the Transactions product. It initiates an on-demand extraction to fetch the newest transactions for an Item. This on-demand extraction takes place in addition to the periodic extractions that automatically occur multiple times a day for any Transactions-enabled Item. If changes to transactions are discovered after calling `/transactions/refresh`, Plaid will fire a webhook: [`TRANSACTIONS_REMOVED`](/docs-beta/api/webhooks#deleted-transactions-detected) will be fired if any removed transactions are detected, and [`DEFAULT_UPDATE`](/docs-beta/api/webhooks#transactions-default_update) will be fired if any new transactions are detected. New transactions can be fetched by calling `/transactions/get`.  Access to `/transactions/refresh` in Production is specific to certain pricing plans. If you cannot access `/transactions/refresh` in Production, [contact Sales](https://www.plaid.com/contact) for assistance.
     * @summary Refresh transaction data
     * @param {TransactionsRefreshRequest} transactionsRefreshRequest
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof PlaidApi
     */
    transactionsRefresh(transactionsRefreshRequest: TransactionsRefreshRequest, options?: any): Promise<import("axios").AxiosResponse<TransactionsRefreshResponse>>;
    /**
     * Plaid signs all outgoing webhooks and provides JSON Web Tokens (JWTs) so that you can verify the authenticity of any incoming webhooks to your application. A message signature is included in the `Plaid-Verification` header.  The `/webhook_verification_key/get` endpoint provides a JSON Web Key (JWK) that can be used to verify a JWT.
     * @summary Get webhook verification key
     * @param {WebhookVerificationKeyGetRequest} webhookVerificationKeyGetRequest
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof PlaidApi
     */
    webhookVerificationKeyGet(webhookVerificationKeyGetRequest: WebhookVerificationKeyGetRequest, options?: any): Promise<import("axios").AxiosResponse<WebhookVerificationKeyGetResponse>>;
}
